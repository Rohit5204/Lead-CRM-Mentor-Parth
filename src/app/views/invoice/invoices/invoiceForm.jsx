import React, { useState } from 'react';
import { uid } from 'uid';
import { styled } from '@mui/system';
import InvoiceItem from './InvoiceItem';
import InvoiceModal from './InvoiceModal';
import ReviewInvoice from './ReviewInvoice';
import incrementString from '../helpers/incrementString';
import { Form, Row, Col, Button, InputGroup } from 'react-bootstrap';
import {
  Box,
  Icon,
  IconButton,
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableRow,
} from '@mui/material';

const date = new Date();
const today = date.toLocaleDateString('en-GB', {
  month: 'numeric',
  day: 'numeric',
  year: 'numeric',
});
const Container = styled('div')(({ theme }) => ({
  margin: '30px',
  [theme.breakpoints.down('sm')]: { margin: '16px' },
  '& .breadcrumb': {
    marginBottom: '30px',
    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },
  },
}));
const StyledTable = styled(Table)(() => ({
  whiteSpace: 'pre',
  '& thead': {
    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },
  },
  '& tbody': {
    '& tr': { '& td': { paddingLeft: 0 } },
  },
}));

const InvoiceForm = () => {
  const [isOpen, setIsOpen] = useState(false);
  // Open Dailog
  const [show, setShow] = useState(false);
  const closeDialog = () => setShow(false);
  const showDialog = () => setShow(true);
  // End Dialog
  const [discount, setDiscount] = useState('');
  const [tax, setTax] = useState('');
  const [invoiceNumber, setInvoiceNumber] = useState(1201);
  const [cashierName, setCashierName] = useState('');
  const [companyEmail, setCompanyEmail] = useState('');
  const [companyContact, setCompanyContact] = useState('');
  const [companyAddress, setCompanyAddress] = useState('');
  const [companyGstNo, setCompanyGstNo] = useState('');
  const [companyStateName, setCompanyStateName] = useState('');
  const [customerName, setCustomerName] = useState('');
  const [panNo, setPanNo] = useState('');
  const [clientEmail, setClientEmail] = useState('');
  const [clientContact, setClientContact] = useState('');
  const [clientAddress, setClientAddress] = useState('');
  const [clientGstNo, setClientGstNo] = useState('');
  const [items, setItems] = useState([
    {
      id: uid(6),
      name: '',
      qty: 1,
      price: '1.00',
    },
  ]);

  const reviewInvoiceHandler = (event) => {
    event.preventDefault();
    setIsOpen(true);
  };

  const addNextInvoiceHandler = () => {
    setInvoiceNumber((prevNumber) => incrementString(prevNumber));
    setItems([
      {
        id: uid(6),
        name: '',
        qty: 1,
        price: '1.00',
      },
    ]);
  };

  const addItemHandler = () => {
    const id = uid(6);
    setItems((prevItem) => [
      ...prevItem,
      {
        id: id,
        name: '',
        qty: 1,
        price: '1.00',
      },
    ]);
  };

  const deleteItemHandler = (id) => {
    setItems((prevItem) => prevItem.filter((item) => item.id !== id));
  };

  const edtiItemHandler = (event) => {
    const editedItem = {
      id: event.target.id,
      name: event.target.name,
      value: event.target.value,
    };

    const newItems = items.map((items) => {
      for (const key in items) {
        if (key === editedItem.name && items.id === editedItem.id) {
          items[key] = editedItem.value;
        }
      }
      return items;
    });

    setItems(newItems);
  };

  const subtotal = items.reduce((prev, curr) => {
    if (curr.name.trim().length > 0) return prev + Number(curr.price * Math.floor(curr.qty));
    else return prev;
  }, 0);
  const taxRate = (tax * subtotal) / 100;
  const discountRate = (discount * subtotal) / 100;
  const total = subtotal - discountRate + taxRate;

  return (
    <Container>
      <Box>
        {/* <form className="relative flex flex-col px-2 md:flex-row" onSubmit={reviewInvoiceHandler}> */}
        <Form>
          <Row className="mt-5">
            <Col></Col>
            <Col className="col-sm-9">
              <h4 className="text-center  font-bold">TAX INVOICE</h4>
            </Col>
            <Col className="col-sm-2">
              <button type="button" className="btn btn-primary" onClick={reviewInvoiceHandler}>
                Review Invoice
              </button>
            </Col>
          </Row>
          <Row>
            <Col>
              <Form.Label>Invoice Number:</Form.Label>
              <Form.Control
                value={invoiceNumber}
                onChange={(event) => setInvoiceNumber(event.target.value)}
                placeholder="Enter the Invoice Number"
              />
            </Col>
            <Col>
              <Form.Label>Current Date:</Form.Label>
              <Form.Control
                readOnly
                //   type="date"
                //   onChange={(e) => setQuotationDate(e.target.value)}
                value={today}
              />
            </Col>

            <Col>
              <Form.Label> Generated By:</Form.Label>
              <Form.Control
                required
                className="flex-1"
                placeholder="Cashier name"
                type="text"
                name="cashierName"
                id="cashierName"
                value={cashierName}
                onChange={(event) => setCashierName(event.target.value)}
              />
            </Col>
          </Row>
          <div className="mt-2">
            {/* <div className="my-6 flex-1 space-y-2  rounded-md bg-white p-4 shadow-sm sm:space-y-4 md:p-6"> */}
            {/* <div className="flex flex-col justify-between space-y-2 border-b border-gray-900/10 pb-4 md:flex-row md:items-center md:space-y-0">
          <div className="flex space-x-2">
            <span className="font-bold">Current Date: </span>
            <span>{today}</span>
          </div>
          <div className="flex items-center space-x-2">
            <label className="font-bold" htmlFor="invoiceNumber">
              Invoice Number:
            </label>
            <input
              required
              className="max-w-[130px]"
              type="number"
              name="invoiceNumber"
              id="invoiceNumber"
              min="1"
              step="1"
              value={invoiceNumber}
              onChange={(event) => setInvoiceNumber(event.target.value)}
            />
          </div>
               </div> */}
            <b>
              <h6 style={{ color: 'green' }}>Company Detail's</h6>
            </b>
            <Row className="mt-1">
              <Col>
                <Form.Label>Company Email:</Form.Label>
                <Form.Control
                  required
                  // className="flex-1"
                  placeholder="Company Email"
                  // type="text"
                  // name="companyEmail"
                  // id="companyEmail"
                  value={companyEmail}
                  onChange={(event) => setCompanyEmail(event.target.value)}
                />
              </Col>
              <Col>
                <Form.Label>Company Contact:</Form.Label>
                <Form.Control
                  required
                  className="flex-1"
                  placeholder="Company Contact"
                  type="text"
                  name="companyContact"
                  id="companyContact"
                  value={companyContact}
                  onChange={(event) => setCompanyContact(event.target.value)}
                />
              </Col>
            </Row>
            <Row className="mt-1">
              <Col>
                <Form.Group className="mb-3" controlId="exampleForm.ControlTextarea1">
                  <Form.Label>Address</Form.Label>
                  <Form.Control
                    as="textarea"
                    rows={3}
                    onChange={(event) => setCompanyAddress(event.target.value)}
                    value={companyAddress}
                    placeholder="Company Address"
                  />
                </Form.Group>
              </Col>
            </Row>
            <Row className="mt-1">
              <Col>
                <Form.Label>Company GST NO:</Form.Label>
                <Form.Control
                  required
                  className="flex-1"
                  placeholder="Enter GST Number"
                  type="text"
                  name="companyGstNo"
                  id="companyGstNo"
                  value={companyGstNo}
                  onChange={(event) => setCompanyGstNo(event.target.value)}
                />
              </Col>
              <Col>
                <Form.Label>State Name:</Form.Label>
                <Form.Control
                  required
                  className="flex-1"
                  placeholder="Sate Name"
                  type="text"
                  name="companyStateName"
                  id="companyStateName"
                  value={companyStateName}
                  onChange={(event) => setCompanyStateName(event.target.value)}
                />
              </Col>
            </Row>
            <b>
              <h6 className="mt-2" style={{ color: 'green' }}>
                Client Detail's
              </h6>
            </b>
            <Row className="mt-1">
              <Col>
                <Form.Label>Biller/Customer Name:</Form.Label>
                <Form.Control
                  required
                  className="flex-1"
                  placeholder="Customer name"
                  type="text"
                  name="customerName"
                  id="customerName"
                  value={customerName}
                  onChange={(event) => setCustomerName(event.target.value)}
                />
              </Col>
              <Col>
                <Form.Label>Pan Number:</Form.Label>
                <Form.Control
                  required
                  className="flex-1"
                  placeholder="Customer Pan No"
                  type="text"
                  name="panNo"
                  id="panNo"
                  value={panNo}
                  onChange={(event) => setPanNo(event.target.value)}
                />
              </Col>
            </Row>
            <Row className="mt-1">
              <Col>
                <Form.Label>Customer Email:</Form.Label>
                <Form.Control
                  required
                  className="flex-1"
                  placeholder="Customer Email"
                  type="text"
                  name="clientEmail"
                  id="clientEmail"
                  value={clientEmail}
                  onChange={(event) => setClientEmail(event.target.value)}
                />
              </Col>
              <Col>
                <Form.Label>Customer Contact No:</Form.Label>
                <Form.Control
                  required
                  className="flex-1"
                  placeholder="Customer Contact"
                  type="text"
                  name="clientContact"
                  id="clientContact"
                  value={clientContact}
                  onChange={(event) => setClientContact(event.target.value)}
                />
              </Col>
            </Row>
            <Row className="mt-1">
              <Col>
                <Form.Group className="mb-3" controlId="exampleForm.ControlTextarea1">
                  <Form.Label>Address</Form.Label>
                  <Form.Control
                    as="textarea"
                    rows={3}
                    onChange={(event) => setClientAddress(event.target.value)}
                    value={clientAddress}
                    placeholder="Customer Address"
                  />
                </Form.Group>
              </Col>
            </Row>
            <Row className="mt-1">
              <Col>
                <Form.Label>Customer GST NO:</Form.Label>
                <Form.Control
                  required
                  className="flex-1"
                  placeholder="Enter GST Number"
                  type="text"
                  name="clientGstNo"
                  id="clientGstNo"
                  value={clientGstNo}
                  onChange={(event) => setClientGstNo(event.target.value)}
                />
              </Col>
              <Col>
                <Form.Label>Tax rate:</Form.Label>
                <InputGroup className="mb-3">
                  <br />
                  <Form.Control
                    required
                    type="number"
                    name="tax"
                    id="tax"
                    min="5"
                    step="1"
                    placeholder="Tax Rate"
                    value={tax}
                    onChange={(event) => setTax(event.target.value)}
                  />
                  <InputGroup.Text>%</InputGroup.Text>
                </InputGroup>

                <span className="rounded-r-md bg-gray-200 py-2 px-4 text-gray-500 shadow-sm"></span>
              </Col>
            </Row>
            {/* <Row>
                <Col>
                  <div className="space-y-2">
                    <label className="text-sm font-bold md:text-base" htmlFor="tax">
                      Tax rate:
                    </label>
                    <div className="flex items-center">
                      <input
                        className="w-full rounded-r-none bg-white shadow-sm"
                        type="number"
                        name="tax"
                        id="tax"
                        min="5"
                        step="1"
                        placeholder="Tax Rate"
                        value={tax}
                        onChange={(event) => setTax(event.target.value)}
                      />
                      <span className="rounded-r-md bg-gray-200 py-2 px-4 text-gray-500 shadow-sm">
                        %
                      </span>
                    </div>
                  </div>
                </Col>
              </Row> */}
            {/* <div className="grid grid-cols-2 gap-2 pt-4 pb-8">
                <label htmlFor="cashierName" className="text-sm font-bold sm:text-base">
                  Cashier:
                </label>
                <input
                  required
                  className="flex-1"
                  placeholder="Cashier name"
                  type="text"
                  name="cashierName"
                  id="cashierName"
                  value={cashierName}
                  onChange={(event) => setCashierName(event.target.value)}
                />
                <label
                  htmlFor="customerName"
                  className="col-start-2 row-start-1 text-sm font-bold md:text-base"
                >
                  Customer:
                </label>
                <input
                  required
                  className="flex-1"
                  placeholder="Customer name"
                  type="text"
                  name="customerName"
                  id="customerName"
                  value={customerName}
                  onChange={(event) => setCustomerName(event.target.value)}
                />
              </div> */}
            <Box className="text-center mt-2" width="100%" overflow="auto">
              {/* Table Section */}
              <Row>
                <Col></Col>
                <Col className="col-sm-9">
                  <h4 style={{ color: 'green' }}>Product Invoice List</h4>
                </Col>
                <Col>
                  <Col className="col-sm-1">
                    <button type="button" onClick={addItemHandler} className="btn btn-success">
                      Add Items
                    </button>
                  </Col>
                </Col>
              </Row>
              <StyledTable>
                <TableHead>
                  <TableRow>
                    <TableCell align="center">Product Name</TableCell>
                    <TableCell align="center">Quatity</TableCell>
                    <TableCell align="center">Unit Price</TableCell>
                    <TableCell align="center">Action</TableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  {/* {items.map((catalogue, index) => {
                      return (
                        <TableRow key={index}>
                          <TableCell align="justify">{catalogue.name}</TableCell>
                          <TableCell align="justify">{catalogue.qty}</TableCell>
                          <TableCell align="justify">{catalogue.price}</TableCell>

                          <TableCell align="center">
                            <IconButton>
                              <Icon color="warning">delete</Icon>
                            </IconButton>
                          </TableCell>
                        </TableRow>
                      );
                    })} */}
                  {items.map((item) => (
                    <InvoiceItem
                      align="justify"
                      key={item.id}
                      id={item.id}
                      name={item.name}
                      qty={item.qty}
                      price={item.price}
                      onDeleteItem={deleteItemHandler}
                      onEdtiItem={edtiItemHandler}
                    />
                  ))}
                </TableBody>
              </StyledTable>
            </Box>
            {/* <table className="w-full p-4 text-left">
                <thead>
                  <tr className="border-b border-gray-900/10 text-sm md:text-base">
                    <th>ITEM</th>
                    <th>QTY</th>
                    <th className="text-center">PRICE</th>
                    <th className="text-center">ACTION</th>
                  </tr>
                </thead>
                <tbody>
                  {items.map((item) => (
                    <InvoiceItem
                      key={item.id}
                      id={item.id}
                      name={item.name}
                      qty={item.qty}
                      price={item.price}
                      onDeleteItem={deleteItemHandler}
                      onEdtiItem={edtiItemHandler}
                    />
                  ))}
                </tbody>
              </table> */}
            {/* <button
                className="rounded-md bg-blue-500 px-4 py-2 text-sm text-white shadow-sm hover:bg-blue-600"
                type="button"
                onClick={addItemHandler}
              >
                Add Item
              </button> */}
            <Row>
              <Col></Col>
              <Col></Col>
              <Col>
                <b>
                  <Form.Label>Subtotal:</Form.Label>
                </b>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <Form.Label style={{ color: 'green' }} className="ml-5">
                  ₹ {subtotal.toFixed(2)}
                </Form.Label>
              </Col>
            </Row>

            <Row>
              <Col></Col>
              <Col></Col>
              <Col>
                <b>
                  <Form.Label>Tax Rate({tax || '0'}%):</Form.Label>
                </b>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <Form.Label style={{ color: 'green' }} className="ml-4">
                  ₹{taxRate.toFixed(2)}
                </Form.Label>
              </Col>
            </Row>
            <Row>
              <Col></Col>
              <Col></Col>

              <Col>
                <hr />
                <b>
                  <Form.Label>Grand Total:</Form.Label>
                </b>
                &nbsp;&nbsp;&nbsp;
                <Form.Label style={{ color: 'green' }} className="ml-5">
                  ₹{total % 1 === 0 ? total : total.toFixed(2)}
                </Form.Label>
              </Col>
            </Row>
          </div>
        </Form>
        {/* <div className="basis-1/4 bg-transparent">
          <div className=" sticky top-0 z-10 space-y-4 divide-y divide-gray-900/10 pb-8 md:pt-6 md:pl-4"> */}
        <ReviewInvoice
          show={isOpen}
          setIsOpen={setIsOpen}
          invoiceInfo={{
            invoiceNumber,
            companyEmail,
            companyAddress,
            companyContact,
            companyGstNo,
            companyStateName,
            clientEmail,
            clientContact,
            clientAddress,
            clientGstNo,
            panNo,
            cashierName,
            customerName,
            subtotal,
            taxRate,
            discountRate,
            total,
          }}
          items={items}
          onAddNextInvoice={addNextInvoiceHandler}
        />
        {/* <InvoiceModal
          isOpen={isOpen}
          setIsOpen={setIsOpen}
          invoiceInfo={{
            invoiceNumber,
            cashierName,
            customerName,
            subtotal,
            taxRate,
            discountRate,
            total,
          }}
          items={items}
          onAddNextInvoice={addNextInvoiceHandler}
        /> */}
        {/* </div>
        </div> */}
        {/* </form> */}
      </Box>
    </Container>
  );
};

export default InvoiceForm;
