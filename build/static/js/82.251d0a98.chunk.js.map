{"version":3,"sources":["app/views/employee/employees/manageEmployee.jsx"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","ManageEmployee","navigate","useNavigate","useState","userData","setUserData","items","localStorage","getItem","roleCode","userId","headers","useEffect","axios","get","BASE_URL","then","response","data","className","routeSegments","name","path","container","spacing","item","xs","md","style","textAlign","marginLeft","id","size","variant","disableElevation","onClick","width","overflow","borderLeft","borderRight","align","map","subscriber","index","branchManagerId","firstName","lastName","email","mobileNo","userName","roleName","recodStatus","color","label","to","state"],"mappings":"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","file":"static/js/82.251d0a98.chunk.js","sourcesContent":["import { styled } from '@mui/system';\r\nimport { Breadcrumb } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Icon,\r\n  Chip,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n  Grid,\r\n} from '@mui/material';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\n\r\nconst ManageEmployee = () => {\r\n  // const [obj1, setObj1] = useState(null);\r\n  // const [APIData, setAPIData] = useState([]);\r\n  // const [show, setShow] = useState(false);\r\n  // //Dialog Form\r\n  // const handleClose = () => setShow(false);\r\n\r\n  // const handleShow = (catalogue) => {\r\n  //   setObj1(catalogue);\r\n  //   setShow(true);\r\n  // };\r\n  const navigate = useNavigate();\r\n  const changePage = () => {\r\n    navigate('/employees/addEmpBranch');\r\n  };\r\n  const [userData, setUserData] = useState([]);\r\n  const items = localStorage.getItem('accessToken');\r\n  const roleCode = localStorage.getItem('roleCode');\r\n  const userId = localStorage.getItem('userId');\r\n  const headers = {\r\n    \"x-access-token\": items,\r\n    \"roleCode\": roleCode,\r\n    \"userId\": userId\r\n  }\r\n  //get method\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + `/api/getMasterData?masterName=usermaster`,\r\n      { headers: headers }).then((response) => {\r\n        setUserData(response.data.data);\r\n      });\r\n  }, [userData]);\r\n\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb\r\n            routeSegments={[\r\n              { name: 'Manage Employee', path: '/employees/manageEmployee' },\r\n              { name: 'Employee Detail Page' },\r\n            ]}\r\n          />\r\n        </Box>\r\n        <Grid container spacing={4}>\r\n\r\n          <Grid item xs={12} md={10}>\r\n            <h4 style={{ textAlign: 'center', marginLeft: '5px' }}>Manage Employee Login </h4>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <div className=\"d-flex justify-content-end\">\r\n              <Button\r\n                id=\"demo-customized-button\"\r\n                size='large'\r\n\r\n                variant=\"contained\"\r\n                disableElevation\r\n                onClick={changePage}>\r\n                ADD\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n\r\n        </Grid>\r\n        <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n          {/* Table Section */}\r\n\r\n          <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n            <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n              <TableRow>\r\n                <TableCell align=\"center\">User Id</TableCell>\r\n                <TableCell align=\"center\">Name</TableCell>\r\n                <TableCell align=\"center\">Email</TableCell>\r\n                <TableCell align=\"center\">Mobile Number</TableCell>\r\n                <TableCell align=\"center\">Username</TableCell>\r\n                <TableCell align=\"center\">Role</TableCell>\r\n                <TableCell align=\"center\">Status</TableCell>\r\n                <TableCell align=\"center\">Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {userData.map((subscriber, index) => {\r\n                if (subscriber.branchManagerId == userId) {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell align=\"center\">{subscriber.userId}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {subscriber.firstName} {subscriber.lastName}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{subscriber.email}</TableCell>\r\n                      <TableCell align=\"center\">{subscriber.mobileNo}</TableCell>\r\n                      <TableCell align=\"center\">{subscriber.userName}</TableCell>\r\n                      <TableCell align=\"center\">{subscriber.roleName}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {subscriber.recodStatus == 1 ? (\r\n                          <Chip color=\"success\" label=\"Active\" />\r\n                        ) : (\r\n                          <Chip color=\"warning\" label=\"Inactive\" />\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Link to=\"/employees/editEmployee\" state={subscriber}>\r\n                          <IconButton>\r\n                            <Icon color=\"success\">edit</Icon>\r\n                          </IconButton>\r\n                        </Link>\r\n                        {/* <IconButton>\r\n                      <Icon color=\"warning\">delete</Icon>\r\n                    </IconButton> */}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                }\r\n\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageEmployee;\r\n"],"sourceRoot":""}