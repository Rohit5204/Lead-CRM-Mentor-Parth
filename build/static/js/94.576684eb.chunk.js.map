{"version":3,"sources":["app/views/material-kit/forms/SimpleForm.jsx","app/views/material-kit/forms/StepperForm.jsx","app/views/material-kit/forms/AppForm.jsx"],"names":["TextField","styled","TextValidator","width","marginBottom","SimpleForm","useState","date","Date","state","setState","useEffect","ValidatorForm","addValidationRule","value","password","removeValidationRule","handleChange","event","persist","target","name","username","firstName","creditCard","mobile","confirmPassword","gender","email","onSubmit","onError","Grid","container","spacing","item","lg","md","sm","xs","sx","mt","type","id","onChange","errorMessages","label","validators","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","props","mb","RadioGroup","row","FormControlLabel","labelPlacement","control","Radio","color","Checkbox","Button","variant","Icon","pl","textTransform","getStepContent","stepIndex","className","Row","Col","StepperForm","useLocation","React","activeStep","setActiveStep","steps","Stepper","alternativeLabel","map","Step","StepLabel","length","onClick","pt","disabled","prevActiveStep","ml","Container","theme","margin","breakpoints","down","AppForm","Box","routeSegments","path","Stack","title"],"mappings":"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","file":"static/js/94.576684eb.chunk.js","sourcesContent":["import { DatePicker } from '@mui/lab';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Icon,\r\n  Radio,\r\n  RadioGroup,\r\n  styled,\r\n} from '@mui/material';\r\nimport { Span } from 'app/components/Typography';\r\nimport { useEffect, useState } from 'react';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\n\r\nconst TextField = styled(TextValidator)(() => ({\r\n  width: '100%',\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst SimpleForm = () => {\r\n  const [state, setState] = useState({ date: new Date() });\r\n\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      if (value !== state.password) return false;\r\n\r\n      return true;\r\n    });\r\n    return () => ValidatorForm.removeValidationRule('isPasswordMatch');\r\n  }, [state.password]);\r\n\r\n  const handleSubmit = (event) => {\r\n    // console.log(\"submitted\");\r\n    // console.log(event);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleDateChange = (date) => setState({ ...state, date });\r\n\r\n  const {\r\n    username,\r\n    firstName,\r\n    creditCard,\r\n    mobile,\r\n    password,\r\n    confirmPassword,\r\n    gender,\r\n    date,\r\n    email,\r\n  } = state;\r\n\r\n  return (\r\n    <div>\r\n      <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n        <Grid container spacing={6}>\r\n          <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"standard-basic\"\r\n              value={username || ''}\r\n              onChange={handleChange}\r\n              errorMessages={['this field is required']}\r\n              label=\"Username (Min length 4, Max length 9)\"\r\n              validators={['required', 'minStringLength: 4', 'maxStringLength: 9']}\r\n            />\r\n\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              label=\"First Name\"\r\n              onChange={handleChange}\r\n              value={firstName || ''}\r\n              validators={['required']}\r\n              errorMessages={['this field is required']}\r\n            />\r\n\r\n            <TextField\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              value={email || ''}\r\n              onChange={handleChange}\r\n              validators={['required', 'isEmail']}\r\n              errorMessages={['this field is required', 'email is not valid']}\r\n            />\r\n\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                value={date}\r\n                onChange={handleDateChange}\r\n                renderInput={(props) => (\r\n                  <TextField\r\n                    {...props}\r\n                    label=\"Date picker\"\r\n                    id=\"mui-pickers-date\"\r\n                    sx={{ mb: 2, width: '100%' }}\r\n                  />\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n\r\n            <TextField\r\n              sx={{ mb: 4 }}\r\n              type=\"number\"\r\n              name=\"creditCard\"\r\n              label=\"Credit Card\"\r\n              onChange={handleChange}\r\n              value={creditCard || ''}\r\n              errorMessages={['this field is required']}\r\n              validators={['required', 'minStringLength:16', 'maxStringLength: 16']}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"mobile\"\r\n              value={mobile || ''}\r\n              label=\"Mobile Nubmer\"\r\n              onChange={handleChange}\r\n              validators={['required']}\r\n              errorMessages={['this field is required']}\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              value={password || ''}\r\n              onChange={handleChange}\r\n              validators={['required']}\r\n              errorMessages={['this field is required']}\r\n            />\r\n            <TextField\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              onChange={handleChange}\r\n              label=\"Confirm Password\"\r\n              value={confirmPassword || ''}\r\n              validators={['required', 'isPasswordMatch']}\r\n              errorMessages={['this field is required', \"password didn't match\"]}\r\n            />\r\n            <RadioGroup\r\n              row\r\n              name=\"gender\"\r\n              sx={{ mb: 2 }}\r\n              value={gender || ''}\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Male\"\r\n                label=\"Male\"\r\n                labelPlacement=\"end\"\r\n                control={<Radio color=\"secondary\" />}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Female\"\r\n                label=\"Female\"\r\n                labelPlacement=\"end\"\r\n                control={<Radio color=\"secondary\" />}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Others\"\r\n                label=\"Others\"\r\n                labelPlacement=\"end\"\r\n                control={<Radio color=\"secondary\" />}\r\n              />\r\n            </RadioGroup>\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox />}\r\n              label=\"I have read and agree to the terms of service.\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n          <Icon>send</Icon>\r\n          <Span sx={{ pl: 1, textTransform: 'capitalize' }}>Submit</Span>\r\n        </Button>\r\n      </ValidatorForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleForm;\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nfunction getSteps() {\r\n  return ['Active Leads', 'Followups', 'Meetings', 'Quotations'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return (\r\n        <div className=\"App\">\r\n          <Row>\r\n            <Col>\r\n              <label>\r\n                Lead Sr No: <h5> </h5>\r\n              </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                Lead Name: <h5></h5>\r\n              </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                Lead Date: <h5> </h5>\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>Client Name: </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                Mobile Number: <h5> </h5>\r\n              </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                Email Id: <h5> </h5>\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>\r\n                Lead Source: <h5> </h5>\r\n              </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                Interested In: <h5> </h5>\r\n              </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                Assign To: <h5> </h5>\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>\r\n                Address: <h5> </h5>\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>\r\n                Pin Code: <h5></h5>\r\n              </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                City: <h5></h5>\r\n              </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                State: <h5></h5>\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>\r\n                Country: <h5> </h5>\r\n              </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                Status: <h5></h5>\r\n              </label>\r\n            </Col>\r\n            <Col>\r\n              <label>\r\n                Label:<h5> </h5>\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n\r\n    case 1:\r\n      return (\r\n        <div>\r\n          <Row>\r\n            <Col>\r\n              <label>Ex Name:</label>\r\n            </Col>\r\n            <Col>\r\n              <label>Followup Date:</label>\r\n            </Col>\r\n            <Col>\r\n              <label>Followup Time:</label>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>Remarks:</label>\r\n            </Col>\r\n            <Col>\r\n              <label>Next Followup Date:</label>\r\n            </Col>\r\n            <Col>\r\n              <label>Next Followup Time:</label>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n\r\n    case 2:\r\n      return (\r\n        <div>\r\n          <Row>\r\n            <Col>\r\n              <label>Ex Name:</label>\r\n            </Col>\r\n            <Col>\r\n              <label>Date:</label>\r\n            </Col>\r\n            <Col>\r\n              <label>From Time:</label>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>To Time:</label>\r\n            </Col>\r\n            <Col>\r\n              <label>Remarks:</label>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    case 3:\r\n      return (\r\n        <div>\r\n          <Row>\r\n            <Col>\r\n              <label>Ex Name:</label>\r\n            </Col>\r\n            <Col>\r\n              <label>Date:</label>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>Attachment:</label>\r\n            </Col>\r\n            <Col>\r\n              <label>Amount:</label>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>Remarks:</label>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    // default:\r\n    //   return;\r\n  }\r\n}\r\n\r\nexport default function StepperForm() {\r\n  const location = useLocation();\r\n  // console.log(location.state);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\r\n  const handleBack = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n  const handleReset = () => setActiveStep(0);\r\n\r\n  return (\r\n    <Box>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n      <Box mt={4}>\r\n        {activeStep === steps.length ? (\r\n          <Box>\r\n            <Typography>All steps completed ,Go Back</Typography>\r\n\r\n            <Button sx={{ mt: 2 }} variant=\"contained\" color=\"secondary\" onClick={handleReset}>\r\n              Start Again\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Typography>{getStepContent(activeStep)}</Typography>\r\n\r\n            <Box pt={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n              >\r\n                Back\r\n              </Button>\r\n\r\n              <Button sx={{ ml: 2 }} variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Stack } from \"@mui/material\";\r\nimport { Box, styled } from \"@mui/system\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport SimpleForm from \"./SimpleForm\";\r\nimport StepperForm from \"./StepperForm\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst AppForm = () => {\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Form\" }]} />\r\n      </Box>\r\n\r\n      <Stack spacing={3}>\r\n        <SimpleCard title=\"Simple Form\">\r\n          <SimpleForm />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"stepper form\">\r\n          <StepperForm />\r\n        </SimpleCard>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppForm;\r\n"],"sourceRoot":""}