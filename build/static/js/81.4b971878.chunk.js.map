{"version":3,"sources":["app/views/material-kit/checkbox/FormGroupCheckbox.jsx","app/views/material-kit/checkbox/LabelledCheckbox.jsx","app/views/material-kit/checkbox/PlacingCheckboxLabel.jsx","app/views/material-kit/checkbox/SimpleCheckbox.jsx","app/views/material-kit/checkbox/AppCheckbox.jsx"],"names":["AppButtonRoot","styled","display","margin","theme","spacing","FormGroupCheckbox","React","useState","gilad","jason","antoine","state","setState","handleChange","name","event","target","checked","error","filter","v","length","FormControl","component","className","FormLabel","FormGroup","FormControlLabel","control","Checkbox","onChange","value","label","FormHelperText","required","GreenCheckbox","color","green","LabelledCheckbox","checkedA","checkedB","checkedF","checkedG","row","disabled","indeterminate","icon","checkedIcon","fontSize","PlacingCheckboxLabel","setValue","labelPlacement","SimpleCheckbox","inputProps","defaultChecked","Container","breakpoints","down","marginBottom","AppCheckbox","Box","routeSegments","path","title","py"],"mappings":"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","file":"static/js/81.4b971878.chunk.js","sourcesContent":["import {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormHelperText,\r\n  FormLabel,\r\n  styled,\r\n} from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst AppButtonRoot = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  '& .formControl': { margin: theme.spacing(2) },\r\n}));\r\n\r\nexport default function FormGroupCheckbox() {\r\n  const [state, setState] = React.useState({\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: false,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  const { gilad, jason, antoine } = state;\r\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\r\n\r\n  return (\r\n    <AppButtonRoot>\r\n      <FormControl component=\"fieldset\" className=\"formControl\">\r\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\r\n            label=\"Gilad Gray\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\r\n            label=\"Jason Killian\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\r\n            }\r\n            label=\"Antoine Llorca\"\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>Be careful</FormHelperText>\r\n      </FormControl>\r\n\r\n      <FormControl required error={error} component=\"fieldset\" className=\"formControl\">\r\n        <FormLabel component=\"legend\">Pick two</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\r\n            label=\"Gilad Gray\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\r\n            label=\"Jason Killian\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\r\n            }\r\n            label=\"Antoine Llorca\"\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormHelperText>You can display an error</FormHelperText>\r\n      </FormControl>\r\n    </AppButtonRoot>\r\n  );\r\n}\r\n","import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport { styled } from '@mui/material';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { green } from '@mui/material/colors';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport React from 'react';\r\n\r\nconst GreenCheckbox = styled(Checkbox)(() => ({\r\n  color: green[400],\r\n  '&$checked': {\r\n    color: green[600],\r\n  },\r\n}));\r\n\r\nexport default function LabelledCheckbox() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox checked={state.checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" />\r\n        }\r\n        label=\"Secondary\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedB}\r\n            onChange={handleChange('checkedB')}\r\n            value=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Primary\"\r\n      />\r\n      <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Uncontrolled\" />\r\n      <FormControlLabel disabled control={<Checkbox value=\"checkedD\" />} label=\"Disabled\" />\r\n      <FormControlLabel disabled control={<Checkbox checked value=\"checkedE\" />} label=\"Disabled\" />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedF}\r\n            onChange={handleChange('checkedF')}\r\n            value=\"checkedF\"\r\n            indeterminate\r\n          />\r\n        }\r\n        label=\"Indeterminate\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <GreenCheckbox\r\n            color=\"default\"\r\n            checked={state.checkedG}\r\n            onChange={handleChange('checkedG')}\r\n            value=\"checkedG\"\r\n          />\r\n        }\r\n        label=\"Custom color\"\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} value=\"checkedH\" />}\r\n        label=\"Custom icon\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n            value=\"checkedI\"\r\n          />\r\n        }\r\n        label=\"Custom size\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","import Checkbox from '@mui/material/Checkbox';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport React from 'react';\r\n\r\nfunction PlacingCheckboxLabel() {\r\n  const [value, setValue] = React.useState('female');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n      <FormGroup aria-label=\"position\" name=\"position\" value={value} onChange={handleChange} row>\r\n        <FormControlLabel\r\n          value=\"top\"\r\n          label=\"Top\"\r\n          labelPlacement=\"top\"\r\n          control={<Checkbox color=\"primary\" />}\r\n        />\r\n        <FormControlLabel\r\n          value=\"start\"\r\n          label=\"Start\"\r\n          labelPlacement=\"start\"\r\n          control={<Checkbox color=\"primary\" />}\r\n        />\r\n        <FormControlLabel\r\n          value=\"bottom\"\r\n          label=\"Bottom\"\r\n          labelPlacement=\"bottom\"\r\n          control={<Checkbox color=\"primary\" />}\r\n        />\r\n        <FormControlLabel\r\n          value=\"end\"\r\n          label=\"End\"\r\n          labelPlacement=\"end\"\r\n          control={<Checkbox color=\"primary\" />}\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default PlacingCheckboxLabel;\r\n","import { Box, Checkbox } from '@mui/material';\r\nimport React from 'react';\r\n\r\nexport default function SimpleCheckbox() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Checkbox\r\n        value=\"checkedA\"\r\n        checked={state.checkedA}\r\n        onChange={handleChange('checkedA')}\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n      <Checkbox\r\n        checked={state.checkedB}\r\n        onChange={handleChange('checkedB')}\r\n        value=\"checkedB\"\r\n        color=\"primary\"\r\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n      />\r\n      <Checkbox value=\"checkedC\" inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\r\n      <Checkbox disabled value=\"checkedD\" inputProps={{ 'aria-label': 'disabled checkbox' }} />\r\n\r\n      <Checkbox\r\n        disabled\r\n        checked\r\n        value=\"checkedE\"\r\n        inputProps={{ 'aria-label': 'disabled checked checkbox' }}\r\n      />\r\n\r\n      <Checkbox\r\n        checked={state.checkedF}\r\n        onChange={handleChange('checkedF')}\r\n        value=\"checkedF\"\r\n        indeterminate\r\n        inputProps={{ 'aria-label': 'indeterminate checkbox' }}\r\n      />\r\n\r\n      <Checkbox\r\n        defaultChecked\r\n        color=\"default\"\r\n        value=\"checkedG\"\r\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport FormGroupCheckbox from './FormGroupCheckbox';\r\nimport LabelledCheckbox from './LabelledCheckbox';\r\nimport PlacingCheckboxLabel from './PlacingCheckboxLabel';\r\nimport SimpleCheckbox from './SimpleCheckbox';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst AppCheckbox = () => {\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Chckbox' }]}\r\n        />\r\n      </Box>\r\n\r\n      <SimpleCard title=\"simple checkbox\">\r\n        <SimpleCheckbox />\r\n      </SimpleCard>\r\n\r\n      <Box py=\"12px\" />\r\n\r\n      <SimpleCard title=\"Checkbox with Label\">\r\n        <LabelledCheckbox />\r\n      </SimpleCard>\r\n\r\n      <Box py=\"12px\" />\r\n\r\n      <SimpleCard title=\"Checkbox with Form Group\">\r\n        <FormGroupCheckbox />\r\n      </SimpleCard>\r\n\r\n      <Box py=\"12px\" />\r\n\r\n      <SimpleCard title=\"Checkbox with Different Label Placement\">\r\n        <PlacingCheckboxLabel />\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppCheckbox;\r\n"],"sourceRoot":""}