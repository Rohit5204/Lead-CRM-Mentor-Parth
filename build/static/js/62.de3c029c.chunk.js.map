{"version":3,"sources":["app/views/quotation/quotations/editQuotation.jsx","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js","app/views/quotation/quotations/itemFields.jsx","app/views/quotation/quotations/quotationItems.jsx"],"names":["StyledTable","styled","Table","whiteSpace","paddingLeft","paddingRight","Container","theme","margin","breakpoints","down","marginBottom","Div","EditQuotation","useState","selected","setSelected","checked","setChecked","setQuotationNumber","quotationDate","setQuotationDate","comapnyAddress","setComapnyAddress","companyEmail","setCompanyEmail","companyContact","setCompanyContact","billTo","setBillTo","clientAddress","setClientAddress","clientEmail","setClientEmail","clientContact","setClientContact","gstNo","setGstNo","gst","setGst","discount","setDiscount","gsQuantity","remarks","setRemarks","bankDetails","setBankDetails","leadData","setLeadData","catalogueData","setCatalogueData","id","uid","name","qty","price","items","setItems","instalmentNumber","instalmentAmount","instalmentDate","createdBy","instalments","headers","localStorage","getItem","useEffect","axios","post","leadId","userId","statusId","then","res","i","data","length","current","catId","gsName","navigate","useNavigate","addQuotation","quotationNumber","gsCatalogueId","amount","grandTotal","isDraft","edtiItemHandler","event","editedItem","target","value","newItems","map","key","reduce","prev","curr","trim","Number","Math","floor","deleteItemHandler","prevItem","filter","item","className","routeSegments","path","title","style","color","Label","width","freeSolo","autoComplete","autoHighlight","options","renderInput","params","onChange","e","variant","label","size","Control","type","Group","controlId","as","rows","placeholder","Text","overflow","onClick","align","onDeleteItem","onEdtiItem","disabled","Check","fullWidth","preventDefault","console","log","alert","context","React","displayName","InputGroupText","createWithBsPrefix","Component","InputGroup","ref","bsPrefix","hasValidation","props","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","Provider","children","classNames","Object","assign","Radio","FormCheckInput","Checkbox","Row","decoratedBsPrefix","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","getListItemTextUtilityClass","slot","generateUtilityClass","listItemTextClasses","generateUtilityClasses","getListItemIconUtilityClass","listItemIconClasses","getMenuItemUtilityClass","menuItemClasses","_excluded","MenuItemRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","dense","divider","disableGutters","gutters","_extends","typography","body1","display","justifyContent","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","borderBottom","vars","palette","backgroundClip","backgroundColor","action","hover","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginTop","spacing","inset","marginLeft","minWidth","up","body2","fontSize","MenuItem","inProps","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndexProp","tabIndex","other","_objectWithoutPropertiesLoose","ListContext","childContext","menuItemRef","useEnhancedEffect","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","clsx","ItemField","onEditItem","cellData","min","max","step","required","QuotationEMI","IconButton","Icon"],"mappings":"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","file":"static/js/62.de3c029c.chunk.js","sourcesContent":["import { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Form, Row, Col, Button, InputGroup } from 'react-bootstrap';\r\nimport QuotationItem from './quotationItems';\r\nimport { uid } from 'uid';\r\nimport {\r\n    Box, MenuItem, FormControl, Select, Autocomplete, TextField,\r\n    Table,\r\n    Icon,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst EditQuotation = () => {\r\n    const [selected, setSelected] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const [quotationNumber, setQuotationNumber] = useState('');\r\n    const [quotationDate, setQuotationDate] = useState('');\r\n    const [comapnyAddress, setComapnyAddress] = useState('');\r\n    const [companyEmail, setCompanyEmail] = useState('');\r\n    const [companyContact, setCompanyContact] = useState('');\r\n    const [billTo, setBillTo] = useState('');\r\n    const [clientAddress, setClientAddress] = useState('');\r\n    const [clientEmail, setClientEmail] = useState('');\r\n    const [clientContact, setClientContact] = useState('');\r\n    const [gstNo, setGstNo] = useState('');\r\n    const [gst, setGst] = useState(18);\r\n    const [discount, setDiscount] = useState(0);\r\n\r\n    const [gsQuantity, setGsQuantity] = useState('');\r\n\r\n    const [remarks, setRemarks] = useState('');\r\n    const [bankDetails, setBankDetails] = useState('');\r\n    const [leadData, setLeadData] = useState([]);\r\n    const [catalogueData, setCatalogueData] = useState([]);\r\n    const [items, setItems] = useState([\r\n        {\r\n            id: uid(6),\r\n            name: '',\r\n            qty: 0,\r\n            price: 0,\r\n        },\r\n    ]);\r\n    const [instalments, setInstalments] = useState([\r\n        {\r\n            instalmentNumber: uid(1),\r\n            instalmentAmount: 0,\r\n            instalmentDate: '',\r\n            createdBy: '',\r\n        }\r\n    ]);\r\n    const token = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": token,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n    useEffect(() => {\r\n        axios.post(`https://43.204.38.243:3001/api/getFilteredLeadData`, {\r\n            leadId: 0, userId: 0, statusId: 0,\r\n        }, { headers: headers }).then((res) => {\r\n            for (var i = 0; i < res.data.data.length; i++) {\r\n                setLeadData(current => [...current, res.data.data[i].name]);\r\n            }\r\n        });\r\n        axios.post(`https://43.204.38.243:3001/api/getCatalogue`, { catId: 0 },\r\n            { headers: headers }).then((res) => {\r\n                for (var i = 0; i < res.data.data.length; i++) {\r\n                    setCatalogueData(current => [...current, res.data.data[i].gsName]);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n    const changePage = () => {\r\n        navigate('/quotations/manageQuotation');\r\n    };\r\n\r\n    const addQuotation = {\r\n        leadId: leadData.leadId,\r\n        quotationNumber: \"Q00001\",\r\n        quotationDate: quotationDate,\r\n        comapnyAddress: comapnyAddress,\r\n        companyEmail: companyEmail,\r\n        companyContact: companyContact,\r\n        billTo: billTo,\r\n        clientAddress: clientAddress,\r\n        clientEmail: clientEmail,\r\n        clientContact: clientContact,\r\n        gstNo: gstNo,\r\n        gsCatalogueId: catalogueData.id,\r\n        amount: amount,\r\n        gsQuantity: gsQuantity,\r\n        gst: gst,\r\n        discount: discount,\r\n        grandTotal: grandTotal,\r\n        remarks: remarks,\r\n        bankDetails: bankDetails,\r\n        instalments: instalments,\r\n        isDraft: 1,\r\n        createdBy: 1,\r\n    };\r\n    const edtiItemHandler = (event) => {\r\n        const editedItem = {\r\n            id: event.target.id,\r\n            name: event.target.name,\r\n            value: event.target.value,\r\n        };\r\n\r\n        const newItems = items.map((items) => {\r\n            for (const key in items) {\r\n                if (key === editedItem.name && items.id === editedItem.id) {\r\n                    items[key] = editedItem.value;\r\n                }\r\n            }\r\n            return items;\r\n        });\r\n\r\n        setItems(newItems);\r\n    };\r\n    const amount = items.reduce((prev, curr) => {\r\n        if (curr.name.trim().length > 0) return prev + Number(curr.price * Math.floor(curr.qty));\r\n        else return prev;\r\n    }, 0);\r\n    const taxRate = (gst * amount) / 100;\r\n    const discountRate = (discount * amount) / 100;\r\n    const grandTotal = amount - discountRate + taxRate;\r\n    //empty the form Text\r\n    const blankForm = () => {\r\n        setQuotationNumber('');\r\n        setQuotationDate('');\r\n        setComapnyAddress('');\r\n    };\r\n    //Add data in the table\r\n    const postData = () => {\r\n        console.log({ addQuotation });\r\n        axios.post(`https://43.204.38.243:3001/api/saveQuotation`, addQuotation);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        blankForm();\r\n        alert('Catalogue Successfully Created');\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setSelected(event.target.value);\r\n    };\r\n    const addItemHandler = () => {\r\n        const id = uid(6);\r\n        setItems((prevItem) => [\r\n            ...prevItem,\r\n            {\r\n                id: id,\r\n                name: '',\r\n                qty: 1,\r\n                price: '1.00',\r\n            },\r\n        ]);\r\n    };\r\n    const deleteItemHandler = (id) => {\r\n        setItems((prevItem) => prevItem.filter((item) => item.id !== id));\r\n    };\r\n    return (\r\n        <Container>\r\n            <Box className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Quotation', path: '/quotations/addQuotation' },\r\n                        { name: 'Add Quotation Page' },\r\n                    ]}\r\n                />\r\n            </Box>\r\n            <SimpleCard title=\"Request Quotation\">\r\n                <h6 style={{ color: 'green' }}>Company Detail's</h6>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Lead</Form.Label>\r\n                        <FormControl>\r\n                            <Autocomplete\r\n                                style={{ width: 450 }}\r\n                                freeSolo\r\n                                autoComplete\r\n                                autoHighlight\r\n                                options={leadData}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        onChange={(e) => setLeadData(e.target.value)}\r\n                                        variant=\"outlined\"\r\n                                        label=\"Select the Lead\"\r\n                                        size=\"small\"\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormControl>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Quotation Date</Form.Label>\r\n                        <Form.Control\r\n                            type=\"date\"\r\n                            onChange={(e) => setQuotationDate(e.target.value)}\r\n                            value={quotationDate}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                onChange={(e) => setComapnyAddress(e.target.value)}\r\n                                value={comapnyAddress}\r\n                                placeholder=\"Comapny Address\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>email</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setCompanyEmail(e.target.value)}\r\n                                value={companyEmail}\r\n                                placeholder=\"Company Email\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Contact</Form.Label>\r\n                        <InputGroup className=\"mb-1\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>phone</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setCompanyContact(e.target.value)}\r\n                                value={companyContact}\r\n                                placeholder=\"Company Contact\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <h6 style={{ color: 'green' }}>Client Detail's</h6>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Bill To / Customer Name</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>person</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setBillTo(e.target.value)}\r\n                                value={billTo}\r\n                                placeholder=\"Billing Person Name\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>GST NO</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                GST\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setGstNo(e.target.value)}\r\n                                value={gstNo}\r\n                                placeholder=\"Enter the GST Number\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Client Email</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>email</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setClientEmail(e.target.value)}\r\n                                value={clientEmail}\r\n                                placeholder=\"demo@gmail.com\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Client Contact</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>phone</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setClientContact(e.target.value)}\r\n                                value={clientContact}\r\n                                placeholder=\"demo@gmail.com\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-2\">\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Client Address</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                onChange={(e) => setClientAddress(e.target.value)}\r\n                                value={clientAddress}\r\n                                placeholder=\"Customer  Address\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <br />\r\n                {/* <h6>Please Fill Detail's Properly</h6> */}\r\n                <Box className=\"text-center mt-2\" width=\"100%\" overflow=\"auto\">\r\n                    {/* Table Section */}\r\n                    <Row>\r\n                        <Col></Col>\r\n                        <Col className=\"col-sm-9\">\r\n                            <h4 style={{ color: 'green' }}>Product Quotation List</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <Col className=\"col-sm-1\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={addItemHandler}\r\n                                    className=\"btn btn-success\"\r\n                                >\r\n                                    Add Items\r\n                                </button>\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    <StyledTable>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Product Name</TableCell>\r\n                                <TableCell align=\"center\">Quantity</TableCell>\r\n                                <TableCell align=\"center\">Unit Price</TableCell>\r\n                                <TableCell align=\"center\">Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {items.map((item) => (\r\n                                <QuotationItem\r\n                                    align=\"justify\"\r\n                                    key={item.id}\r\n                                    id={item.id}\r\n                                    name={item.name}\r\n                                    qty={item.qty}\r\n                                    price={item.price}\r\n                                    onDeleteItem={deleteItemHandler}\r\n                                    onEdtiItem={edtiItemHandler}\r\n                                />\r\n                            ))}\r\n                        </TableBody>\r\n                    </StyledTable>\r\n                </Box>\r\n                <Row>\r\n                    {/* <Col>\r\n            <Form.Label>Catalogue</Form.Label>\r\n            <FormControl>\r\n              <Autocomplete\r\n                style={{ width: 470 }}\r\n                freeSolo\r\n                autoComplete\r\n                autoHighlight\r\n                options={catalogueData}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    onChange={(e) => setCatalogueData(e.target.value)}\r\n                    variant=\"outlined\"\r\n                    label=\"Select the Product or Service\"\r\n                    size=\"small\"\r\n                  />\r\n                )}\r\n              />\r\n            </FormControl>\r\n          </Col> */}\r\n                    <Col>\r\n                        <Form.Label>Tax Rate </Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <Form.Control\r\n                                value={gst}\r\n                                onChange={(e) => setGst(e.target.value)}\r\n                                placeholder=\"Enter the Tax Rate\"\r\n                            /> <InputGroup.Text>%</InputGroup.Text>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Discount rate:</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <Form.Control\r\n                                placeholder=\"Discount Rate\"\r\n                                value={discount}\r\n                                onChange={(event) => setDiscount(event.target.value)}\r\n                            />\r\n                            <InputGroup.Text>%</InputGroup.Text>\r\n                        </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Amount</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\" style={{ color: 'green' }}>\r\n                                <b> ₹</b>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                disabled\r\n                                placeholder=\"Sub Total Amount\"\r\n                                // onChange={(e) => setAmount(e.target.value)}\r\n                                value={amount}\r\n                            /></InputGroup>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Label>Grand Total</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\" style={{ color: 'green' }}>\r\n                                <b> ₹</b>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                disabled\r\n                                placeholder=\"Total Amount\"\r\n                                // onChange={(e) => setGrandTotal(e.target.value)}\r\n                                value={grandTotal}\r\n                            /></InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Note or Remark</Form.Label>\r\n                        <Form.Control\r\n                            placeholder=\"Write a Remark\"\r\n                            onChange={(e) => setRemarks(e.target.value)}\r\n                            value={remarks}\r\n                        />\r\n                    </Col>\r\n                    <Col className=\"mt-2\">\r\n                        <Form.Label>Bank Details</Form.Label>\r\n                        {/* <input type=\"checkbox\" /> */}\r\n                        <Form.Check\r\n                            type=\"switch\"\r\n                            onChange={() => setChecked(!checked)}\r\n                            checked={checked}\r\n                            id=\"custom-switch\"\r\n                            label=\"If you have Payment Detail's,Please Check the Box\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {checked ? (\r\n                            <Row>\r\n                                <Col>\r\n                                    {/* <Box sx={{ minWidth: 120 }} className=\"mt-1\"> */}\r\n                                    <FormControl fullWidth>\r\n                                        <label>Choose Payment Option</label>\r\n                                        <Select value={selected} label=\"Age\" onChange={handleChange}>\r\n                                            <MenuItem value=\"\">Choose Payment Option</MenuItem>\r\n                                            <MenuItem value=\"netBanking\">Net Banking</MenuItem>\r\n                                            <MenuItem value=\"bank\">Bank Transfer</MenuItem>\r\n                                            <MenuItem value=\"gPay\">G-Pay</MenuItem>\r\n                                            <MenuItem value=\"amazonPay\">Amazon Pay</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {/* </Box> */}\r\n                                    {/* <FormControl sx={{ m: 0, minWidth: 450 }} size=\"small\" className=\"mt-1\">\r\n                    <Form.Label>Choose Payment Option</Form.Label>\r\n                    <Select\r\n                      value={selected}\r\n                      // label=\"selected\"\r\n                      onChange={(e) => setSelected(!selected)}\r\n                    >\r\n                      <MenuItem value=\"\">Choose Payment Option</MenuItem>\r\n                      <MenuItem value=\"Net Banking\">Net Banking</MenuItem>\r\n                      <MenuItem value=\"Bank Transfer\">Bank Transfer</MenuItem>\r\n                      <MenuItem value=\"G-Pay\">G-Pay</MenuItem>\r\n                      <MenuItem value=\"Amazon Pay\">Amazon Pay</MenuItem>\r\n                    </Select>\r\n                  </FormControl> */}\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Label>Transaction Refrence Number</Form.Label>\r\n                                    <Form.Control\r\n                                        fullWidth\r\n                                        placeholder=\"Enter the Refrence Number of Transaction\"\r\n                                        onChange={(e) => setBankDetails(e.target.value)}\r\n                                        value={bankDetails}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            <div></div>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {selected ? (\r\n                            <>\r\n                                <br />\r\n                                <h6>Please Fill Detail's Only For Bank Transfer</h6>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Label>Bank Name</Form.Label>\r\n                                        <Form.Control placeholder=\"Enter the Bank Name\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label>IFSC CODE</Form.Label>\r\n                                        <Form.Control placeholder=\"Enter the IFSC CODE\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : (\r\n                            <div></div>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n            </SimpleCard>\r\n            <Div className=\"mt-2\">\r\n                <Row>\r\n                    <Col>\r\n                        <Button variant=\"contained\" onClick={changePage}>\r\n                            Cancel\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button variant=\"success\" onClick={handleSubmit}>\r\n                            Add\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Div>\r\n        </Container>\r\n    );\r\n};\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 20, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 30 } },\r\n    },\r\n}));\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\nexport default EditQuotation;\r\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","import React from 'react';\r\n\r\nconst ItemField = ({ onEditItem, cellData }) => {\r\n    return (\r\n        <input\r\n            className={cellData.className}\r\n            type={cellData.type}\r\n            placeholder={cellData.placeholder}\r\n            min={cellData.min}\r\n            max={cellData.max}\r\n            step={cellData.step}\r\n            name={cellData.name}\r\n            id={cellData.id}\r\n            value={cellData.value}\r\n            onChange={onEditItem}\r\n            required\r\n        />\r\n    );\r\n};\r\n\r\nexport default ItemField;\r\n","import React from 'react';\r\nimport ItemField from './itemFields';\r\nimport { Icon, IconButton } from '@mui/material';\r\nconst QuotationEMI = ({ id, instalmentNumber, instalmentDate, instalmentAmount, onDeleteItem, onEdtiItem }) => {\r\n    const deleteItemHandler = () => {\r\n        onDeleteItem(instalmentNumber);\r\n    };\r\n    return (\r\n        <tr>\r\n            <td className=\"w-full\">\r\n                {/* <input type=\"text\" value={no} name={no} id={id} onChange={(event) => onEdtiItem(event)} /> */}\r\n                <ItemField\r\n                    onEditItem={(event) => onEdtiItem(event)}\r\n                    cellData={{\r\n                        placeholder: 'Installment No.',\r\n                        type: 'text',\r\n                        name: 'instalmentNumber',\r\n                        id: instalmentNumber,\r\n                        value: instalmentNumber,\r\n                    }}\r\n                />\r\n            </td>\r\n            <td className=\"w-full\">\r\n                {/* <input type=\"date\" value={date} name={date} onChange={(event) => onEdtiItem(event)} /> */}\r\n                <ItemField\r\n                    onEditItem={(event) => onEdtiItem(event)}\r\n                    cellData={{\r\n                        type: 'date',\r\n                        name: 'instalmentDate',\r\n                        id: instalmentNumber,\r\n                        value: instalmentDate,\r\n                    }}\r\n                />\r\n            </td>\r\n            <td className=\"w-full\">\r\n                {/* <input type=\"number\" value={amount} name={amount} onChange={(event) => onEdtiItem(event)} /> */}\r\n                <ItemField\r\n                    onEditItem={(event) => onEdtiItem(event)}\r\n                    cellData={{\r\n                        placeholder: 'Installment Amount',\r\n                        type: 'text',\r\n                        name: 'instalmentAmount',\r\n                        id: instalmentNumber,\r\n                        value: instalmentAmount,\r\n                    }}\r\n                />\r\n            </td>\r\n\r\n            <td className=\"flex items-center justify-center\">\r\n                <IconButton onClick={deleteItemHandler} className=\"ml-5\">\r\n                    <Icon color=\"warning\">delete</Icon>\r\n                </IconButton>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default QuotationEMI;\r\n"],"sourceRoot":""}