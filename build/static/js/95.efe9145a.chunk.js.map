{"version":3,"sources":["app/views/systemMaster/systemMaster/platformMaster/editPlatform.jsx","app/views/systemMaster/systemMaster/platformMaster/platformMaster.jsx","app/views/systemMaster/systemMaster/labelMaster/editLabel.jsx","app/views/systemMaster/systemMaster/labelMaster/labelMaster.jsx","app/views/systemMaster/systemMaster/statusMaster/editStatus.jsx","app/views/systemMaster/systemMaster/statusMaster/statusMaster.jsx","app/views/systemMaster/systemMaster/durationMaster/editDuration.jsx","app/views/systemMaster/systemMaster/durationMaster/durationMaster.jsx","app/views/systemMaster/systemMaster/branchMaster/editBranch.jsx","app/views/systemMaster/systemMaster/branchMaster/manageBranch.jsx","app/views/systemMaster/systemMaster/categoryMaster/editCategory.jsx","app/views/systemMaster/systemMaster/categoryMaster/manageCategory.jsx","app/views/systemMaster/manageSystemMaster.jsx"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","EditPlatform","theEditPlatform","handleDialog","console","log","useState","id","masterName","setMasterName","platformName","inputText","setInputText","platformIcon","setplatformIcon","platformColor","setplatformColor","UpdatePlatform","recodStatus","addedBy","updatedBy","Form","onSubmit","e","preventDefault","Row","Col","md","Label","Control","disabled","value","onChange","target","placeholder","className","type","style","marginTop","onClick","headers","localStorage","getItem","axios","post","BASE_URL","then","useEffect","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","TabPanel","props","children","index","other","role","hidden","Box","sx","p","Typography","a11yProps","Card","display","flexWrap","alignItems","centerContent","padding","marginLeft","Fab","width","height","boxShadow","color","textcolor","fontWeight","PlatformMaster","APIData","setAPIData","obj1","setObj1","show","setShow","show1","setShow1","setValue","PlatformPayload","get","response","data","handleClose","handleShow","subscriber","handleClose1","InputGroup","borderBottom","borderColor","Tabs","event","newValue","Tab","label","overflow","TableHead","borderLeft","borderRight","TableRow","TableCell","align","TableBody","map","status","IconButton","Icon","i","Modal","onHide","backdrop","keyboard","size","centered","Header","Title","Body","required","Footer","EditLabel","theEditLabel","name","LabelMaster","EditStatus","theEditStatus","StatusMaster","DurationStatus","theDurationStatus","FormControl","m","minWidth","Select","MenuItem","DurationMaster","APIDataDuration","setAPIDataDuration","EditBranch","theEditBranch","branchId","branchName","BranchMaster","BranchData","setBranchData","EditCategory","theEditCategory","emailCategory","CategoryMaster","ManageMaster","routeSegments","path","variant"],"mappings":"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","file":"static/js/95.efe9145a.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n  margin: '410px',\r\n}));\r\nconst EditPlatform = ({ theEditPlatform, handleDialog }) => {\r\n  console.log(theEditPlatform)\r\n  const [id, setId] = useState(theEditPlatform.id);\r\n  const [masterName, setMasterName] = useState('Platform');\r\n  const [inputText, setInputText] = useState(theEditPlatform.platformName);\r\n  const [platformIcon, setplatformIcon] = useState(theEditPlatform.platformIcon);\r\n  const [platformColor, setplatformColor] = useState(theEditPlatform.platformColor);\r\n\r\n  const UpdatePlatform = {\r\n    id: id,\r\n    masterName: masterName,\r\n    inputText: inputText,\r\n    platformIcon: platformIcon,\r\n    platformColor: platformColor,\r\n    recodStatus: 1,\r\n    addedBy: 1,\r\n    updatedBy: 1,\r\n  };\r\n  const updatePlatform = (e) => {\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n      \"x-access-token\": items,\r\n      \"roleCode\": roleCode,\r\n      \"userId\": userId\r\n    }\r\n    console.log({ UpdatePlatform });\r\n    e.preventDefault();\r\n    axios.post(BASE_URL + `/api/mastersUpsert`, UpdatePlatform, { headers: headers })\r\n      .then(() => useEffect);\r\n    setInputText('');\r\n    setplatformIcon('');\r\n    setplatformColor('');\r\n    handleDialog();\r\n  };\r\n  const changePage = () => {\r\n    handleDialog();\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <Container>\r\n      {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Form.Label>Platform Name</Form.Label>\r\n            <Form.Control\r\n              disabled\r\n              value={masterName}\r\n              onChange={(e) => setMasterName(e.target.value)}\r\n              placeholder=\"Enter the Platform Name\"\r\n            />\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Form.Label>Input Text</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setInputText(e.target.value)}\r\n              value={inputText}\r\n              placeholder=\"Enter the Input Text\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {/* <Row className='mt-2'>\r\n          <Col>\r\n            <Form.Label>Platform Icon</Form.Label>\r\n            <FormControl sx={{ m: 0, minWidth: 330 }} size=\"small\" className=\"mt-1\">\r\n             \r\n              <Select\r\n               \r\n                onChange={(e) => setplatformIcon(e.target.value)}\r\n                value={platformIcon}\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value='s'>Select from the List</MenuItem>\r\n                <MenuItem value='facebook'>Facebook</MenuItem>\r\n                <MenuItem value='Twitter'>Twitter</MenuItem>\r\n                <MenuItem value='star'>Indiamart</MenuItem>\r\n                <MenuItem value='telegram'>Telegram</MenuItem>\r\n                <MenuItem value='WhatsApp'>Whatsapp</MenuItem>\r\n                <MenuItem value='Instagram'>Instagram</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Form.Label>Platform Color</Form.Label>\r\n            <FormControl sx={{ m: 0, minWidth: 330 }} size=\"small\" className=\"mt-1\">\r\n             \r\n              <Select\r\n                \r\n                onChange={(e) => setplatformColor(e.target.value)}\r\n                value={platformColor}\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value='v'>Select from the List</MenuItem>\r\n                <MenuItem value='#EB9694'>Light Pink</MenuItem>\r\n                <MenuItem value='#F4BE65'>Light Orange</MenuItem>\r\n                <MenuItem value='#19CABA'>Cyan</MenuItem>\r\n                <MenuItem value='#282f4e'>Green</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Col>\r\n\r\n        </Row> */}\r\n        <br />\r\n        <Row className='mt-2'>\r\n          <Col className=\"d-flex justify-content-end\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-error\"\r\n              style={{ marginTop: 5 + 'px' }}\r\n              onClick={changePage}\r\n            >\r\n              Cancel\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n              style={{ marginTop: 5 + 'px' }}\r\n              onClick={updatePlatform}\r\n            >\r\n              Update\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      {/* </SimpleCard> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditPlatform;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Modal, InputGroup } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\nimport EditPlatform from './editPlatform';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    Tabs,\r\n    Tab,\r\n    Card,\r\n    Fab,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\nfunction TabPanel(props) {\r\n\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst PlatformMaster = () => {\r\n    const [masterName, setMasterName] = useState('Platform');\r\n    const [inputText, setInputText] = useState('');\r\n    const [platformIcon, setplatformIcon] = useState('s');\r\n    const [platformColor, setplatformColor] = useState('#833ab4');\r\n    const [APIData, setAPIData] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [show1, setShow1] = useState(false);\r\n    const [value, setValue] = useState(0);\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n    const columns = [\r\n        { field: 'id', headerName: 'Platform Id', width: 180 },\r\n        { field: 'platformName', headerName: 'Platform Name', width: 240 },\r\n\r\n    ];\r\n\r\n\r\n    const PlatformPayload = {\r\n        id: 0,\r\n        masterName: masterName,\r\n        platformIcon: platformIcon,\r\n        platformColor: platformColor,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    }\r\n    useEffect(() => {\r\n        axios\r\n            .get(BASE_URL + `/api/getMasterData?masterName=platformmaster`,\r\n                { headers: headers })\r\n            .then((response) => {\r\n                setAPIData(response.data.data);\r\n            });\r\n    }, [APIData]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(BASE_URL + `/api/mastersUpsert`, PlatformPayload,\r\n                { headers: headers })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    const deleteData = (e, i) => {\r\n        console.log(i);\r\n        axios.post(BASE_URL + '/api/mastersUpsert', {\r\n            id: i.id,\r\n            masterName: 'platform',\r\n            inputText: i.platformName,\r\n            recodStatus: 0,\r\n            addedBy: 1,\r\n            updatedBy: 1,\r\n        }, { headers: headers });\r\n    };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n\r\n    const handleClose1 = () => setShow1(false);\r\n\r\n    const handleShow1 = () => {\r\n        setShow1(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n        setplatformIcon('');\r\n        setplatformColor('');\r\n        setShow1(false)\r\n    };\r\n    const handleCChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <Box>\r\n                        <Row>\r\n                            <Col md=\"1\">\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={handleShow1}>\r\n                                    ADD\r\n                                </button>\r\n                            </Col>\r\n                            <Col md=\"11\">\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Form.Control\r\n                                        placeholder=\"Search Box\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <div className=\"container\"></div>\r\n                    </Box>\r\n                    <SimpleCard>\r\n                        {/* Tab Section */}\r\n                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                            <Tabs value={value} onChange={handleCChange} aria-label=\"basic tabs example\">\r\n                                <Tab label=\"Active Platform\" {...a11yProps(0)} />\r\n                                <Tab label=\"Inactive Platform\" {...a11yProps(1)} />\r\n                            </Tabs>\r\n                        </Box>\r\n                        <TabPanel value={value} index={0}>\r\n                            {/* First Tab */}\r\n                            <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                                {/* Table Section */}\r\n                                <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                                    <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"center\">Lead Id</TableCell>\r\n                                            <TableCell align=\"center\">Lead Name</TableCell>\r\n                                            <TableCell align=\"center\">Action</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {APIData.map((subscriber, index) => {\r\n                                            if (subscriber.status == 1) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell align=\"center\">{subscriber.id}</TableCell>\r\n                                                        <TableCell align=\"center\">{subscriber.platformName}</TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                                <Icon color=\"success\">edit</Icon>\r\n                                                            </IconButton>\r\n                                                            <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                                <Icon color=\"warning\">delete</Icon>\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                );\r\n                                            }\r\n                                        })}\r\n                                    </TableBody>\r\n                                </StyledTable>\r\n                                {/* <div style={{ height: 570, width: '100%' }}>\r\n                                    <DataGrid\r\n                                        rows={APIData}\r\n                                        columns={columns}\r\n                                        pageSize={10}\r\n                                        rowsPerPageOptions={[10]}\r\n                                    // checkboxSelection\r\n                                    />\r\n                                </div> */}\r\n                            </Box>\r\n                        </TabPanel>\r\n                        {/* Second Tab */}\r\n                        <TabPanel value={value} index={1}>\r\n                            <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                                {/* Inactive Table Section */}\r\n                                <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                                    <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"center\">Lead Id</TableCell>\r\n                                            <TableCell align=\"center\">Lead Name</TableCell>\r\n                                            <TableCell align=\"center\">Action</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {APIData.map((subscriber, index) => {\r\n                                            if (subscriber.status == 0) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell align=\"center\">{subscriber.id}</TableCell>\r\n                                                        <TableCell align=\"center\">{subscriber.platformName}</TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                                <Icon color=\"success\">edit</Icon>\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                );\r\n                                            }\r\n                                        })}\r\n                                    </TableBody>\r\n                                </StyledTable>\r\n                            </Box>\r\n                        </TabPanel>\r\n\r\n                    </SimpleCard>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal\r\n                show={show1}\r\n                onHide={handleClose1}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Add Platform </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row >\r\n                        <Col>\r\n                            <Form.Label>Master Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                disabled\r\n                                onChange={(e) => setMasterName(e.target.value)}\r\n                                value={masterName}\r\n                                placeholder=\"Master Name\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>Platform Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                onChange={(e) => setInputText(e.target.value)}\r\n                                value={inputText}\r\n                                placeholder=\"Enter the Platform Name\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-error\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleClose1}>\r\n                        Cancel\r\n                    </button>&nbsp;\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleSubmit}>\r\n                        Save\r\n                    </button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Update Platform Master</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <EditPlatform theEditPlatform={obj1} handleDialog={handleClose} />\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n};\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    centerContent: 'space-between',\r\n    padding: '24px !important',\r\n    // background: '#19CABA',\r\n    [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\nconst ContentBox = styled('div')(() => ({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    marginLeft: '90px'\r\n}));\r\n\r\nconst FabIcon = styled(Fab)(() => ({\r\n    width: '120px !important',\r\n    height: '120px !important',\r\n    boxShadow: 'none !important',\r\n}));\r\n\r\nconst H3 = styled('h3')(({ textcolor }) => ({\r\n    margin: 0,\r\n    color: textcolor,\r\n    fontWeight: '500',\r\n    marginLeft: '0px',\r\n}));\r\n\r\nconst H1 = styled('h5')(({ textcolor }) => ({\r\n    margin: 0,\r\n    // flexGrow: 1,\r\n    color: textcolor,\r\n}));\r\n\r\nexport default PlatformMaster;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '410px',\r\n}));\r\nconst EditLabel = ({ theEditLabel, handleDialog }) => {\r\n    console.log(theEditLabel)\r\n    const [id, setId] = useState(theEditLabel.id);\r\n    const [masterName, setMasterName] = useState('Label');\r\n    const [inputText, setInputText] = useState(theEditLabel.name);\r\n\r\n    const UpdatePlatform = {\r\n        id: id,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    };\r\n    const updatePlatform = (e) => {\r\n        const items = localStorage.getItem('accessToken');\r\n        const roleCode = localStorage.getItem('roleCode');\r\n        const userId = localStorage.getItem('userId');\r\n        const headers = {\r\n            \"x-access-token\": items,\r\n            \"roleCode\": roleCode,\r\n            \"userId\": userId\r\n        }\r\n        console.log({ UpdatePlatform });\r\n        e.preventDefault();\r\n        axios.post(BASE_URL + `/api/mastersUpsert`, UpdatePlatform, { headers: headers })\r\n            .then(() => useEffect);\r\n        setInputText('');\r\n        handleDialog()\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    const changePage = () => {\r\n        handleDialog()\r\n    }\r\n    return (\r\n        <Container>\r\n            {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Platform Name</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            value={masterName}\r\n                            onChange={(e) => setMasterName(e.target.value)}\r\n                            placeholder=\"Enter the Platform Name\"\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Label Name</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setInputText(e.target.value)}\r\n                            value={inputText}\r\n                            placeholder=\"Enter the Label Name\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row className=\"mt-2\">\r\n                    <Col className=\"d-flex justify-content-end\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-error\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={changePage}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={updatePlatform}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            {/* </SimpleCard> */}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditLabel;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button, Modal, InputGroup } from 'react-bootstrap';\r\nimport EditLabel from './editLabel';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst LabelMaster = () => {\r\n    const [masterName, setMasterName] = useState('Label');\r\n    const [inputText, setInputText] = useState('');\r\n    const [APIData, setAPIData] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [show1, setShow1] = useState(false);\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(BASE_URL + `/api/getMasterData?masterName=labelmaster`,\r\n                { headers: headers })\r\n            .then((response) => {\r\n                setAPIData(response.data.data);\r\n            });\r\n    }, [APIData]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(BASE_URL + `/api/mastersUpsert`, {\r\n                id: 0,\r\n                masterName: masterName,\r\n                inputText: inputText,\r\n                recodStatus: 1,\r\n                addedBy: 1,\r\n                updatedBy: 1,\r\n            }, { headers: headers })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    const deleteData = (e, i) => {\r\n        console.log(i);\r\n        axios.post(BASE_URL + '/api/mastersUpsert', {\r\n            id: i.id,\r\n            masterName: 'label',\r\n            inputText: i.platformName,\r\n            recodStatus: 0,\r\n            addedBy: 1,\r\n            updatedBy: 1,\r\n        }, { headers: headers });\r\n    };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n    const handleClose1 = () => setShow1(false);\r\n\r\n    const handleShow1 = () => {\r\n        setShow1(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n        handleClose()\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <Box>\r\n                        <Row>\r\n                            <Col md=\"1\">\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={handleShow1}>\r\n                                    ADD\r\n                                </button>\r\n                            </Col>\r\n                            <Col md=\"11\">\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Form.Control\r\n                                        placeholder=\"Search Box\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <div className=\"container\"></div>\r\n                    </Box>\r\n                    <Row>\r\n                        <Col>\r\n                            <SimpleCard>\r\n                                {/* Tab Section */}\r\n\r\n                                <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                                    {/* Table Section */}\r\n                                    <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                                        <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">Label Id</TableCell>\r\n                                                <TableCell align=\"center\">Label Name</TableCell>\r\n                                                <TableCell align=\"center\">Action</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {APIData.map((subscriber, index) => {\r\n                                                if (subscriber.status == 1) {\r\n                                                    return (\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell align=\"center\">{subscriber.id}</TableCell>\r\n                                                            <TableCell align=\"center\">{subscriber.name}</TableCell>\r\n                                                            <TableCell align=\"center\">\r\n                                                                <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                                    <Icon color=\"success\">edit</Icon>\r\n                                                                </IconButton>\r\n                                                                <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                                    <Icon color=\"warning\">delete</Icon>\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    );\r\n                                                }\r\n                                            })}\r\n                                        </TableBody>\r\n                                    </StyledTable>\r\n                                </Box>\r\n\r\n\r\n                            </SimpleCard>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* <SimpleCard>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Platform Name</Form.Label>\r\n                                <Form.Control\r\n                                    disabled\r\n                                    value={masterName}\r\n                                    onChange={(e) => setMasterName(e.target.value)}\r\n                                    placeholder=\"Enter the Platform Name\"\r\n                                />\r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    onChange={(e) => setInputText(e.target.value)}\r\n                                    value={inputText}\r\n                                    placeholder=\"Enter the Name\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Div className=\"mt-4\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button variant=\"secondary\" >\r\n                                        Cancel\r\n                                    </Button>\r\n                                    &nbsp;\r\n                                    <Button variant=\"success\"\r\n                                        onClick={handleSubmit}>\r\n                                        Save\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Div>\r\n                    </SimpleCard> */}\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Modal\r\n                show={show1}\r\n                onHide={handleClose1}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Add Label </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row >\r\n                        <Col>\r\n                            <Form.Label>Master Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                disabled\r\n                                onChange={(e) => setMasterName(e.target.value)}\r\n                                value={masterName}\r\n                                placeholder=\"Master Name\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>Label Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                onChange={(e) => setInputText(e.target.value)}\r\n                                value={inputText}\r\n                                placeholder=\"Enter the Platform Name\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-error\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleClose1}>\r\n                        Cancel\r\n                    </button>&nbsp;\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleSubmit}>\r\n                        Save\r\n                    </button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Update Label Master</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <EditLabel theEditLabel={obj1} handleDialog={handleClose} />\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelMaster;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '410px',\r\n}));\r\nconst EditStatus = ({ theEditStatus, handleDialog }) => {\r\n    console.log(theEditStatus)\r\n    const [id, setId] = useState(theEditStatus.id);\r\n    const [masterName, setMasterName] = useState('Status');\r\n    const [inputText, setInputText] = useState(theEditStatus.name);\r\n\r\n    const UpdatePlatform = {\r\n        id: id,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    };\r\n    const updatePlatform = (e) => {\r\n        const items = localStorage.getItem('accessToken');\r\n        const roleCode = localStorage.getItem('roleCode');\r\n        const userId = localStorage.getItem('userId');\r\n        const headers = {\r\n            \"x-access-token\": items,\r\n            \"roleCode\": roleCode,\r\n            \"userId\": userId\r\n        }\r\n        console.log({ UpdatePlatform });\r\n        e.preventDefault();\r\n        axios.post(BASE_URL + `/api/mastersUpsert`, UpdatePlatform, { headers: headers })\r\n            .then(() => useEffect);\r\n        setInputText('');\r\n        handleDialog();\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <Container>\r\n            {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Platform Name</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            value={masterName}\r\n                            onChange={(e) => setMasterName(e.target.value)}\r\n                            placeholder=\"Enter the Platform Name\"\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Satus Name</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setInputText(e.target.value)}\r\n                            value={inputText}\r\n                            placeholder=\"Enter the Label Name\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={updatePlatform}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            {/* </SimpleCard> */}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditStatus;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button, Modal, InputGroup } from 'react-bootstrap';\r\nimport EditStatus from './editStatus';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst StatusMaster = () => {\r\n    const [masterName, setMasterName] = useState('Status');\r\n    const [inputText, setInputText] = useState('');\r\n    const [APIData, setAPIData] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [show1, setShow1] = useState(false);\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(BASE_URL + `/api/getMasterData?masterName=statusmaster`,\r\n                { headers: headers })\r\n            .then((response) => {\r\n                setAPIData(response.data.data);\r\n            });\r\n    }, [APIData]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(BASE_URL + `/api/mastersUpsert`, {\r\n                id: 0,\r\n                masterName: masterName,\r\n                inputText: inputText,\r\n                recodStatus: 1,\r\n                addedBy: 1,\r\n                updatedBy: 1,\r\n            }, { headers: headers })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    const deleteData = (e, i) => {\r\n        console.log(i);\r\n        axios.post(BASE_URL + '/api/mastersUpsert', {\r\n            id: i.id,\r\n            masterName: 'status',\r\n            inputText: i.platformName,\r\n            recodStatus: 0,\r\n            addedBy: 1,\r\n            updatedBy: 1,\r\n        }, { headers: headers });\r\n    };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n    const handleClose1 = () => setShow1(false);\r\n\r\n    const handleShow1 = () => {\r\n        setShow1(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n        handleClose1()\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <Box>\r\n                        <Row>\r\n                            <Col md=\"1\">\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={handleShow1}>\r\n                                    ADD\r\n                                </button>\r\n                            </Col>\r\n                            <Col md=\"11\">\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Form.Control\r\n                                        placeholder=\"Search Box\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <div className=\"container\"></div>\r\n                    </Box>\r\n                    <Row>\r\n                        <Col>\r\n                            <SimpleCard>\r\n                                {/* Tab Section */}\r\n\r\n                                <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                                    {/* Table Section */}\r\n                                    <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                                        <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">Status Id</TableCell>\r\n                                                <TableCell align=\"center\">Status Name</TableCell>\r\n                                                <TableCell align=\"center\">Action</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {APIData.map((subscriber, index) => {\r\n                                                if (subscriber.status == 1) {\r\n                                                    return (\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell align=\"center\">{subscriber.id}</TableCell>\r\n                                                            <TableCell align=\"center\">{subscriber.name}</TableCell>\r\n                                                            <TableCell align=\"center\">\r\n                                                                <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                                    <Icon color=\"success\">edit</Icon>\r\n                                                                </IconButton>\r\n                                                                <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                                    <Icon color=\"warning\">delete</Icon>\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    );\r\n                                                }\r\n                                            })}\r\n                                        </TableBody>\r\n                                    </StyledTable>\r\n                                </Box>\r\n                            </SimpleCard>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* <SimpleCard title=\"Add Assign  \">\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Platform Name</Form.Label>\r\n                                <Form.Control\r\n                                    disabled\r\n                                    value={masterName}\r\n                                    onChange={(e) => setMasterName(e.target.value)}\r\n                                    placeholder=\"Enter the Platform Name\"\r\n                                />\r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    onChange={(e) => setInputText(e.target.value)}\r\n                                    value={inputText}\r\n                                    placeholder=\"Enter the Name\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Div className=\"mt-4\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button variant=\"secondary\" >\r\n                                        Cancel\r\n                                    </Button>\r\n                                    &nbsp;\r\n                                    <Button variant=\"success\"\r\n                                        onClick={handleSubmit}>\r\n                                        Save\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Div>\r\n                    </SimpleCard> */}\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n\r\n            <Modal\r\n                show={show1}\r\n                onHide={handleClose1}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Add Status </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row >\r\n                        <Col>\r\n                            <Form.Label>Master Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                disabled\r\n                                onChange={(e) => setMasterName(e.target.value)}\r\n                                value={masterName}\r\n                                placeholder=\"Master Name\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>Status Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                onChange={(e) => setInputText(e.target.value)}\r\n                                value={inputText}\r\n                                placeholder=\"Enter the Platform Name\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-error\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleClose1}>\r\n                        Cancel\r\n                    </button>&nbsp;\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleSubmit}>\r\n                        Save\r\n                    </button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Update Status Master</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <EditStatus theEditStatus={obj1} handleDialog={handleClose} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-error\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatusMaster;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '410px',\r\n}));\r\nconst DurationStatus = ({ theDurationStatus, handleDialog }) => {\r\n    console.log(theDurationStatus)\r\n    const [id, setId] = useState(theDurationStatus.id);\r\n    const [masterName, setMasterName] = useState('Duration');\r\n    const [inputText, setInputText] = useState(theDurationStatus.name);\r\n\r\n    const UpdatePlatform = {\r\n        id: id,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    };\r\n    const updatePlatform = (e) => {\r\n        const items = localStorage.getItem('accessToken');\r\n        const roleCode = localStorage.getItem('roleCode');\r\n        const userId = localStorage.getItem('userId');\r\n        const headers = {\r\n            \"x-access-token\": items,\r\n            \"roleCode\": roleCode,\r\n            \"userId\": userId\r\n        }\r\n        console.log({ UpdatePlatform });\r\n        e.preventDefault();\r\n        axios.post(BASE_URL + `/api/mastersUpsert`, UpdatePlatform, { headers: headers })\r\n            .then(() => useEffect);\r\n        setInputText('');\r\n        handleDialog();\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    const changePage = () => {\r\n        handleDialog()\r\n    }\r\n    return (\r\n        <Container>\r\n            {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Duration Master</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            value={masterName}\r\n                            onChange={(e) => setMasterName(e.target.value)}\r\n                            placeholder=\"Enter the Platform Name\"\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <FormControl sx={{ m: 0, minWidth: 350 }} size=\"small\" >\r\n                            <Form.Label>Duration</Form.Label>\r\n                            <Select value={inputText} label=\"Type\" onChange={(e) => setInputText(e.target.value)}>\r\n                                <MenuItem value=\"30 Days [1 Month]\">30 Days [1 Month]</MenuItem>\r\n                                <MenuItem value=\"60 Days [2 Month]\">60 Days [2 Month]</MenuItem>\r\n                                <MenuItem value=\"90 Days [3 Month]\">90 Days [3 Month]</MenuItem>\r\n                                <MenuItem value=\"180 Days [6 Month]\">180 Days [6 Month]</MenuItem>\r\n                                <MenuItem value=\"365 Days [12 Month]\">365 Days [12 Month]</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col className=\"d-flex justify-content-end\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-error\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={changePage}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={updatePlatform}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            {/* </SimpleCard> */}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DurationStatus;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { MenuItem, FormControl, Select } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button, Modal, InputGroup } from 'react-bootstrap';\r\nimport DurationStatus from './editDuration';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst DurationMaster = () => {\r\n    const [masterName, setMasterName] = useState('Duration');\r\n    const [inputText, setInputText] = useState('30 Days [1 Month]');\r\n    const [APIDataDuration, setAPIDataDuration] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [show1, setShow1] = useState(false);\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(BASE_URL + `/api/getMasterData?masterName=durationmaster`,\r\n                { headers: headers })\r\n            .then((response) => {\r\n                setAPIDataDuration(response.data.data);\r\n            });\r\n    }, [APIDataDuration]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(BASE_URL + `/api/mastersUpsert`, {\r\n                id: 0,\r\n                masterName: masterName,\r\n                inputText: inputText,\r\n                recodStatus: 1,\r\n                addedBy: 1,\r\n                updatedBy: 1,\r\n            }, { headers: headers })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    const deleteData = (e, i) => {\r\n        console.log(i);\r\n        axios.post(BASE_URL + '/api/mastersUpsert', {\r\n            id: i.id,\r\n            masterName: 'duration',\r\n            inputText: i.platformName,\r\n            recodStatus: 0,\r\n            addedBy: 1,\r\n            updatedBy: 1,\r\n        }, { headers: headers });\r\n    };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n    const handleClose1 = () => setShow1(false);\r\n\r\n    const handleShow1 = () => {\r\n        setShow1(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n        handleClose1()\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <Box>\r\n                        <Row>\r\n                            <Col md=\"1\">\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={handleShow1}>\r\n                                    ADD\r\n                                </button>\r\n                            </Col>\r\n                            <Col md=\"11\">\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Form.Control\r\n                                        placeholder=\"Search Box\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <div className=\"container\"></div>\r\n                    </Box>\r\n                    <Row>\r\n                        <Col>\r\n                            <SimpleCard>\r\n                                <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                                    {/* Table Section */}\r\n                                    <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                                        <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">Duration Id</TableCell>\r\n                                                <TableCell align=\"center\">Duration Name</TableCell>\r\n                                                <TableCell align=\"center\">Action</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {APIDataDuration.map((subscriber, index) => {\r\n                                                if (subscriber.name != null) {\r\n                                                    return (\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell align=\"center\">{subscriber.id}</TableCell>\r\n                                                            <TableCell align=\"center\">{subscriber.name}</TableCell>\r\n                                                            <TableCell align=\"center\">\r\n                                                                <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                                    <Icon color=\"success\">edit</Icon>\r\n                                                                </IconButton>\r\n                                                                {/* <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                                    <Icon color=\"warning\">delete</Icon>\r\n                                                                </IconButton> */}\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    );\r\n                                                }\r\n                                            })}\r\n                                        </TableBody>\r\n                                    </StyledTable>\r\n                                </Box>\r\n                            </SimpleCard>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n\r\n            <Modal\r\n                show={show1}\r\n                onHide={handleClose1}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Add Catalogue Duration </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row >\r\n                        <Col>\r\n                            <Form.Label>Master Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                disabled\r\n                                onChange={(e) => setMasterName(e.target.value)}\r\n                                value={masterName}\r\n                                placeholder=\"Master Name\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <FormControl sx={{ m: 0, minWidth: 480 }} size=\"small\" >\r\n                                <Form.Label>Duration</Form.Label>\r\n                                <Select value={inputText} label=\"Type\" onChange={(e) => setInputText(e.target.value)}>\r\n                                    <MenuItem value=\"30 Days [1 Month]\">30 Days [1 Month]</MenuItem>\r\n                                    <MenuItem value=\"60 Days [2 Month]\">60 Days [2 Month]</MenuItem>\r\n                                    <MenuItem value=\"90 Days [3 Month]\">90 Days [3 Month]</MenuItem>\r\n                                    <MenuItem value=\"180 Days [6 Month]\">180 Days [6 Month]</MenuItem>\r\n                                    <MenuItem value=\"365 Days [12 Month]\">365 Days [12 Month]</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-error\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleClose1}>\r\n                        Cancel\r\n                    </button>\r\n                    &nbsp;\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleSubmit}>\r\n                        Save\r\n                    </button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Update Duration Master</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <DurationStatus theDurationStatus={obj1} handleDialog={handleClose} />\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DurationMaster;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '410px',\r\n}));\r\nconst EditBranch = ({ theEditBranch, handleDialog }) => {\r\n    console.log(theEditBranch)\r\n    const [id, setId] = useState(theEditBranch.branchId);\r\n    const [masterName, setMasterName] = useState('Branch');\r\n    const [inputText, setInputText] = useState(theEditBranch.branchName);\r\n\r\n    const UpdatePlatform = {\r\n        id: id,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    };\r\n    const updatePlatform = (e) => {\r\n        const items = localStorage.getItem('accessToken');\r\n        const roleCode = localStorage.getItem('roleCode');\r\n        const userId = localStorage.getItem('userId');\r\n        const headers = {\r\n            \"x-access-token\": items,\r\n            \"roleCode\": roleCode,\r\n            \"userId\": userId\r\n        }\r\n        console.log({ UpdatePlatform });\r\n        e.preventDefault();\r\n        axios.post(BASE_URL + `/api/mastersUpsert`, UpdatePlatform, { headers: headers })\r\n            .then(() => useEffect);\r\n        setInputText('');\r\n        handleDialog()\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    const changePage = () => {\r\n        handleDialog()\r\n    }\r\n    return (\r\n        <Container>\r\n            {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Platform Name</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            value={masterName}\r\n                            onChange={(e) => setMasterName(e.target.value)}\r\n                            placeholder=\"Enter the Platform Name\"\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Label Name</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setInputText(e.target.value)}\r\n                            value={inputText}\r\n                            placeholder=\"Enter the Label Name\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row className=\"mt-2\">\r\n                    <Col className=\"d-flex justify-content-end\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-error\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={changePage}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={updatePlatform}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            {/* </SimpleCard> */}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditBranch;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button, Modal, InputGroup } from 'react-bootstrap';\r\nimport EditBranch from './editBranch';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst BranchMaster = () => {\r\n    const [masterName, setMasterName] = useState('branch');\r\n    const [inputText, setInputText] = useState('');\r\n    const [BranchData, setBranchData] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [show1, setShow1] = useState(false);\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(BASE_URL + `/api/getMasterData?masterName=branchmaster`,\r\n                { headers: headers })\r\n            .then((response) => {\r\n                console.log(response.data.data)\r\n                setBranchData(response.data.data);\r\n            });\r\n    }, [BranchData]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(BASE_URL + `/api/mastersUpsert`, {\r\n                id: 0,\r\n                masterName: masterName,\r\n                inputText: inputText,\r\n                recodStatus: 1,\r\n                addedBy: 1,\r\n                updatedBy: 1,\r\n            }, { headers: headers })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    const deleteData = (e, i) => {\r\n        console.log(i);\r\n        axios.post(BASE_URL + '/api/mastersUpsert', {\r\n            id: i.id,\r\n            masterName: 'Branch',\r\n            inputText: i.platformName,\r\n            recodStatus: 0,\r\n            addedBy: 1,\r\n            updatedBy: 1,\r\n        }, { headers: headers });\r\n    };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n    const handleClose1 = () => setShow1(false);\r\n\r\n    const handleShow1 = () => {\r\n        setShow1(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n        setShow1(false)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <Box>\r\n                        <Row>\r\n                            <Col md=\"1\">\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={handleShow1}>\r\n                                    ADD\r\n                                </button>\r\n                            </Col>\r\n                            <Col md=\"11\">\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Form.Control\r\n                                        placeholder=\"Search Box\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <div className=\"container\"></div>\r\n                    </Box>\r\n                    <Row>\r\n                        <Col>\r\n                            <SimpleCard>\r\n                                {/* Tab Section */}\r\n\r\n                                <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                                    {/* Table Section */}\r\n                                    <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                                        <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">Branch Id</TableCell>\r\n                                                <TableCell align=\"center\">Branch Name</TableCell>\r\n                                                <TableCell align=\"center\">Action</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {BranchData.map((subscriber, index) => {\r\n                                                // if (subscriber.status == 1) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell align=\"center\">{subscriber.branchId}</TableCell>\r\n                                                        <TableCell align=\"center\">{subscriber.branchName}</TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                                <Icon color=\"success\">edit</Icon>\r\n                                                            </IconButton>\r\n                                                            {/* <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                                <Icon color=\"warning\">delete</Icon>\r\n                                                            </IconButton> */}\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                );\r\n                                                // }\r\n                                            })}\r\n                                        </TableBody>\r\n                                    </StyledTable>\r\n                                </Box>\r\n                            </SimpleCard>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Modal\r\n                show={show1}\r\n                onHide={handleClose1}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Add Branch </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row >\r\n                        <Col>\r\n                            <Form.Label>Master Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                disabled\r\n                                onChange={(e) => setMasterName(e.target.value)}\r\n                                value={masterName}\r\n                                placeholder=\"Master Name\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>Branch Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                onChange={(e) => setInputText(e.target.value)}\r\n                                value={inputText}\r\n                                placeholder=\"Enter the Platform Name\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-error\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleClose1}>\r\n                        Cancel\r\n                    </button>&nbsp;\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleSubmit}>\r\n                        Save\r\n                    </button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Update Branch Master</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <EditBranch theEditBranch={obj1} handleDialog={handleClose} />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BranchMaster;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '410px',\r\n}));\r\nconst EditCategory = ({ theEditCategory, handleDialog }) => {\r\n    console.log(theEditCategory)\r\n    const [id, setId] = useState(theEditCategory.id);\r\n    const [masterName, setMasterName] = useState('Email');\r\n    const [inputText, setInputText] = useState(theEditCategory.emailCategory);\r\n\r\n    const UpdatePlatform = {\r\n        id: id,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    };\r\n    const updatePlatform = (e) => {\r\n        const items = localStorage.getItem('accessToken');\r\n        const roleCode = localStorage.getItem('roleCode');\r\n        const userId = localStorage.getItem('userId');\r\n        const headers = {\r\n            \"x-access-token\": items,\r\n            \"roleCode\": roleCode,\r\n            \"userId\": userId\r\n        }\r\n        console.log({ UpdatePlatform });\r\n        e.preventDefault();\r\n        axios.post(BASE_URL + `/api/mastersUpsert`, UpdatePlatform, { headers: headers })\r\n            .then(() => useEffect);\r\n        setInputText('');\r\n        handleDialog()\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    const changePage = () => {\r\n        handleDialog()\r\n    }\r\n    return (\r\n        <Container>\r\n            {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Master Name</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            value={masterName}\r\n                            onChange={(e) => setMasterName(e.target.value)}\r\n                            placeholder=\"Enter the Platform Name\"\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Category Name</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setInputText(e.target.value)}\r\n                            value={inputText}\r\n                            placeholder=\"Enter the Email Category Name\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row className=\"mt-2\">\r\n                    <Col className=\"d-flex justify-content-end\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-error\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={changePage}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={updatePlatform}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            {/* </SimpleCard> */}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditCategory;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button, Modal, InputGroup } from 'react-bootstrap';\r\nimport EditCategory from './editCategory';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst CategoryMaster = () => {\r\n    const [masterName, setMasterName] = useState('Email');\r\n    const [inputText, setInputText] = useState('');\r\n    const [BranchData, setBranchData] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [show1, setShow1] = useState(false);\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(BASE_URL + `/api/getMasterData?masterName=emailcategorymaster`,\r\n            { headers: headers })\r\n            .then((response) => {\r\n                setBranchData(response.data.data);\r\n            });\r\n    }, [BranchData]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(BASE_URL + `/api/mastersUpsert`, {\r\n                id: 0,\r\n                masterName: masterName,\r\n                inputText: inputText,\r\n                recodStatus: 1,\r\n                addedBy: 1,\r\n                updatedBy: 1,\r\n            }, { headers: headers })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    const deleteData = (e, i) => {\r\n        console.log(i);\r\n        axios.post(BASE_URL + '/api/mastersUpsert', {\r\n            id: i.id,\r\n            masterName: 'Branch',\r\n            inputText: i.platformName,\r\n            recodStatus: 0,\r\n            addedBy: 1,\r\n            updatedBy: 1,\r\n        }, { headers: headers });\r\n    };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n    const handleClose1 = () => setShow1(false);\r\n\r\n    const handleShow1 = () => {\r\n        setShow1(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n        setShow1(false)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <Box>\r\n                        <Row>\r\n                            <Col md=\"1\">\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={handleShow1}>\r\n                                    ADD\r\n                                </button>\r\n                            </Col>\r\n                            <Col md=\"11\">\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Form.Control\r\n                                        placeholder=\"Search Box\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <div className=\"container\"></div>\r\n                    </Box>\r\n                    <Row>\r\n                        <Col>\r\n                            <SimpleCard>\r\n                                {/* Tab Section */}\r\n\r\n                                <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                                    {/* Table Section */}\r\n                                    <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                                        <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">Sr. No</TableCell>\r\n                                                <TableCell align=\"center\">Category Name</TableCell>\r\n                                                <TableCell align=\"center\">Action</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {BranchData.map((subscriber, index) => {\r\n                                                // if (subscriber.status == 1) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell align=\"center\">{subscriber.id}</TableCell>\r\n                                                        <TableCell align=\"center\">{subscriber.emailCategory}</TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                                <Icon color=\"success\">edit</Icon>\r\n                                                            </IconButton>\r\n                                                            {/* <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                                <Icon color=\"warning\">delete</Icon>\r\n                                                            </IconButton> */}\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                );\r\n                                                // }\r\n                                            })}\r\n                                        </TableBody>\r\n                                    </StyledTable>\r\n                                </Box>\r\n                            </SimpleCard>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Modal\r\n                show={show1}\r\n                onHide={handleClose1}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Add Email Category </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row >\r\n                        <Col>\r\n                            <Form.Label>Master Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                disabled\r\n                                onChange={(e) => setMasterName(e.target.value)}\r\n                                value={masterName}\r\n                                placeholder=\"Master Name\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>Category Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                onChange={(e) => setInputText(e.target.value)}\r\n                                value={inputText}\r\n                                placeholder=\"Enter the Platform Name\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-error\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleClose1}>\r\n                        Cancel\r\n                    </button>&nbsp;\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleSubmit}>\r\n                        Save\r\n                    </button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Update Category Master</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <EditCategory theEditCategory={obj1} handleDialog={handleClose} />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryMaster;\r\n","import { styled } from '@mui/system';\r\nimport { Breadcrumb } from 'app/components';\r\nimport PlatformMaster from './systemMaster/platformMaster/platformMaster';\r\n// import AssignMaster from './systemMaster/assignMaster/assignMaster';\r\nimport LabelMaster from './systemMaster/labelMaster/labelMaster';\r\nimport StatusMaster from './systemMaster/statusMaster/statusMaster';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport React, { useState } from 'react';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport DurationMaster from './systemMaster/durationMaster/durationMaster';\r\nimport BranchMaster from './systemMaster/branchMaster/manageBranch';\r\nimport CategoryMaster from './systemMaster/categoryMaster/manageCategory';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction ManageMaster() {\r\n    const [value, setValue] = useState(0);\r\n    const handleCChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Container>\r\n            <Box>\r\n                <Box className=\"breadcrumb\">\r\n                    <Breadcrumb\r\n                        routeSegments={[\r\n                            { name: 'Dashboard', path: '/employees/manageEmployee' },\r\n                            { name: 'Manage System Master' },\r\n                        ]}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs value={value} onChange={handleCChange} variant=\"fullWidth\" aria-label=\"basic tabs example\">\r\n                        <Tab label=\"Platform Master\" {...a11yProps(0)} />\r\n                        <Tab label=\"Label Master\" {...a11yProps(1)} />\r\n                        <Tab label=\"Status Master\" {...a11yProps(2)} />\r\n                        <Tab label=\"Duration Master\" {...a11yProps(3)} />\r\n                        <Tab label=\"Branch Master\" {...a11yProps(4)} />\r\n                        <Tab label=\"Category Master\" {...a11yProps(5)} />\r\n                    </Tabs>\r\n                </Box>\r\n                <TabPanel value={value} index={0}>\r\n                    <PlatformMaster />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <LabelMaster />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    <StatusMaster />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                    <DurationMaster />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                    <BranchMaster />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={5}>\r\n                    <CategoryMaster />\r\n                </TabPanel>\r\n            </Box>\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default ManageMaster;"],"sourceRoot":""}