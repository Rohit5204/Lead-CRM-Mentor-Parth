{"version":3,"sources":["app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["options","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","useState","setValue","radioGroupRef","useRef","useEffect","Dialog","maxWidth","disableEscapeKeyDown","TransitionProps","onExiting","current","focus","id","DialogContent","dividers","RadioGroup","ref","name","onChange","_","newValue","map","option","FormControlLabel","control","Radio","label","DialogActions","Button","variant","color","onClick","DialogRoot","styled","width","backgroundColor","theme","palette","background","paper","maxHeight","ConfirmationDialog","React","setOpen","List","component","role","ListItem","button","divider","disabled","ListItemText","primary","secondary","keepMounted","className","DialogTitleRoot","MuiDialogTitle","margin","padding","spacing","position","right","top","grey","DialogTitle","children","disableTypography","Typography","IconButton","MuiDialogContent","MuiDialogActions","CustomizedDialogs","handleClose","gutterBottom","Transition","forwardRef","Slide","direction","AlertDialogSlide","TransitionComponent","DialogContentText","FormDialog","TextField","autoFocus","type","fullWidth","FullScreenDialog","useTheme","fullScreen","AppBar","sx","Toolbar","edge","flex","marginLeft","Divider","display","flexDirection","marginTop","minWidth","MaxWidthDialog","setFullWidth","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","event","target","inputProps","MenuItem","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","AlertDialog","emails","SimpleDialog","selectedValue","handleListItemClick","email","ListItemAvatar","Avatar","blue","SimpleDialogDemo","setSelectedValue","Container","marginBottom","AppDialog","Box","routeSegments","path","Stack","title","CustomizedDialog"],"mappings":"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","file":"static/js/85.8a305712.chunk.js","sourcesContent":["import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport { styled } from '@mui/system';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = useState(valueProp);\r\n  const radioGroupRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  function handleEntering() {\r\n    if (radioGroupRef.current !== null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => onClose();\r\n  const handleOk = () => onClose(value);\r\n\r\n  const handleChange = (_, newValue) => setValue(newValue);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xs\"\r\n      disableEscapeKeyDown\r\n      TransitionProps={{ onExiting: handleEntering }}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"Ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map((option) => (\r\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst DialogRoot = styled('div')(({ theme }) => ({\r\n  width: '100%',\r\n  maxWidth: 360,\r\n  backgroundColor: theme.palette.background.paper,\r\n  '& .paper': { width: '80%', maxHeight: 435 },\r\n}));\r\n\r\nexport default function ConfirmationDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('Dione');\r\n\r\n  function handleClickListItem() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(newValue) {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DialogRoot>\r\n      <List component=\"div\" role=\"list\">\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Interruptions\" />\r\n        </ListItem>\r\n\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"Phone ringtone\"\r\n          onClick={handleClickListItem}\r\n          role=\"listitem\"\r\n        >\r\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n        </ListItem>\r\n\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n        </ListItem>\r\n\r\n        <ConfirmationDialogRaw\r\n          keepMounted\r\n          open={open}\r\n          value={value}\r\n          className=\"paper\"\r\n          id=\"ringtone-menu\"\r\n          onClose={handleClose}\r\n        />\r\n      </List>\r\n    </DialogRoot>\r\n  );\r\n}\r\n","import CloseIcon from '@mui/icons-material/Close';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport MuiDialogActions from '@mui/material/DialogActions';\r\nimport MuiDialogContent from '@mui/material/DialogContent';\r\nimport MuiDialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/system';\r\nimport { useState } from 'react';\r\n\r\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\r\n  margin: 0,\r\n  padding: theme.spacing(2),\r\n  '& .closeButton': {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst DialogTitle = (props) => {\r\n  const { children, onClose } = props;\r\n  return (\r\n    <DialogTitleRoot disableTypography>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitleRoot>\r\n  );\r\n};\r\n\r\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\r\n  '&.root': { padding: theme.spacing(2) },\r\n}));\r\n\r\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\r\n  '&.root': { margin: 0, padding: theme.spacing(1) },\r\n}));\r\n\r\nconst CustomizedDialogs = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n        Open dialog\r\n      </Button>\r\n\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Modal title\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\r\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n          </Typography>\r\n\r\n          <Typography gutterBottom>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\r\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n          </Typography>\r\n\r\n          <Typography gutterBottom>\r\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\r\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\r\n            auctor fringilla.\r\n          </Typography>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedDialogs;\r\n","import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport React from 'react';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport TextField from '@mui/material/TextField';\r\nimport React from 'react';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import CloseIcon from '@mui/icons-material/Close';\r\nimport { Box } from '@mui/material';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Slide from '@mui/material/Slide';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport { useTheme } from '@mui/system';\r\nimport { H6 } from 'app/components/Typography';\r\nimport React from 'react';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar sx={{ position: 'relative' }}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <H6 sx={{ flex: 1, marginLeft: theme.spacing(2) }}>Sound</H6>\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n\r\n          <Divider />\r\n\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport Switch from '@mui/material/Switch';\r\nimport { styled } from '@mui/system';\r\nimport React from 'react';\r\n\r\nconst DialogRoot = styled('div')(({ theme }) => ({\r\n  '& form': {\r\n    display: 'flex',\r\n    margin: 'auto',\r\n    flexDirection: 'column',\r\n    width: 'fit-content',\r\n  },\r\n  '& .formControl': {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  '& .formControlLabel': {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MaxWidthDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  function handleMaxWidthChange(event) {\r\n    setMaxWidth(event.target.value);\r\n  }\r\n  function handleFullWidthChange(event) {\r\n    setFullWidth(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n\r\n          <form noValidate>\r\n            <FormControl className=\"formControl\">\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{ name: 'max-width', id: 'max-width' }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControlLabel\r\n              className=\"formControlLabel\"\r\n              label=\"Full width\"\r\n              control={\r\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\r\n              }\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/system';\r\nimport React from 'react';\r\n\r\nexport default function ResponsiveDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useState } from 'react';\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import AddIcon from '@mui/icons-material/Add';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { Box } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport { blue } from '@mui/material/colors';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, selectedValue, ...other } = props;\r\n\r\n  function handleClose() {\r\n    onClose(selectedValue);\r\n  }\r\n  function handleListItemClick(value) {\r\n    onClose(value);\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map((email) => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar sx={{ backgroundColor: blue[100], color: blue[600] }}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  selectedValue: PropTypes.string,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState('user02@gmail.com');\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </Box>\r\n  );\r\n}\r\n","import { Stack } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\nimport CustomizedDialogs from './CustomizedDialog';\r\nimport AlertDialogSlide from './DialogTransition';\r\nimport FormDialog from './FormDialog';\r\nimport FullScreenDialog from './FullScreenDialog';\r\nimport MaxWidthDialog from './OptimalSizeDialog';\r\nimport ResponsiveDialog from './ResponsiveDialog';\r\nimport AlertDialog from './SimpleAlerts';\r\nimport SimpleDialogDemo from './SimpleDialog';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst AppDialog = () => {\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Dialog' }]} />\r\n      </Box>\r\n\r\n      <Stack spacing={3}>\r\n        <SimpleCard title=\"simple Dialog\">\r\n          <SimpleDialogDemo />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"alert dialog\">\r\n          <AlertDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"transition\">\r\n          <AlertDialogSlide />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"form dialog\">\r\n          <FormDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"customized dialog\">\r\n          <CustomizedDialogs />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"full-screen dialog\">\r\n          <FullScreenDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"optimized size dialog\">\r\n          <MaxWidthDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"responsive dialog\">\r\n          <ResponsiveDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"confirmation dialog\">\r\n          <ConfirmationDialog />\r\n        </SimpleCard>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppDialog;\r\n"],"sourceRoot":""}