{"version":3,"sources":["app/views/employee/employees/addEmpBranch.jsx"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","Div","AddEmpBranch","navigate","useNavigate","changePage","useState","firstName","setfirstName","lastName","setlastName","email","setemail","password","setpassword","mobileNo","setmobileNo","alternateMobileNo","setalternateMobileNo","userName","setuserName","headers","localStorage","getItem","myOptions3","setMyOptions3","setUserData","setId3","userTLData","setUserTLData","id4","setId4","myOptions6","setMyOptions6","useEffect","axios","get","then","res","i","data","length","roleId","current","userId","branchName","window","branchId","managerName","managerId","postData","teamLeaderId","AddUser","id","createdBy","lastActive","userRoleId","addedBy","recodStatus","tlId","branchManagerId","console","log","post","catch","error","response","alert","message","status","request","showPassword","setShowPassword","validated","setValidated","className","routeSegments","name","path","noValidate","onSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","title","md","Label","Control","required","onChange","e","target","value","placeholder","Feedback","type","Text","disabled","xs","sx","m","width","size","label","freeSolo","autoComplete","autoHighlight","options","innerHTML","renderInput","params","variant","style","color","endAdornment","position","onClick","show","onMouseDown","edge"],"mappings":"kZA0XMA,EAAYC,YAAO,MAAPA,EAAc,kBAAGC,EAAH,EAAGA,MAAH,UAC5BC,OAAQ,QADoB,cAE3BD,EAAME,YAAYC,KAAK,MAAQ,CAAEF,OAAQ,SAFd,cAG5B,gBAH4B,aAIxBG,aAAc,QACbJ,EAAME,YAAYC,KAAK,MAAQ,CAAEC,aAAc,UALxB,KAQ1BC,EAAMN,YAAO,MAAPA,EAAc,iBAAO,CAC7BE,OAAQ,wBAEGK,UA/WM,WACjB,IAAMC,EAAWC,cACXC,EAAa,WACfF,EAAS,8BAEb,EAAkCG,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAkDV,mBAAS,IAA3D,mBAAOW,EAAP,KAA0BC,GAA1B,KACA,GAAgCZ,mBAAS,IAAzC,qBAAOa,GAAP,MAAiBC,GAAjB,MAMMC,GAAU,CACZ,iBAJUC,aAAaC,QAAQ,eAK/B,SAJaD,aAAaC,QAAQ,YAKlC,OAJWD,aAAaC,QAAQ,WAOpC,GAAoCjB,mBAAS,MAA7C,qBAAOkB,GAAP,MAAmBC,GAAnB,MAGA,GAAgCnB,mBAAS,IAAzC,qBAAiBoB,IAAjB,aACA,GAAsBpB,mBAAS,IAA/B,qBAAYqB,IAAZ,aAEA,GAAoCrB,mBAAS,IAA7C,qBAAOsB,GAAP,MAAmBC,GAAnB,MACA,GAAsBvB,mBAAS,IAA/B,qBAAOwB,GAAP,MAAYC,GAAZ,MACA,GAAoCzB,mBAAS,MAA7C,qBAAO0B,GAAP,MAAmBC,GAAnB,MAIAC,qBAAU,WACNC,IAAMC,IAAN,oEACI,CAAEf,QAASA,KAAWgB,MAAK,SAACC,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAIE,KAAKA,KAAKC,OAAQF,IACP,GAA3BD,EAAIE,KAAKA,KAAKD,GAAGG,SACjBhB,IAAY,SAAAiB,GAAO,4BAAQA,GAAR,CAAiBL,EAAIE,KAAKA,KAAKD,GAAGhC,UAAY,IAC3D+B,EAAIE,KAAKA,KAAKD,GAAG9B,cACvBkB,IAAO,SAAAgB,GAAO,4BAAQA,GAAR,CAAiBL,EAAIE,KAAKA,KAAKD,GAAGK,OAAQN,EAAIE,KAAKA,KAAKD,GAAGhC,UACnE,IAAM+B,EAAIE,KAAKA,KAAKD,GAAG9B,kBAI7C0B,IAAMC,IAAN,oEACI,CAAEf,QAASA,KAAWgB,MAAK,SAACC,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAIE,KAAKA,KAAKC,OAAQF,IACP,GAA3BD,EAAIE,KAAKA,KAAKD,GAAGG,SACjBb,IAAc,SAAAc,GAAO,4BAAQA,GAAR,CAAiBL,EAAIE,KAAKA,KAAKD,GAAGhC,UAAY,IAC7D+B,EAAIE,KAAKA,KAAKD,GAAG9B,cACvBsB,IAAO,SAAAY,GAAO,4BAAQA,GAAR,CAAiBL,EAAIE,KAAKA,KAAKD,GAAGK,OAAQN,EAAIE,KAAKA,KAAKD,GAAGhC,UACnE,IAAM+B,EAAIE,KAAKA,KAAKD,GAAG9B,oBAI9C,IACH,IAAMoC,GAAaC,OAAOxB,aAAaC,QAAQ,cACzCwB,GAAWD,OAAOxB,aAAaC,QAAQ,YACvCyB,GAAcF,OAAOxB,aAAaC,QAAQ,YAC1C0B,GAAYH,OAAOxB,aAAaC,QAAQ,UAExC2B,GAAQ,iDAAG,kGAEb,IAASX,EAAI,EAAGA,EAAIT,GAAIW,OAAQF,IACxBP,IAAcF,GAAIS,KAClBY,EAAerB,GAAIS,EAAI,IAJlB,OAOPa,EAAU,CACZC,GAAI,EACJ9C,UAAWA,EACXE,SAAUA,EACVE,MAAOA,EACP2C,UAAW,EACXC,WAAY,GACZC,WAAYhC,GACZiC,QAAS,EACT5C,SAAUA,EACVE,SAAUA,EACVE,kBAAmBA,EACnBE,SAAUA,GACVuC,YAAa,EACbX,SAAUA,GACVY,KAAMR,EACNS,gBAAiBX,IAErBY,QAAQC,IAAI,CAAEV,YAzBD,SA0BPjB,IAAM4B,KAAK,iDAAkDX,EAC/D,CAAE/B,QAASA,KAAW2C,OAAM,SAACC,GACrBA,EAAMC,UAENC,MAAMF,EAAMC,SAAS1B,KAAK4B,SAC1BP,QAAQC,IAAI,WAAaG,EAAMC,SAASG,SACjCJ,EAAMK,QACbT,QAAQC,IAAIG,EAAMK,SAElBT,QAAQC,IAAI,QAASG,EAAMG,YAnC1B,2CAAH,qDA6Cd,GAAwC9D,oBAAS,GAAjD,qBAAOiE,GAAP,MAAqBC,GAArB,MAOA,GAAkClE,oBAAS,GAA3C,qBAAOmE,GAAP,MAAkBC,GAAlB,MAcA,OACI,eAAChF,EAAD,WACI,cAAC,IAAD,CAAKiF,UAAU,aAAf,SACI,cAAC,IAAD,CACIC,cAAe,CACX,CAAEC,KAAM,kBAAmBC,KAAM,6BACjC,CAAED,KAAM,0BAIpB,eAAC,IAAD,CAAME,YAAU,EAACN,UAAWA,GAAWO,SAvBzB,SAACC,GACnB,IAAMC,EAAOD,EAAME,eACU,IAAzBD,EAAKE,iBACLH,EAAMI,iBACNJ,EAAMK,mBAGuB,GAAxBJ,EAAKE,kBACVlC,KACA7C,KAEJqE,IAAa,IAYT,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAYa,MAAM,yBAAlB,UACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKC,GAAG,IAAR,UACI,cAAC,IAAKC,MAAN,yBACA,cAAC,IAAKC,QAAN,CACIC,UAAQ,EACRC,SAAU,SAACC,GAAD,OAAOrF,EAAaqF,EAAEC,OAAOC,QACvCA,MAAOxF,EACPyF,YAAY,yBACd,cAAC,IAAKN,QAAQO,SAAd,CAAuBC,KAAK,UAA5B,uCAIN,eAAC,IAAD,CAAKV,GAAG,IAAR,UACI,cAAC,IAAKC,MAAN,wBACA,cAAC,IAAKC,QAAN,CACIC,UAAQ,EACRC,SAAU,SAACC,GAAD,OAAOnF,EAAYmF,EAAEC,OAAOC,QACtCA,MAAOtF,EACPuF,YAAY,wBACd,cAAC,IAAKN,QAAQO,SAAd,CAAuBC,KAAK,UAA5B,yCAKV,eAAC,IAAD,WACI,eAAC,IAAD,CAAKV,GAAG,IAAR,UACI,cAAC,IAAKC,MAAN,4BACA,eAAC,IAAD,WACI,cAAC,IAAWU,KAAZ,CAAiB9C,GAAG,eAApB,SACI,cAAC,IAAD,sBAEJ,cAAC,IAAKqC,QAAN,CACIC,UAAQ,EACRC,SAAU,SAACC,GAAD,OAAO7E,EAAY6E,EAAEC,OAAOC,QACtCA,MAAOhF,EACPiF,YAAY,4BACd,cAAC,IAAKN,QAAQO,SAAd,CAAuBC,KAAK,UAA5B,6CAIV,eAAC,IAAD,CAAKV,GAAG,IAAR,UACI,cAAC,IAAKC,MAAN,+BACA,eAAC,IAAD,WACI,cAAC,IAAWU,KAAZ,CAAiB9C,GAAG,eAApB,SACI,cAAC,IAAD,sBAEJ,cAAC,IAAKqC,QAAN,CACIE,SAAU,SAACC,GAAD,OAAO3E,GAAqB2E,EAAEC,OAAOC,QAC/CA,MAAO9E,EACP+E,YAAY,wCAI5B,eAAC,IAAD,WACI,eAAC,IAAD,CAAKR,GAAG,IAAR,UACI,cAAC,IAAKC,MAAN,oBACA,eAAC,IAAD,WACI,cAAC,IAAWU,KAAZ,CAAiB9C,GAAG,eAApB,SACI,cAAC,IAAD,sBAEJ,cAAC,IAAKqC,QAAN,CACIC,UAAQ,EACRO,KAAK,QACLN,SAAU,SAACC,GAAD,OAAOjF,EAASiF,EAAEC,OAAOC,QACnCA,MAAOpF,EACPqF,YAAY,gCACd,cAAC,IAAKN,QAAQO,SAAd,CAAuBC,KAAK,UAA5B,qCAKV,eAAC,IAAD,CAAKV,GAAG,IAAR,UACI,cAAC,IAAKC,MAAN,0BACA,cAAC,IAAKC,QAAN,CACIU,UAAQ,EACRT,UAAQ,EACRI,MAAOlD,GACPmD,YAAY,6BAGpB,eAAC,IAAD,CAAKR,GAAG,IAAR,UACI,cAAC,IAAKC,MAAN,6BACA,cAAC,IAAKC,QAAN,CACIU,UAAQ,EACRT,UAAQ,EACRI,MAAO/C,GACPgD,YAAY,gCAGpB,cAAC,IAAD,CAAKK,GAAI,EAAT,SACI,eAAC,IAAD,CAAaC,GAAI,CAAEC,EAAG,EAAGC,MAAO,QAAUC,KAAK,QAA/C,UACI,cAAC,IAAD,UACI,cAAC,IAAKhB,MAAN,qBAEJ,eAAC,IAAD,CACIE,UAAQ,EACRI,MAAOvE,GACPkF,MAAM,IACNd,SAAU,SAACC,GAAD,OAAOpE,GAAcoE,EAAEC,OAAOC,QAJ5C,UAMI,cAAC,IAAD,CAAUA,MAAO,EAAjB,uBACA,cAAC,IAAD,CAAUA,MAAO,EAAjB,iCAQM,GAAdvE,GACO,mCACH,cAAC,IAAD,UACI,eAAC,IAAD,CAAKgE,GAAG,IAAR,UACI,cAAC,IAAD,UACI,cAAC,IAAKC,MAAN,4BAEJ,cAAC,IAAD,CACIkB,UAAQ,EACRC,cAAY,EACZC,eAAa,EACbC,QAASlF,GACTmE,MAAO/D,GACP4D,SAAU,SAACC,GAAD,OAAO5D,GAAc4D,EAAEV,cAAc4B,YAC/CC,YAAa,SAACC,GAAD,OACT,cAAC,IAAD,2BACQA,GADR,IAGIC,QAAQ,WACRR,MAAM,yBACND,KAAK,qBAStB,6BAIf,uBACA,oBAAIU,MAAO,CAAEC,MAAO,OAApB,gCACA,eAAC,IAAD,WACI,eAAC,IAAD,WACI,cAAC,IAAK3B,MAAN,yBACA,eAAC,IAAD,WACI,cAAC,IAAWU,KAAZ,CAAiB9C,GAAG,eAApB,SACI,cAAC,IAAD,uBAEJ,cAAC,IAAKqC,QAAN,CACIC,UAAQ,EACRC,SAAU,SAACC,GAAD,OAAOzE,GAAYyE,EAAEC,OAAOC,QACtCA,MAAO5E,GACP6E,YAAY,wBACd,cAAC,IAAKN,QAAQO,SAAd,CAAuBC,KAAK,UAA5B,wCAKV,cAAC,IAAD,UAEI,eAAC,IAAD,CAAaI,GAAI,CAAEE,MAAO,QAAUU,QAAQ,WAA5C,UACI,cAAC,IAAKzB,MAAN,wBACA,cAAC,IAAD,CACIgB,KAAK,QACLpD,GAAG,8BACHuC,SAAU,SAACC,GAAD,OAAO/E,EAAY+E,EAAEC,OAAOC,QACtCA,MAAOlF,EACPqF,KAAM3B,GAAe,OAAS,WAC9B8C,aACI,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACI,cAAC,IAAD,CACI,aAAW,6BACXC,QAhNpB,kBAAM/C,IAAgB,SAACgD,GAAD,OAAWA,MAiNbC,YA/MpB,SAACxC,GAC7BA,EAAMI,kBA+M0CqC,KAAK,MAJT,SAMKnD,GAAe,cAAC,IAAD,IAAoB,cAAC,IAAD,QAIhDmC,MAAM,MACR,cAAC,IAAKhB,QAAQO,SAAd,CAAuBC,KAAK,UAA5B,iDAU1B,cAACjG,EAAD,CAAK0E,UAAU,OAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQuC,QAAQ,YAAYK,QAASlH,EAArC,oBADJ,OAKI,wBAAQ6F,KAAK,SAASvB,UAAU,kBAAhC","file":"static/js/76.a2ee8f74.chunk.js","sourcesContent":["import { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Form, Row, Col, Button, InputGroup } from 'react-bootstrap';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    MenuItem,\r\n    Select,\r\n    Autocomplete,\r\n    FormControl,\r\n    TextField,\r\n} from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AddEmpBranch = () => {\r\n    const navigate = useNavigate();\r\n    const changePage = () => {\r\n        navigate('/employees/manageEmployee');\r\n    };\r\n    const [firstName, setfirstName] = useState('');\r\n    const [lastName, setlastName] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [mobileNo, setmobileNo] = useState('');\r\n    const [alternateMobileNo, setalternateMobileNo] = useState('');\r\n    const [userName, setuserName] = useState('');\r\n\r\n\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n\r\n    const [myOptions3, setMyOptions3] = useState(null);\r\n\r\n\r\n    const [userData, setUserData] = useState([]);\r\n    const [id3, setId3] = useState([]);\r\n\r\n    const [userTLData, setUserTLData] = useState([]);\r\n    const [id4, setId4] = useState([]);\r\n    const [myOptions6, setMyOptions6] = useState(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://43.204.38.243:3001/api/getMasterData?masterName=usermaster`,\r\n            { headers: headers }).then((res) => {\r\n                for (var i = 0; i < res.data.data.length; i++) {\r\n                    if (res.data.data[i].roleId == 2) {\r\n                        setUserData(current => [...current, res.data.data[i].firstName + \" \"\r\n                            + res.data.data[i].lastName]);\r\n                        setId3(current => [...current, res.data.data[i].userId, res.data.data[i].firstName\r\n                            + \" \" + res.data.data[i].lastName])\r\n                    }\r\n                }\r\n            });\r\n        axios.get(`http://43.204.38.243:3001/api/getMasterData?masterName=usermaster`,\r\n            { headers: headers }).then((res) => {\r\n                for (var i = 0; i < res.data.data.length; i++) {\r\n                    if (res.data.data[i].roleId == 3) {\r\n                        setUserTLData(current => [...current, res.data.data[i].firstName + \" \"\r\n                            + res.data.data[i].lastName]);\r\n                        setId4(current => [...current, res.data.data[i].userId, res.data.data[i].firstName\r\n                            + \" \" + res.data.data[i].lastName])\r\n                    }\r\n                }\r\n            });\r\n    }, []);\r\n    const branchName = window.localStorage.getItem('branchName');\r\n    const branchId = window.localStorage.getItem('branchId');\r\n    const managerName = window.localStorage.getItem('userName');\r\n    const managerId = window.localStorage.getItem('userId');\r\n    //Add data in the table\r\n    const postData = async () => {\r\n        var teamLeaderId\r\n        for (var i = 0; i < id4.length; i++) {\r\n            if (myOptions6 == id4[i]) {\r\n                teamLeaderId = id4[i - 1]\r\n            }\r\n        }\r\n        const AddUser = {\r\n            id: 0,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            createdBy: 1,\r\n            lastActive: \"\",\r\n            userRoleId: myOptions3,\r\n            addedBy: 1,\r\n            password: password,\r\n            mobileNo: mobileNo,\r\n            alternateMobileNo: alternateMobileNo,\r\n            userName: userName,\r\n            recodStatus: 1,\r\n            branchId: branchId,\r\n            tlId: teamLeaderId,\r\n            branchManagerId: managerId\r\n        }\r\n        console.log({ AddUser })\r\n        await axios.post('http://43.204.38.243:3001/api/userMasterUpsert', AddUser,\r\n            { headers: headers }).catch((error) => { // error is handled in catch block\r\n                if (error.response) { // status code out of the range of 2xx\r\n                    // setErrorMessage(error.response.data.message);\r\n                    alert(error.response.data.message)\r\n                    console.log(\"Status :\" + error.response.status);\r\n                } else if (error.request) { // The request was made but no response was received\r\n                    console.log(error.request);\r\n                } else {// Error on setting up the request\r\n                    console.log('Error', error.message);\r\n                }\r\n            });\r\n    };\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //     postData();\r\n    //     changePage();\r\n    // };\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const [validated, setValidated] = useState(false);\r\n    const handleSubmit1 = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            // alert(\"Please Provide appropriate Data\")\r\n        }\r\n        else if (form.checkValidity() != false) {\r\n            postData();\r\n            changePage();\r\n        }\r\n        setValidated(true);\r\n    };\r\n    return (\r\n        <Container>\r\n            <Box className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Manage Employee', path: '/employees/manageEmployee' },\r\n                        { name: 'Add Employee Page' },\r\n                    ]}\r\n                />\r\n            </Box>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit1}>\r\n                <Row>\r\n                    <Col>\r\n                        <SimpleCard title=\"Fill Employee Detail's\">\r\n                            <Row>\r\n                                <Col md=\"6\">\r\n                                    <Form.Label>First Name</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        onChange={(e) => setfirstName(e.target.value)}\r\n                                        value={firstName}\r\n                                        placeholder=\"Enter the First Name\"\r\n                                    /><Form.Control.Feedback type=\"invalid\">\r\n                                        First Name is Required\r\n                                    </Form.Control.Feedback>\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <Form.Label>Last Name</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        onChange={(e) => setlastName(e.target.value)}\r\n                                        value={lastName}\r\n                                        placeholder=\"Enter the Last Name\"\r\n                                    /><Form.Control.Feedback type=\"invalid\">\r\n                                        Last Name is Required\r\n                                    </Form.Control.Feedback>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md=\"6\">\r\n                                    <Form.Label>Mobile Number</Form.Label>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text id=\"basic-addon1\">\r\n                                            <Icon>phone</Icon>\r\n                                        </InputGroup.Text>\r\n                                        <Form.Control\r\n                                            required\r\n                                            onChange={(e) => setmobileNo(e.target.value)}\r\n                                            value={mobileNo}\r\n                                            placeholder=\"Enter the Mobile Number\"\r\n                                        /><Form.Control.Feedback type=\"invalid\">\r\n                                            Mobile Number is Required\r\n                                        </Form.Control.Feedback></InputGroup>\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <Form.Label>Alternate Mobile</Form.Label>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text id=\"basic-addon1\">\r\n                                            <Icon>phone</Icon>\r\n                                        </InputGroup.Text>\r\n                                        <Form.Control\r\n                                            onChange={(e) => setalternateMobileNo(e.target.value)}\r\n                                            value={alternateMobileNo}\r\n                                            placeholder=\"Enter the Alternate Number\"\r\n                                        /></InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md=\"6\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text id=\"basic-addon1\">\r\n                                            <Icon>email</Icon>\r\n                                        </InputGroup.Text>\r\n                                        <Form.Control\r\n                                            required\r\n                                            type='email'\r\n                                            onChange={(e) => setemail(e.target.value)}\r\n                                            value={email}\r\n                                            placeholder=\"Enter the personal Email Id\"\r\n                                        /><Form.Control.Feedback type=\"invalid\">\r\n                                            Email is Required\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <Form.Label>Branch Name</Form.Label>\r\n                                    <Form.Control\r\n                                        disabled\r\n                                        required\r\n                                        value={branchName}\r\n                                        placeholder=\"Enter the Branch Name\"\r\n                                    />\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <Form.Label>Branch Manager</Form.Label>\r\n                                    <Form.Control\r\n                                        disabled\r\n                                        required\r\n                                        value={managerName}\r\n                                        placeholder=\"Enter the Branch Manager\"\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={6}>\r\n                                    <FormControl sx={{ m: 0, width: '100%' }} size=\"small\" >\r\n                                        <InputGroup>\r\n                                            <Form.Label>Role</Form.Label>\r\n                                        </InputGroup>\r\n                                        <Select\r\n                                            required\r\n                                            value={myOptions3}\r\n                                            label=\"r\"\r\n                                            onChange={(e) => setMyOptions3(e.target.value)}\r\n                                        >\r\n                                            <MenuItem value={3}>Team Lead</MenuItem>\r\n                                            <MenuItem value={4}>Employee</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                            {(function () {\r\n                                if (myOptions3 == 4) {\r\n                                    return <>\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <InputGroup>\r\n                                                    <Form.Label>Team Leader</Form.Label>\r\n                                                </InputGroup>\r\n                                                <Autocomplete\r\n                                                    freeSolo\r\n                                                    autoComplete\r\n                                                    autoHighlight\r\n                                                    options={userTLData}\r\n                                                    value={myOptions6}\r\n                                                    onChange={(e) => setMyOptions6(e.currentTarget.innerHTML)}\r\n                                                    renderInput={(params) => (\r\n                                                        <TextField\r\n                                                            {...params}\r\n\r\n                                                            variant=\"outlined\"\r\n                                                            label=\"Select the Team Leader\"\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    )}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </>;\r\n                                }\r\n                                else {\r\n                                    return <>\r\n                                    </>\r\n                                }\r\n                            })()}\r\n                            <br />\r\n                            <h6 style={{ color: 'red' }}>User Credential's </h6>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Label>User Name </Form.Label>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text id=\"basic-addon1\">\r\n                                            <Icon>person</Icon>\r\n                                        </InputGroup.Text>\r\n                                        <Form.Control\r\n                                            required\r\n                                            onChange={(e) => setuserName(e.target.value)}\r\n                                            value={userName}\r\n                                            placeholder=\"Enter the User Name\"\r\n                                        /><Form.Control.Feedback type=\"invalid\">\r\n                                            Username is Required\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                                <Col>\r\n\r\n                                    <FormControl sx={{ width: \"100%\" }} variant=\"outlined\" >\r\n                                        <Form.Label>Password </Form.Label>\r\n                                        <OutlinedInput\r\n                                            size=\"small\"\r\n                                            id=\"outlined-adornment-password\"\r\n                                            onChange={(e) => setpassword(e.target.value)}\r\n                                            value={password}\r\n                                            type={showPassword ? 'text' : 'password'}\r\n                                            endAdornment={\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={handleClickShowPassword}\r\n                                                        onMouseDown={handleMouseDownPassword}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                            }\r\n                                            label=\"h\"\r\n                                        /><Form.Control.Feedback type=\"invalid\">\r\n                                            Password is Required\r\n                                        </Form.Control.Feedback>\r\n                                    </FormControl>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </SimpleCard>\r\n                    </Col>\r\n                </Row>\r\n                <Div className=\"mt-2\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Button variant=\"secondary\" onClick={changePage}>\r\n                                Cancel\r\n                            </Button>\r\n                            &nbsp;\r\n                            <button type=\"submit\" className=\"btn btn-success\">\r\n                                Save\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                </Div>\r\n            </Form>\r\n        </Container >\r\n    );\r\n};\r\n// Custom Style Section\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '0px 0px 0px 441px',\r\n}));\r\nexport default AddEmpBranch;\r\n"],"sourceRoot":""}