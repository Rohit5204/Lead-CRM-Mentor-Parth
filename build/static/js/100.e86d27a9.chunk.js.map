{"version":3,"sources":["app/views/myDeals/myDeal/manageDeals.jsx"],"names":["StyledMenu","styled","props","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","marginTop","spacing","minWidth","color","palette","mode","grey","boxShadow","padding","fontSize","text","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","Container","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","ManageDeals","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose5","APIData","setAPIData","onType","setOnType","searchBox","setSearchBox","locationkey","setLocationkey","headers","localStorage","getItem","getFetchLeadData","axios","post","BASE_URL","leadId","userId","statusId","searchKey","platformId","opType","then","response","data","useEffect","className","routeSegments","name","path","container","sx","mb","item","xs","md","Label","htmlFor","Control","placeholder","value","onChange","e","target","style","id","size","undefined","variant","disableElevation","onClick","event","currentTarget","endIcon","MenuListProps","onClose","disableRipple","width","overflow","borderLeft","borderRight","align","map","subscriber","index","statusName","emailId","mobileNo","intrestedIn","label","to","state"],"mappings":"kYAyBMA,EAAaC,aAAO,SAACC,GAAD,OACtB,cAAC,IAAD,aACIC,UAAW,EACXC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEZJ,MAXOD,EAahB,gBAAGO,EAAH,EAAGA,MAAH,MAAgB,CACf,mBAAoB,CAChBC,aAAc,EACdC,UAAWF,EAAMG,QAAQ,GACzBC,SAAU,IACVC,MAC2B,UAAvBL,EAAMM,QAAQC,KAAmB,kBAAoBP,EAAMM,QAAQE,KAAK,KAC5EC,UACI,uJACJ,kBAAmB,CACfC,QAAS,SAEb,sBAAuB,CACnB,qBAAsB,CAClBC,SAAU,GACVN,MAAOL,EAAMM,QAAQM,KAAKC,UAC1BC,YAAad,EAAMG,QAAQ,MAE/B,WAAY,CACRY,gBAAiBC,YACbhB,EAAMM,QAAQW,QAAQC,KACtBlB,EAAMM,QAAQa,OAAOC,wBAOnCC,EAAY5B,YAAO,MAAPA,EAAc,kBAAGO,EAAH,EAAGA,MAAH,UAC5BsB,OAAQ,QADoB,cAE3BtB,EAAMuB,YAAYC,KAAK,MAAQ,CAAEF,OAAQ,SAFd,cAG5B,gBAH4B,aAIxBG,aAAc,QACbzB,EAAMuB,YAAYC,KAAK,MAAQ,CAAEC,aAAc,UALxB,KAQ1BC,EAAcjC,YAAOkC,IAAPlC,EAAc,iBAAO,CACrCmC,WAAY,MACZ,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAEC,YAAa,EAAGC,aAAc,KAEtD,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAED,YAAa,SA4L1BE,UAxLK,WAChB,MAAgCC,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GAKfI,EAAe,WACjBH,EAAY,OAIhB,EAA8BF,mBAAS,IAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAEA,EAA4BP,mBAAS,IAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAAkCT,mBAAS,IAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KAKMC,EAAU,CACZ,iBAJUC,aAAaC,QAAQ,eAK/B,SAJaD,aAAaC,QAAQ,YAKlC,OAJWD,aAAaC,QAAQ,WAO9BC,EAAmB,WACrBC,IAAMC,KAAKC,IAAQ,2BAA+B,CAC9CC,OAAQ,EACRC,OAAQ,EACRC,SAAU,EACVC,UAAWd,EACXE,YAAaA,EACba,WAAY,EACZC,OAAQlB,GACT,CAAEM,QAASA,IACTa,MAAK,SAACC,GACHrB,EAAWqB,EAASC,KAAKA,UASrC,OANAC,qBAAU,WACNb,MACD,CAACP,EAAWE,EAAaJ,IAKxB,eAACpB,EAAD,WACI,cAAC,IAAD,CAAK2C,UAAU,aAAf,SAEI,cAAC,IAAD,CACIC,cAAe,CAAC,CAAEC,KAAM,YAAaC,KAAM,sBAAwB,CAAED,KAAM,WAAYC,KAAM,uBAAyB,CAAED,KAAM,+BAKtI,eAAC,IAAD,CAAME,WAAS,EAACjE,QAAS,EAAGkE,GAAI,CAAEC,GAAI,QAAtC,UAEI,eAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,cAAC,IAAKC,MAAN,CAAYC,QAAQ,YAApB,yBACA,uBACA,cAAC,IAAD,CAAYX,UAAU,OAAtB,SACI,cAAC,IAAKY,QAAN,CACIC,YAAY,yCACZ,aAAW,uBACX,mBAAiB,eACjBC,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAAOpC,EAAaoC,EAAEC,OAAOH,eAInD,eAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,cAAC,IAAKC,MAAN,CAAYC,QAAQ,YAApB,kCACA,uBACA,cAAC,IAAD,CAAYX,UAAU,OAAtB,SACI,cAAC,IAAKY,QAAN,CACIC,YAAY,yCACZ,aAAW,uBACX,mBAAiB,eACjBC,MAAOjC,EACPkC,SAAU,SAACC,GAAD,OAAOlC,EAAekC,EAAEC,OAAOH,eAIrD,cAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGS,MAAO,CAAEhF,UAAW,QAA9C,SACI,sBAAK8D,UAAU,6BAAf,UACI,cAAC,IAAD,CACImB,GAAG,yBACHC,KAAK,QACL,gBAAehD,EAAO,4BAAyBiD,EAC/C,gBAAc,OACd,gBAAejD,EAAO,YAASiD,EAC/BC,QAAQ,YACRC,kBAAgB,EAChBC,QA3FJ,SAACC,GACjBtD,EAAYsD,EAAMC,gBA2FEC,QAAS,cAAC,IAAD,IATb,0BAaA,eAACnG,EAAD,CACI2F,GAAG,uBACHS,cAAe,CACX,kBAAmB,0BAEvB1D,SAAUA,EACVE,KAAMA,EACNyD,QAASvD,EAPb,UASI,cAAC,IAAD,CACIkD,QAAS,WAAQ9C,EAAU,WAAYQ,IAAoBZ,KAAkBwD,eAAa,EAD9F,qBAIA,cAAC,IAAD,CACIN,QAAS,WAAQ9C,EAAU,WAAYQ,IAAoBZ,KAAkBwD,eAAa,EAD9F,qBAIA,cAAC,IAAD,CACIN,QAAS,WAAQ9C,EAAU,YAAaQ,IAAoBZ,KAAkBwD,eAAa,EAD/F,sBAIA,cAAC,IAAD,CACIN,QAAS,WAAQ9C,EAAU,aAAcQ,IAAoBZ,KAAkBwD,eAAa,EADhG,0BAnCR,eA2CR,cAAC,IAAD,CAAK9B,UAAU,cAAc+B,MAAM,OAAOC,SAAS,OAAnD,SAEI,eAACtE,EAAD,CAAasC,UAAU,qCAAqCkB,MAAO,CAAE,aAAgB,OAArF,UACI,cAAC,IAAD,CAAWA,MAAO,CAAEe,WAAY,gBAAiBC,YAAa,iBAAmBlC,UAAU,cAA3F,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAWmC,MAAM,SAAjB,qBACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,uBACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,mBACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,2BACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,0BACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,oBACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,yBAGR,cAAC,IAAD,UACK5D,EAAQ6D,KAAI,SAACC,EAAYC,GACtB,GAA6B,iBAAzBD,EAAWE,WACX,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAWJ,MAAM,SAAjB,SAA2BE,EAAW/C,SACtC,cAAC,IAAD,CAAW6C,MAAM,SAAjB,SAA2BE,EAAWnC,OACtC,cAAC,IAAD,CAAWiC,MAAM,SAAjB,SAA2BE,EAAWG,UACtC,cAAC,IAAD,CAAWL,MAAM,SAAjB,SAA2BE,EAAWI,WACtC,cAAC,IAAD,CAAWN,MAAM,SAAjB,SAA2BE,EAAWK,cACtC,cAAC,IAAD,CAAWP,MAAM,SAAjB,SAEqC,UAAzBE,EAAWE,WACJ,cAAC,IAAD,CAAMI,MAAM,WAGZ,cAAC,IAAD,CAAMA,MAAM,aAAatG,MAAM,YAIlD,cAAC,IAAD,CAAW8F,MAAM,SAAjB,SACI,cAAC,IAAD,CAAMS,GAAG,mBAAmBC,MAAOR,EAAnC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMhG,MAAM,MAAZ,gCAnBDiG","file":"static/js/100.e86d27a9.chunk.js","sourcesContent":["import { styled, alpha } from '@mui/system';\r\nimport { Breadcrumb } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    Chip,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    Menu,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Grid,\r\n    Button,\r\n    MenuItem,\r\n} from '@mui/material';\r\nimport { BASE_URL } from 'app/utils/constant';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\n\r\nconst StyledMenu = styled((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    '& .MuiPaper-root': {\r\n        borderRadius: 6,\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 180,\r\n        color:\r\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n        boxShadow:\r\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n        '& .MuiMenu-list': {\r\n            padding: '4px 0',\r\n        },\r\n        '& .MuiMenuItem-root': {\r\n            '& .MuiSvgIcon-root': {\r\n                fontSize: 18,\r\n                color: theme.palette.text.secondary,\r\n                marginRight: theme.spacing(1.5),\r\n            },\r\n            '&:active': {\r\n                backgroundColor: alpha(\r\n                    theme.palette.primary.main,\r\n                    theme.palette.action.selectedOpacity,\r\n                ),\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\nconst ManageDeals = () => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose5 = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const [APIData, setAPIData] = useState([]);\r\n\r\n    const [onType, setOnType] = useState('')\r\n    const [searchBox, setSearchBox] = useState('')\r\n    const [locationkey, setLocationkey] = useState('')\r\n\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n    //get method\r\n    const getFetchLeadData = () => {\r\n        axios.post(BASE_URL + `/api/getFilteredLeadData`, {\r\n            leadId: 0,\r\n            userId: 0,\r\n            statusId: 0,\r\n            searchKey: searchBox,\r\n            locationkey: locationkey,\r\n            platformId: 0,\r\n            opType: onType\r\n        }, { headers: headers })\r\n            .then((response) => {\r\n                setAPIData(response.data.data);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getFetchLeadData()\r\n    }, [searchBox, locationkey, onType]);\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Box className=\"breadcrumb\">\r\n\r\n                <Breadcrumb\r\n                    routeSegments={[{ name: 'Dashboard', path: '/dashboard/default' }, { name: 'My Delas', path: '/myDeal/manageDeals' }, { name: 'Manage Close Lead List' }]}\r\n                />\r\n            </Box>\r\n\r\n\r\n            <Grid container spacing={4} sx={{ mb: '24px' }}>\r\n\r\n                <Grid item xs={12} md={4} >\r\n                    <Form.Label htmlFor=\"basic-url\">Search Lead</Form.Label>\r\n                    <br></br>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <Form.Control\r\n                            placeholder=\"Search By Lead ID, Name, Mobile Number\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={searchBox}\r\n                            onChange={(e) => setSearchBox(e.target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} >\r\n                    <Form.Label htmlFor=\"basic-url\">Search Advanced Lead</Form.Label>\r\n                    <br></br>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <Form.Control\r\n                            placeholder=\"Search By Street, City, State, Country\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={locationkey}\r\n                            onChange={(e) => setLocationkey(e.target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} style={{ marginTop: '30px' }}>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Button\r\n                            id=\"demo-customized-button\"\r\n                            size='large'\r\n                            aria-controls={open ? 'demo-customized-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            variant=\"contained\"\r\n                            disableElevation\r\n                            onClick={handleClick}\r\n                            endIcon={<KeyboardArrowDownIcon />}\r\n                        >\r\n                            Apply Filter\r\n                        </Button>\r\n                        <StyledMenu\r\n                            id=\"demo-customized-menu\"\r\n                            MenuListProps={{\r\n                                'aria-labelledby': 'demo-customized-button',\r\n                            }}\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleClose5}\r\n                        >\r\n                            <MenuItem\r\n                                onClick={() => { setOnType('DEFAULT'); getFetchLeadData(); handleClose5() }} disableRipple>\r\n                                DEFAULT\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                onClick={() => { setOnType('LASTDAY'); getFetchLeadData(); handleClose5() }} disableRipple>\r\n                                LASTDAY\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                onClick={() => { setOnType('LASTWEEK'); getFetchLeadData(); handleClose5() }} disableRipple>\r\n                                LASTWEEK\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                onClick={() => { setOnType('LASTMONTH'); getFetchLeadData(); handleClose5() }} disableRipple>\r\n                                LASTMONTH\r\n                            </MenuItem>\r\n                        </StyledMenu>&nbsp;\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                {/* Table Section */}\r\n                <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                    <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Lead Id</TableCell>\r\n                            <TableCell align=\"center\">Lead Name</TableCell>\r\n                            <TableCell align=\"center\">Email</TableCell>\r\n                            <TableCell align=\"center\">Mobile Number</TableCell>\r\n                            <TableCell align=\"center\">Intersted In</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {APIData.map((subscriber, index) => {\r\n                            if (subscriber.statusName == \"Closed (Paid)\") {\r\n                                return (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align=\"center\">{subscriber.leadId}</TableCell>\r\n                                        <TableCell align=\"center\">{subscriber.name}</TableCell>\r\n                                        <TableCell align=\"center\">{subscriber.emailId}</TableCell>\r\n                                        <TableCell align=\"center\">{subscriber.mobileNo}</TableCell>\r\n                                        <TableCell align=\"center\">{subscriber.intrestedIn}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {(function () {\r\n                                                if (subscriber.statusName == \"Closed\") {\r\n                                                    return <Chip label=\"Closed\" />;\r\n                                                }\r\n                                                else {\r\n                                                    return <Chip label=\"Not Listed\" color=\"error\" />\r\n                                                }\r\n                                            })()}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Link to=\"/leads/viewLeads\" state={subscriber}>\r\n                                                <IconButton>\r\n                                                    <Icon color=\"red\">visibility</Icon>\r\n                                                </IconButton>\r\n                                            </Link>\r\n\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </TableBody>\r\n                </StyledTable>\r\n            </Box>\r\n\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ManageDeals;\r\n"],"sourceRoot":""}