{"version":3,"sources":["app/views/employee/employees/manageEmployee.jsx"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","ManageEmployee","useState","navigate","useNavigate","userData","setUserData","items","localStorage","getItem","useEffect","axios","get","headers","then","response","data","className","routeSegments","name","path","type","onClick","Control","placeholder","width","overflow","align","map","subscriber","index","userId","firstName","lastName","email","mobileNo","recodStatus","color","label","to","state"],"mappings":"oUAkBMA,EAAYC,YAAO,MAAPA,EAAc,kBAAGC,EAAH,EAAGA,MAAH,UAC9BC,OAAQ,QADsB,cAE7BD,EAAME,YAAYC,KAAK,MAAQ,CAAEF,OAAQ,SAFZ,cAG9B,gBAH8B,aAI5BG,aAAc,QACbJ,EAAME,YAAYC,KAAK,MAAQ,CAAEC,aAAc,UALpB,KAQ1BC,EAAcN,YAAOO,IAAPP,EAAc,iBAAO,CACvCQ,WAAY,MACZ,UAAW,CACT,OAAQ,CAAE,OAAQ,CAAEC,YAAa,EAAGC,aAAc,KAEpD,UAAW,CACT,OAAQ,CAAE,OAAQ,CAAED,YAAa,SAyGtBE,UArGQ,WACrB,MAAwBC,mBAAS,MAAjC,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBACA,GADA,UACwBA,oBAAS,IAAjC,mBAOMC,GAPN,UAOiBC,eAIjB,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAQC,aAAaC,QAAQ,eAQnC,OANAC,qBAAU,WACRC,IAAMC,IAAN,iEAA4E,CAAEC,QAAS,CAAE,iBAAkBN,KAAWO,MAAK,SAACC,GAC1HT,EAAYS,EAASC,KAAKA,WAE3B,CAACX,IAGF,cAAChB,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAK4B,UAAU,aAAf,SACE,cAAC,IAAD,CACEC,cAAe,CACb,CAAEC,KAAM,kBAAmBC,KAAM,6BACjC,CAAED,KAAM,6BAId,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYF,UAAU,OAAtB,UACE,wBAAQI,KAAK,SAASJ,UAAU,kBAAkBK,QA3B7C,WACjBnB,EAAS,2BA0BG,iBADF,OAKE,cAAC,IAAKoB,QAAN,CACEC,YAAY,aACZ,aAAW,uBACX,mBAAiB,0BAM3B,eAAC,IAAD,CAAKP,UAAU,cAAcQ,MAAM,OAAOC,SAAS,OAAnD,UAEE,gDACA,eAAC9B,EAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAW+B,MAAM,UAAjB,qBACA,cAAC,IAAD,CAAWA,MAAM,UAAjB,kBACA,cAAC,IAAD,CAAWA,MAAM,UAAjB,mBACA,cAAC,IAAD,CAAWA,MAAM,UAAjB,2BACA,cAAC,IAAD,CAAWA,MAAM,UAAjB,oBACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,yBAGJ,cAAC,IAAD,UACGtB,EAASuB,KAAI,SAACC,EAAYC,GAAb,OACZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAWH,MAAM,UAAjB,SAA4BE,EAAWE,SACvC,eAAC,IAAD,CAAWJ,MAAM,UAAjB,UACGE,EAAWG,UADd,IAC0BH,EAAWI,YAErC,cAAC,IAAD,CAAWN,MAAM,UAAjB,SAA4BE,EAAWK,QACvC,cAAC,IAAD,CAAWP,MAAM,UAAjB,SAA4BE,EAAWM,WACvC,cAAC,IAAD,CAAWR,MAAM,UAAjB,SAC6B,GAA1BE,EAAWO,YACV,cAAC,IAAD,CAAMC,MAAM,UAAUC,MAAM,WAE5B,cAAC,IAAD,CAAMD,MAAM,UAAUC,MAAM,eAGhC,cAAC,IAAD,CAAWX,MAAM,SAAjB,SACE,cAAC,IAAD,CAAMY,GAAG,0BAA0BC,MAAOX,EAA1C,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMQ,MAAM,UAAZ,0BAjBOP","file":"static/js/59.361fb027.chunk.js","sourcesContent":["import { styled } from '@mui/system';\r\nimport { Breadcrumb } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Modal, InputGroup } from 'react-bootstrap';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Icon,\r\n  Chip,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\n\r\nconst ManageEmployee = () => {\r\n  const [obj1, setObj1] = useState(null);\r\n  const [APIData, setAPIData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  //Dialog Form\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (catalogue) => {\r\n    setObj1(catalogue);\r\n    setShow(true);\r\n  };\r\n  const navigate = useNavigate();\r\n  const changePage = () => {\r\n    navigate('/employees/addEmployee');\r\n  };\r\n  const [userData, setUserData] = useState([]);\r\n  const items = localStorage.getItem('accessToken');\r\n  //get method\r\n  useEffect(() => {\r\n    axios.get(`http://35.89.6.16:4002/api/getMasterData?masterName=usermaster`, { headers: { \"x-access-token\": items } }).then((response) => {\r\n      setUserData(response.data.data);\r\n    });\r\n  }, [userData]);\r\n\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb\r\n            routeSegments={[\r\n              { name: 'Manage Employee', path: '/employees/manageEmployee' },\r\n              { name: 'Employee Detail Page' },\r\n            ]}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Row>\r\n            <Col>\r\n              <InputGroup className=\"mb-3\">\r\n                <button type=\"submit\" className=\"btn btn-success\" onClick={changePage}>\r\n                  ADD\r\n                </button>\r\n                &nbsp;\r\n                <Form.Control\r\n                  placeholder=\"Search Box\"\r\n                  aria-label=\"Recipient's username\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Box>\r\n        <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n          {/* Table Section */}\r\n          <h4>Employee List </h4>\r\n          <StyledTable>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"justify\">User Id</TableCell>\r\n                <TableCell align=\"justify\">Name</TableCell>\r\n                <TableCell align=\"justify\">Email</TableCell>\r\n                <TableCell align=\"justify\">Mobile Number</TableCell>\r\n                <TableCell align=\"justify\">Status</TableCell>\r\n                <TableCell align=\"center\">Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {userData.map((subscriber, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell align=\"justify\">{subscriber.userId}</TableCell>\r\n                  <TableCell align=\"justify\">\r\n                    {subscriber.firstName} {subscriber.lastName}\r\n                  </TableCell>\r\n                  <TableCell align=\"justify\">{subscriber.email}</TableCell>\r\n                  <TableCell align=\"justify\">{subscriber.mobileNo}</TableCell>\r\n                  <TableCell align=\"justify\">\r\n                    {subscriber.recodStatus == 1 ? (\r\n                      <Chip color=\"success\" label=\"Active\" />\r\n                    ) : (\r\n                      <Chip color=\"warning\" label=\"Inactive\" />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Link to=\"/employees/editEmployee\" state={subscriber}>\r\n                      <IconButton>\r\n                        <Icon color=\"success\">edit</Icon>\r\n                      </IconButton>\r\n                    </Link>\r\n                    {/* <IconButton>\r\n                      <Icon color=\"warning\">delete</Icon>\r\n                    </IconButton> */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageEmployee;\r\n"],"sourceRoot":""}