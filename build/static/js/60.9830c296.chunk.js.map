{"version":3,"sources":["app/views/catalogue/catalogues/manageCatalogue.jsx","app/views/catalogue/catalogues/editCatalogue.jsx"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","ManageCatalogue","useState","obj1","setObj1","APIData","setAPIData","show","setShow","handleClose","navigate","useNavigate","items","localStorage","getItem","useEffect","axios","post","catId","headers","then","response","data","className","routeSegments","name","path","type","onClick","Control","placeholder","width","overflow","align","map","catalogue","index","id","gsType","gsName","gsPrice","status","label","color","handleShow","onHide","backdrop","keyboard","size","centered","Header","Title","Body","theEditCatalogue","handleDialog","Footer","style","marginTop","EditCatalogue","setGsType","setGsName","setGsPrice","catStatus","setCatStatus","gsDescription","setGsDescription","UpdateCatalogue","catType","price","description","actionBy","onSubmit","e","preventDefault","md","Label","onChange","target","value","sx","m","minWidth","Group","controlId","as","rows","console","log"],"mappings":"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","file":"static/js/60.9830c296.chunk.js","sourcesContent":["import { styled } from '@mui/system';\r\nimport { Breadcrumb } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Modal, InputGroup } from 'react-bootstrap';\r\nimport EditCatalogue from './editCatalogue';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Chip,\r\n  TableRow,\r\n} from '@mui/material';\r\nimport { capitalize } from 'lodash';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\n\r\nconst ManageCatalogue = () => {\r\n  const [obj1, setObj1] = useState(null);\r\n  const [APIData, setAPIData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  //Dialog Form\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (catalogue) => {\r\n    setObj1(catalogue);\r\n    setShow(true);\r\n  };\r\n  const navigate = useNavigate();\r\n  const changePage = () => {\r\n    navigate('/catalogues/addCatalogue');\r\n  };\r\n  //get method\r\n  const items = localStorage.getItem('accessToken');\r\n  const getCatalogueData = () => {\r\n    axios.post(`http://213.136.72.177/cms/api/getCatalogue`, { catId: 0 },\r\n      { headers: { \"x-access-token\": items } })\r\n      .then((response) => {\r\n        setAPIData(response.data.data);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getCatalogueData()\r\n  }, [APIData]);\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb\r\n            routeSegments={[\r\n              { name: 'Manage Catalogue', path: '/catalogues/manageCatalogue' },\r\n              { name: 'Catalogue Detail Page' },\r\n            ]}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Row>\r\n            <Col>\r\n              <InputGroup className=\"mb-3\">\r\n                <button type=\"submit\" className=\"btn btn-success\" onClick={changePage}>\r\n                  ADD\r\n                </button>\r\n                &nbsp;\r\n                <Form.Control\r\n                  placeholder=\"Search Box\"\r\n                  aria-label=\"Recipient's username\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Box>\r\n        <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n          {/* Table Section */}\r\n          <h4>Catalogue Table</h4>\r\n          <StyledTable>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"justify\">Catalogue Id</TableCell>\r\n                <TableCell align=\"justify\">Catalogue Type</TableCell>\r\n                <TableCell align=\"justify\">Name</TableCell>\r\n                <TableCell align=\"justify\">Price</TableCell>\r\n                <TableCell align=\"justify\">Status</TableCell>\r\n                <TableCell align=\"center\">Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {APIData.map((catalogue, index) => {\r\n                return (\r\n                  <TableRow key={index}>\r\n                    <TableCell align=\"justify\">{catalogue.id}</TableCell>\r\n                    <TableCell align=\"justify\">{catalogue.gsType}</TableCell>\r\n                    <TableCell align=\"justify\">{catalogue.gsName}</TableCell>\r\n                    <TableCell align=\"justify\">{catalogue.gsPrice}</TableCell>\r\n                    <TableCell align=\"justify\">\r\n                      {catalogue.status == 0 ? (\r\n                        <> <Chip label=\"Inactive\" color=\"warning\" /></>\r\n                      ) :\r\n                        (\r\n                          <> <Chip label=\"Active\" color=\"success\" /></>\r\n                        )\r\n                      }\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {/* <IconButton\r\n                        // onClick={(event) => updateData(event, subscriber)}\r\n                        onClick={() => handleShow(subscriber)}\r\n                      >\r\n                        <Icon color=\"success\">edit</Icon>\r\n                      </IconButton> */}\r\n                      <IconButton onClick={() => handleShow(catalogue)}>\r\n                        <Icon color=\"success\">edit</Icon>\r\n                      </IconButton>\r\n                      {/* <IconButton>\r\n                        <Icon color=\"warning\">delete</Icon>\r\n                      </IconButton> */}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </Box>\r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>Update Catalogue</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <EditCatalogue theEditCatalogue={obj1} handleDialog={handleClose} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-error\"\r\n              style={{ marginTop: 5 + 'px' }}\r\n              onClick={handleClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n            {/* <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n              style={{ marginTop: 5 + 'px' }}\r\n              onClick={handleClose}\r\n            >\r\n              Update\r\n            </button> */}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageCatalogue;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n  margin: '410px',\r\n}));\r\nconst EditCatalogue = ({ theEditCatalogue, handleDialog }) => {\r\n  // console.log(theEditCatalogue)\r\n  const [id, setId] = useState(theEditCatalogue.id);\r\n  const [gsType, setGsType] = useState(theEditCatalogue.gsType);\r\n  const [gsName, setGsName] = useState(theEditCatalogue.gsName);\r\n  const [gsPrice, setGsPrice] = useState(theEditCatalogue.gsPrice);\r\n  const [catStatus, setCatStatus] = useState(theEditCatalogue.status);\r\n  const [gsDescription, setGsDescription] = useState(theEditCatalogue.gsDescription);\r\n\r\n  const UpdateCatalogue = {\r\n    catId: id,\r\n    catType: gsType,\r\n    gsName: gsName,\r\n    price: gsPrice,\r\n    description: gsDescription,\r\n    catStatus: catStatus,\r\n    actionBy: 1,\r\n  };\r\n  const updateCatalogue = (e) => {\r\n    const items = localStorage.getItem('accessToken');\r\n    console.log({ UpdateCatalogue });\r\n    e.preventDefault();\r\n    axios.post(`http://213.136.72.177/cms/api/upsertCatalogue`, UpdateCatalogue, { headers: { \"x-access-token\": items } }).then(() => useEffect);\r\n    handleDialog();\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <Container>\r\n      {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"6\" className=\"ml-8\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setGsName(e.target.value || '')}\r\n              value={gsName == null ? '' : gsName}\r\n              placeholder=\"Enter the Name\"\r\n            />\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormControl sx={{ m: 0, minWidth: 330 }} size=\"small\" >\r\n              <Form.Label>Type</Form.Label>\r\n              <Select value={gsType} label=\"Type\" onChange={(e) => setGsType(e.target.value)}>\r\n                <MenuItem value=\"\">Select the Type</MenuItem>\r\n                <MenuItem value=\"Service\">Service</MenuItem>\r\n                <MenuItem value=\"Product\">Product</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"mt-1\">\r\n            <Form.Label>Price</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setGsPrice(e.target.value)}\r\n              value={gsPrice}\r\n              placeholder=\"Enter the Price\"\r\n            />\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormControl sx={{ m: 0, minWidth: 330 }} size=\"small\" >\r\n              <Form.Label>Status</Form.Label>\r\n              <Select value={catStatus} label=\"Type\" onChange={(e) => setCatStatus(e.target.value)}>\r\n                <MenuItem value=\"\">Select the Type</MenuItem>\r\n                <MenuItem value={0}>INACTIVE</MenuItem>\r\n                <MenuItem value={1}>ACTIVE</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-1\">\r\n          <Col>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                onChange={(e) => setGsDescription(e.target.value)}\r\n                value={gsDescription}\r\n                placeholder=\"Write Description\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n              style={{ marginTop: 5 + 'px' }}\r\n              onClick={updateCatalogue}\r\n            >\r\n              Update\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      {/* </SimpleCard> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditCatalogue;\r\n"],"sourceRoot":""}