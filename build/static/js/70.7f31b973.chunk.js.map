{"version":3,"sources":["app/views/sessions/JwtLogin.jsx"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","JWTRoot","backgroundImage","minHeight","maxWidth","margin","borderRadius","initialValues","userName","password","remember","validationSchema","Yup","shape","min","required","JwtLogin","useTheme","navigate","useNavigate","useState","loading","setLoading","login","useAuth","handleFormSubmit","values","className","container","item","sm","xs","p","sx","minWidth","src","width","alt","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","mb","gap","checked","style","marginLeft","color","my"],"mappings":"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","file":"static/js/70.7f31b973.chunk.js","sourcesContent":["import { LoadingButton } from '@mui/lab';\r\nimport { Card, Checkbox, Grid, TextField } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { Paragraph } from 'app/components/Typography';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { Formik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  padding: '24px',\r\n  position: 'relative',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst JWTRoot = styled(JustifyBox)(() => ({\r\n  // background: '#6876b0',\r\n  backgroundImage: \"url('/assets/images/Background login.jpg')\",\r\n  minHeight: '100% !important',\r\n  '& .card': {\r\n    maxWidth: 500,\r\n    minHeight: 400,\r\n    margin: '1rem',\r\n    display: 'flex',\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\n// inital login credentials\r\nconst initialValues = {\r\n  userName: '',\r\n  password: '',\r\n  remember: true,\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, 'Password must be 6 character length')\r\n    .required('Password is required!'),\r\n  userName: Yup.string()\r\n    .min(3, 'User Name must be 3 character length')\r\n    .required('User Name is required!'),\r\n});\r\n\r\nconst JwtLogin = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { login } = useAuth();\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      await login(values.userName, values.password);\r\n      navigate('/');\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  // const handleChange = () => {\r\n\r\n  // }\r\n  return (\r\n    <JWTRoot>\r\n      <Card className=\"card\">\r\n        <Grid container>\r\n          <Grid item sm={6} xs={12}>\r\n            <JustifyBox p={4} height=\"100%\" sx={{ minWidth: 320 }} className=\"ml-5\">\r\n              <img src=\"/assets/images/CRM logo.png\" width=\"100%\" alt=\"\" />\r\n            </JustifyBox>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item sm={6} xs={12}>\r\n          <ContentBox>\r\n            <Formik\r\n              onSubmit={handleFormSubmit}\r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n            >\r\n              {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                    label=\"UserName\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    value={values.userName}\r\n                    onChange={handleChange}\r\n                    helperText={touched.userName && errors.userName}\r\n                    error={Boolean(errors.userName && touched.userName)}\r\n                    sx={{ mb: 3 }}\r\n                  />\r\n\r\n                  <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    helperText={touched.password && errors.password}\r\n                    error={Boolean(errors.password && touched.password)}\r\n                    sx={{ mb: 1.5 }}\r\n                  />\r\n\r\n                  <FlexBox justifyContent=\"space-between\">\r\n                    <FlexBox gap={1}>\r\n                      <Checkbox\r\n                        size=\"small\"\r\n                        name=\"remember\"\r\n                        onChange={handleChange}\r\n                        checked={values.remember}\r\n                        sx={{ padding: 0 }}\r\n                      />\r\n\r\n                      <Paragraph>Remember Me</Paragraph>\r\n                    </FlexBox>\r\n\r\n                    {/* <NavLink\r\n                        to=\"/session/forgot-password\"\r\n                        style={{ color: theme.palette.primary.main }}\r\n                      >\r\n                        Forgot password?\r\n                      </NavLink> */}\r\n                  </FlexBox>\r\n\r\n                  <LoadingButton\r\n                    style={{ marginLeft: \"140px\" }}\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    loading={loading}\r\n                    variant=\"contained\"\r\n                    sx={{ my: 2 }}\r\n                  >\r\n                    Login\r\n                  </LoadingButton>\r\n\r\n                  {/* <Paragraph>\r\n                      Don't have an account?\r\n                      <NavLink\r\n                        to=\"/session/signup\"\r\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}\r\n                      >\r\n                        Register\r\n                      </NavLink>\r\n                    </Paragraph> */}\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </ContentBox>\r\n\r\n        </Grid>\r\n      </Card>\r\n    </JWTRoot>\r\n  );\r\n};\r\n\r\nexport default JwtLogin;\r\n\r\n"],"sourceRoot":""}