{"version":3,"sources":["app/views/account/leave/editLeave.jsx","app/views/account/leave/addLeave.jsx","app/views/account/leave/manageLeave.jsx"],"names":["EditLeave","theEditData","handleClose","org","localStorage","getItem","useState","empName","setEmpName","leaveReason","setLeaveReason","no_of_days","setNoOfDays","startDate","endDate","status","setStatus","message","setMessage","Row","Col","md","Form","Label","Control","disabled","required","value","onChange","e","target","placeholder","type","Date","toLocaleDateString","FormControl","sx","m","width","size","className","Select","label","MenuItem","style","textAlign","Button","onClick","variant","color","LeaveData","department","organization","axios","put","BASE_URL1","_id","AddLeave","userName","setStartDate","setEndDate","post","Container","styled","theme","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","ManageLeave","obj1","setObj1","APIData","setAPIData","show","setShow","fullName","useNavigate","updateStatus","setUpdateStatus","handleShowStatus","handleCloseStatus","roleCode","getLeaveData","get","then","response","data","useEffect","Box","routeSegments","name","path","InputGroup","overflow","TableHead","borderLeft","borderRight","TableRow","TableCell","align","TableBody","map","row","index","border","component","scope","Chip","IconButton","delete","handleClickSnak","Modal","onHide","backdrop","keyboard","centered","Header","Title","Body"],"mappings":"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","file":"static/js/83.f0fdb54d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, InputLabel, MenuItem, FormControl, Select, TextField, Button, Autocomplete } from \"@mui/material\";\r\nimport axios from 'axios';\r\nimport { BASE_URL1 } from 'app/utils/constant';\r\nimport { Col, Row, Form } from 'react-bootstrap';\r\n\r\nconst EditLeave = ({ theEditData, handleClose }) => {\r\n    const org = localStorage.getItem('branchName')\r\n\r\n    const [empName, setEmpName] = useState(theEditData.empName);\r\n    const [leaveReason, setLeaveReason] = useState(theEditData.leaveReason);\r\n    const [no_of_days, setNoOfDays] = useState(theEditData.no_of_days);\r\n    const [startDate, setStartDate] = useState(theEditData.startDate);\r\n    const [endDate, setEndDate] = useState(theEditData.endDate);\r\n    const [status, setStatus] = useState(theEditData.status);\r\n    const [message, setMessage] = useState(theEditData.message);\r\n\r\n    const updateLeaveData = () => {\r\n        const LeaveData = {\r\n            empName: empName,\r\n            leaveReason: leaveReason,\r\n            no_of_days: no_of_days,\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            department: \"Advisory\",\r\n            organization: org,\r\n            status: status,\r\n            message: message\r\n\r\n        };\r\n        axios.put(BASE_URL1 + \"/updateLeave/\" + theEditData._id, LeaveData);\r\n        handleClose();\r\n    };\r\n\r\n    const changePage = () => {\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <form>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Employee Name</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            required\r\n                            value={empName}\r\n                            onChange={(e) => setEmpName(e.target.value)}\r\n                            placeholder='Enter the Employee Name'\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>No of Day's</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            placeholder=\"Enter the No of Days\"\r\n                            value={no_of_days}\r\n                            onChange={(e) => setNoOfDays(e.target.value)}\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <Form.Label>Leave Reason</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            required\r\n                            disabled\r\n                            placeholder=\"Please Enter the Leave Reason\"\r\n                            value={leaveReason}\r\n                            onChange={(e) => setLeaveReason(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Start Date</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            required\r\n                            value={new Date(startDate).toLocaleDateString('en-GB')}\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>End Date</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            required\r\n                            value={new Date(endDate).toLocaleDateString('en-GB')}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <FormControl sx={{ m: 0, width: '100%' }} size=\"small\" className=\"mt-1\">\r\n                            <Form.Label>Status</Form.Label>\r\n                            <Select required value={status}\r\n                                onChange={(e) => setStatus(e.target.value)}\r\n                                label=\".\"\r\n                            >\r\n                                <MenuItem value={0}>Approved</MenuItem>\r\n                                <MenuItem value={1}>Waiting</MenuItem>\r\n                                <MenuItem value={2}>Cancel</MenuItem>\r\n                                <MenuItem value={3}>Reject</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <Form.Label>Message</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            required\r\n                            placeholder=\"Message (If Any)\"\r\n                            value={message}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </form>\r\n            <br />\r\n            <div style={{ textAlign: 'right' }}>\r\n                <Button onClick={changePage} variant=\"contained\">Cancel</Button>&nbsp;\r\n                <Button variant=\"contained\" color=\"success\" onClick={updateLeaveData}>Update</Button>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default EditLeave;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, InputLabel, MenuItem, FormControl, Select, TextField, Button, Autocomplete } from \"@mui/material\";\r\nimport axios from 'axios';\r\nimport { BASE_URL1 } from 'app/utils/constant';\r\nimport { Col, Row, Form } from 'react-bootstrap';\r\n\r\nconst AddLeave = ({ handleClose }) => {\r\n    const userName = localStorage.getItem('name')\r\n\r\n    const [empName, setEmpName] = useState(userName);\r\n    const [leaveReason, setLeaveReason] = useState(\"\");\r\n    const [no_of_days, setNoOfDays] = useState();\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(\"\");\r\n\r\n    const org = localStorage.getItem('branchName')\r\n\r\n    const postLeaveData = () => {\r\n        const LeaveData = {\r\n            empName: empName,\r\n            leaveReason: leaveReason,\r\n            no_of_days: no_of_days,\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            department: \"Advisory\",\r\n            status: 1,\r\n            organization: org,\r\n        };\r\n        axios.post(BASE_URL1 + \"/saveLeave\", LeaveData);\r\n        handleClose();\r\n    };\r\n\r\n    const changePage = () => {\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <form>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Employee Name</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            required\r\n                            value={empName}\r\n                            onChange={(e) => setEmpName(e.target.value)}\r\n                            placeholder='Enter the Employee Name'\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>No of Day's</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder=\"Enter the No of Days\"\r\n                            value={no_of_days}\r\n                            onChange={(e) => setNoOfDays(e.target.value)}\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <Form.Label>Leave Reason</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            required\r\n                            placeholder=\"Please Enter the Leave Reason\"\r\n                            value={leaveReason}\r\n                            onChange={(e) => setLeaveReason(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Start Date</Form.Label>\r\n                        <Form.Control\r\n                            type='date'\r\n                            value={startDate}\r\n                            onChange={(e) => setStartDate(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>End Date</Form.Label>\r\n                        <Form.Control\r\n                            type='date'\r\n                            value={endDate}\r\n                            onChange={(e) => setEndDate(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </form>\r\n            <br />\r\n            <div style={{ textAlign: 'right' }}>\r\n                <Button onClick={changePage} variant=\"contained\">Cancel</Button>&nbsp;\r\n                <Button variant=\"contained\" color=\"success\" onClick={postLeaveData}>Submit</Button>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AddLeave;\r\n","import { styled } from '@mui/system';\r\nimport { Breadcrumb } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Modal, InputGroup } from 'react-bootstrap';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    Chip,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport { BASE_URL, BASE_URL1 } from 'app/utils/constant';\r\nimport EditLeave from './editLeave';\r\nimport AddLeave from './addLeave';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\nconst ManageLeave = () => {\r\n    const [obj1, setObj1] = useState(null);\r\n    const [APIData, setAPIData] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    //Dialog Form\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (catalogue) => {\r\n        setObj1(catalogue);\r\n        setShow(true);\r\n    };\r\n    const navigate = useNavigate();\r\n    const changePage = () => {\r\n        navigate('/catalogues/addCatalogue');\r\n    };\r\n\r\n    const fullName = localStorage.getItem('name')\r\n\r\n    const [updateStatus, setUpdateStatus] = useState(false)\r\n    //Dialog Form\r\n\r\n    const handleShowStatus = () => {\r\n        setUpdateStatus(true);\r\n    };\r\n    const handleCloseStatus = () => setUpdateStatus(false);\r\n\r\n    //get method\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n\r\n    const org = localStorage.getItem('branchName')\r\n\r\n    const handleClickSnak = (row) => {\r\n        axios.delete(BASE_URL1 + `/deleteLeave/` + row._id)\r\n    };\r\n    const getLeaveData = async () => {\r\n        if (roleCode == \"EMP\") {\r\n            await axios.get(BASE_URL1 + `/getLeave?empName=` + fullName)\r\n                .then((response) => {\r\n                    setAPIData(response.data);\r\n                }\r\n                );\r\n        }\r\n        else if (roleCode == \"BM\") {\r\n            await axios.get(BASE_URL1 + `/getLeave?organization=` + org)\r\n                .then((response) => {\r\n                    setAPIData(response.data);\r\n                }\r\n                );\r\n        }\r\n        else {\r\n            await axios.get(BASE_URL1 + `/getLeave`)\r\n                .then((response) => {\r\n                    setAPIData(response.data);\r\n                }\r\n                );\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLeaveData()\r\n    }, [APIData]);\r\n    return (\r\n        <Container>\r\n            <Box>\r\n                <Box className=\"breadcrumb\">\r\n                    <Breadcrumb\r\n                        routeSegments={[\r\n                            { name: 'Manage Leave Request', path: '/manageLeave' },\r\n                            { name: 'View Leave Details' },\r\n                        ]}\r\n                    />\r\n                </Box>\r\n                <Box>\r\n                    <Row>\r\n                        <Col>\r\n                            <InputGroup className=\"mb-3\">\r\n                                {(function () {\r\n                                    if (roleCode == \"EMP\" || roleCode == \"TL\") {\r\n                                        return <> <button type=\"submit\" className=\"btn btn-success\" onClick={handleShowStatus}>\r\n                                            ADD\r\n                                        </button>\r\n                                            &nbsp;</>\r\n                                    }\r\n\r\n                                    else {\r\n                                        return <></>\r\n                                    }\r\n                                })()}\r\n\r\n\r\n                                <Form.Control\r\n                                    placeholder=\"Search By Employee Name\"\r\n                                    aria-label=\"Recipient's username\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                // value={searchBox}\r\n                                // onChange={(e) => setSearchBox(e.target.value)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Box>\r\n                <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                    {/* Table Section */}\r\n                    <h4>Manage Leave Request</h4>\r\n                    <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                        <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Leave ID</TableCell>\r\n                                <TableCell align=\"center\">Employee</TableCell>\r\n                                <TableCell align=\"center\">Leave Reason</TableCell>\r\n                                <TableCell align=\"center\">No of Days</TableCell>\r\n                                <TableCell align=\"center\">Leave Start Date</TableCell>\r\n                                <TableCell align=\"center\">Leave End Date</TableCell>\r\n                                <TableCell align=\"center\">Status</TableCell>\r\n                                {(function () {\r\n                                    if (roleCode == \"ADMIN\" || roleCode == \"BM\") {\r\n                                        return <TableCell align=\"center\">Action</TableCell>\r\n                                    }\r\n                                    else {\r\n                                        return <></>\r\n                                    }\r\n                                })()}\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {APIData.map((row, index) => {\r\n                                return (\r\n                                    <TableRow\r\n                                        key={index}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            Leave-{index + 101}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.empName}</TableCell>\r\n                                        <TableCell align=\"center\">{row.leaveReason}</TableCell>\r\n                                        <TableCell align=\"center\">{row.no_of_days}</TableCell>\r\n                                        <TableCell align=\"center\">{row.startDate}</TableCell>\r\n                                        <TableCell align=\"center\">{row.endDate}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n\r\n                                            {(function () {\r\n                                                if (row.status == 0) {\r\n                                                    return <> <Chip label=\"Approved\" color=\"success\" /></>\r\n                                                }\r\n                                                else if (row.status == 1) {\r\n                                                    return <> <Chip label=\"Waiting\" color=\"warning\" /></>\r\n                                                }\r\n                                                else if (row.status == 2) {\r\n                                                    return <> <Chip label=\"Cancel\" /> </>\r\n                                                }\r\n                                                else {\r\n                                                    return <><Chip label=\"Reject\" color=\"error\" /></>\r\n                                                }\r\n                                            })()}\r\n\r\n                                        </TableCell>\r\n                                        {(function () {\r\n                                            if (roleCode == \"ADMIN\" || roleCode == \"BM\") {\r\n                                                return <><TableCell align=\"center\">\r\n                                                    <IconButton >\r\n                                                        <VisibilityIcon onClick={() => handleShow(row)} />\r\n                                                    </IconButton>\r\n                                                    <IconButton >\r\n                                                        <DeleteIcon onClick={() => handleClickSnak(row)} />\r\n                                                    </IconButton>\r\n\r\n                                                </TableCell>\r\n                                                </>\r\n                                            }\r\n                                            else {\r\n                                                return <></>\r\n                                            }\r\n                                        })()}\r\n\r\n                                    </TableRow>\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                    </StyledTable>\r\n\r\n                </Box>\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Update Leave Request</Modal.Title>\r\n                        <IconButton type=\"button\" onClick={handleClose}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <EditLeave theEditData={obj1} handleClose={handleClose}></EditLeave>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    show={updateStatus}\r\n                    onHide={handleCloseStatus}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Raise Leave Request</Modal.Title>\r\n                        <IconButton type=\"button\" onClick={handleCloseStatus}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <AddLeave handleClose={handleCloseStatus}></AddLeave>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ManageLeave;\r\n"],"sourceRoot":""}