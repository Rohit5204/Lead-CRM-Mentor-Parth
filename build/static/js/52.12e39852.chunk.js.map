{"version":3,"sources":["app/views/catalogue/catalogues/manageCatalogue.jsx","app/views/catalogue/catalogues/editCatalogue.jsx"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","ManageCatalogue","useState","obj1","setObj1","APIData","setAPIData","show","setShow","handleClose","navigate","useNavigate","items","localStorage","getItem","useEffect","axios","post","catId","headers","then","response","data","className","routeSegments","name","path","type","onClick","Control","placeholder","width","overflow","align","map","catalogue","index","id","gsType","gsName","gsPrice","label","color","handleShow","onHide","backdrop","keyboard","size","centered","Header","Title","Body","theEditCatalogue","Footer","style","marginTop","EditCatalogue","setGsType","setGsName","setGsPrice","gsDescription","setGsDescription","UpdateCatalogue","catType","price","description","catStatus","actionBy","onSubmit","e","preventDefault","md","sx","m","minWidth","Label","value","onChange","target","Group","controlId","as","rows","console","log"],"mappings":"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","file":"static/js/52.12e39852.chunk.js","sourcesContent":["import { styled } from '@mui/system';\r\nimport { Breadcrumb } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Modal, InputGroup } from 'react-bootstrap';\r\nimport EditCatalogue from './editCatalogue';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Chip,\r\n  TableRow,\r\n} from '@mui/material';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\n\r\nconst ManageCatalogue = () => {\r\n  const [obj1, setObj1] = useState(null);\r\n  const [APIData, setAPIData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  //Dialog Form\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (catalogue) => {\r\n    setObj1(catalogue);\r\n    setShow(true);\r\n  };\r\n  const navigate = useNavigate();\r\n  const changePage = () => {\r\n    navigate('/catalogues/addCatalogue');\r\n  };\r\n  //get method\r\n  const items = localStorage.getItem('accessToken');\r\n  const getCatalogueData = () => {\r\n    axios.post(`http://35.89.6.16:4002/api/getCatalogue`, { catId: 0 }, { headers: { \"x-access-token\": items } })\r\n      .then((response) => {\r\n        setAPIData(response.data.data);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getCatalogueData()\r\n  }, [APIData]);\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb\r\n            routeSegments={[\r\n              { name: 'Manage Catalogue', path: '/catalogues/manageCatalogue' },\r\n              { name: 'Catalogue Detail Page' },\r\n            ]}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Row>\r\n            <Col>\r\n              <InputGroup className=\"mb-3\">\r\n                <button type=\"submit\" className=\"btn btn-success\" onClick={changePage}>\r\n                  ADD\r\n                </button>\r\n                &nbsp;\r\n                <Form.Control\r\n                  placeholder=\"Search Box\"\r\n                  aria-label=\"Recipient's username\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Box>\r\n        <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n          {/* Table Section */}\r\n          <h4>Catalogue Table</h4>\r\n          <StyledTable>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"justify\">Catalogue Id</TableCell>\r\n                <TableCell align=\"justify\">Catalogue Type</TableCell>\r\n                <TableCell align=\"justify\">Name</TableCell>\r\n                <TableCell align=\"justify\">Price</TableCell>\r\n                <TableCell align=\"justify\">Status</TableCell>\r\n                <TableCell align=\"center\">Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {APIData.map((catalogue, index) => {\r\n                return (\r\n                  <TableRow key={index}>\r\n                    <TableCell align=\"justify\">{catalogue.id}</TableCell>\r\n                    <TableCell align=\"justify\">{catalogue.gsType}</TableCell>\r\n                    <TableCell align=\"justify\">{catalogue.gsName}</TableCell>\r\n                    <TableCell align=\"justify\">{catalogue.gsPrice}</TableCell>\r\n                    <TableCell align=\"justify\">\r\n                      <Chip label=\"Active\" color=\"success\" />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {/* <IconButton\r\n                        // onClick={(event) => updateData(event, subscriber)}\r\n                        onClick={() => handleShow(subscriber)}\r\n                      >\r\n                        <Icon color=\"success\">edit</Icon>\r\n                      </IconButton> */}\r\n                      <IconButton onClick={() => handleShow(catalogue)}>\r\n                        <Icon color=\"success\">edit</Icon>\r\n                      </IconButton>\r\n                      {/* <IconButton>\r\n                        <Icon color=\"warning\">delete</Icon>\r\n                      </IconButton> */}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </Box>\r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>Update Catalogue</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <EditCatalogue theEditCatalogue={obj1} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-error\"\r\n              style={{ marginTop: 5 + 'px' }}\r\n              onClick={handleClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n            {/* <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n              style={{ marginTop: 5 + 'px' }}\r\n              onClick={handleClose}\r\n            >\r\n              Update\r\n            </button> */}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageCatalogue;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n  margin: '410px',\r\n}));\r\nconst EditCatalogue = ({ theEditCatalogue }) => {\r\n  // console.log(theEditCatalogue)\r\n  const [id, setId] = useState(theEditCatalogue.id);\r\n  const [gsType, setGsType] = useState(theEditCatalogue.gsType);\r\n  const [gsName, setGsName] = useState(theEditCatalogue.gsName);\r\n  const [gsPrice, setGsPrice] = useState(theEditCatalogue.gsPrice);\r\n  const [gsDescription, setGsDescription] = useState(theEditCatalogue.gsDescription);\r\n\r\n  const UpdateCatalogue = {\r\n    catId: id,\r\n    catType: gsType,\r\n    gsName: gsName,\r\n    price: gsPrice,\r\n    description: gsDescription,\r\n    catStatus: 1,\r\n    actionBy: 1,\r\n  };\r\n  const updateCatalogue = (e) => {\r\n    const items = localStorage.getItem('accessToken');\r\n    console.log({ UpdateCatalogue });\r\n    e.preventDefault();\r\n    axios.post(`http://35.89.6.16:4002/api/upsertCatalogue`, UpdateCatalogue, { headers: { \"x-access-token\": items } }).then(() => useEffect);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <Container>\r\n      {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"4\">\r\n            <FormControl sx={{ m: 0, minWidth: 200 }} size=\"small\" className=\"mt-1\">\r\n              <Form.Label>Type</Form.Label>\r\n              <Select value={gsType} label=\"Type\" onChange={(e) => setGsType(e.target.value)}>\r\n                <MenuItem value=\"\">Select the Type</MenuItem>\r\n                <MenuItem value=\"Service\">Service</MenuItem>\r\n                <MenuItem value=\"Product\">Product</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Col>\r\n          <Col className=\"mt-1\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setGsName(e.target.value || '')}\r\n              value={gsName == null ? '' : gsName}\r\n              placeholder=\"Enter the Name\"\r\n            />\r\n          </Col>\r\n          <Col className=\"mt-1\">\r\n            <Form.Label>Price</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setGsPrice(e.target.value)}\r\n              value={gsPrice}\r\n              placeholder=\"Enter the Price\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-1\">\r\n          <Col>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                onChange={(e) => setGsDescription(e.target.value)}\r\n                value={gsDescription}\r\n                placeholder=\"Write Description\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n              style={{ marginTop: 5 + 'px' }}\r\n              onClick={updateCatalogue}\r\n            >\r\n              Update\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      {/* </SimpleCard> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditCatalogue;\r\n"],"sourceRoot":""}