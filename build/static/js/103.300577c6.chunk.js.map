{"version":3,"sources":["app/views/reward/reward/addReward.jsx","app/views/reward/reward/manageReward.jsx"],"names":["AddReward","handleDialog","today","Date","date","setDate","getDate","defaultValue","toISOString","split","useState","startDate","setStartDate","endDate","setEndDate","targetAmt","setTargetAmt","giftAmt","setGiftAmt","status","headers","localStorage","getItem","Form","onSubmit","data","createdBy","axios","post","BASE_URL","Row","Col","md","Label","Control","type","required","onChange","e","target","value","className","placeholder","Button","variant","onClick","Container","styled","theme","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","ManageReward","APIData","setAPIData","show","setShow","handleClose","showForm","setShowForm","handleCloseForm","useNavigate","getRewardData","get","then","response","useEffect","roleName","window","Box","routeSegments","name","path","InputGroup","width","overflow","style","TableHead","borderLeft","borderRight","TableRow","TableCell","align","TableBody","map","reward","index","id","toLocaleDateString","Chip","label","color","IconButton","Icon","Modal","backdrop","keyboard","onHide","animation","size","centered","Header","Body"],"mappings":"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","file":"static/js/103.300577c6.chunk.js","sourcesContent":["import { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Form, Row, Col, Button, InputGroup } from 'react-bootstrap';\r\nimport { Box, MenuItem, Autocomplete, TextField, FormControl, Select } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BASE_URL } from 'app/utils/constant';\r\n\r\n\r\nconst AddReward = ({ handleDialog }) => {\r\n\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 0;\r\n    const date = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().split('T')[0];\r\n\r\n    const [startDate, setStartDate] = useState(defaultValue);\r\n    const [endDate, setEndDate] = useState();\r\n    const [targetAmt, setTargetAmt] = useState(10000);\r\n    const [giftAmt, setGiftAmt] = useState(0);\r\n    const [status, setStatus] = useState(0);\r\n\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n\r\n    const postReward = () => {\r\n        const data = {\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            targetAmt: targetAmt,\r\n            giftAmt: giftAmt,\r\n            createdBy: 1,\r\n            status: status\r\n        }\r\n        axios.post(BASE_URL + `/api/saveReward`, data,\r\n            { headers: headers });\r\n        handleDialog();\r\n    }\r\n\r\n    const changePage = () => {\r\n        handleDialog()\r\n    };\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <Form onSubmit={postReward}>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Form.Label>Start Date</Form.Label>\r\n                    <Form.Control\r\n                        type='date'\r\n                        required\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        value={startDate}\r\n                    />\r\n                </Col>\r\n                <Col className=\"mt-1\" md=\"6\">\r\n                    <Form.Label>End Date</Form.Label>\r\n                    <Form.Control\r\n                        type='date'\r\n                        required\r\n                        onChange={(e) => setEndDate(e.target.value)}\r\n                        value={endDate}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <Form.Label>Target Amount</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        onChange={(e) => setTargetAmt(e.target.value)}\r\n                        value={targetAmt}\r\n                        placeholder=\"Enter the Target Amount\"\r\n                    />\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <Form.Label>Redeem Gift Amount</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        onChange={(e) => setGiftAmt(e.target.value)}\r\n                        value={giftAmt}\r\n                        placeholder=\"Enter the Gift Amount\"\r\n                    />\r\n                </Col>\r\n\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col className=\"d-flex justify-content-end\">\r\n                    <Button variant=\"secondary\" onClick={changePage}>\r\n                        Cancel\r\n                    </Button>\r\n                    &nbsp;\r\n                    <button type=\"submit\" className=\"btn btn-success\" >\r\n                        Save\r\n                    </button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Form>\r\n\r\n    );\r\n};\r\n\r\nexport default AddReward;\r\n\r\n\r\n","import { styled } from '@mui/system';\r\nimport { Breadcrumb } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Modal, InputGroup, Button } from 'react-bootstrap';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    Chip,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport { BASE_URL } from 'app/utils/constant';\r\nimport AddReward from './addReward';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\nconst ManageReward = () => {\r\n\r\n    const [APIData, setAPIData] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    };\r\n\r\n    const [showForm, setShowForm] = useState(false);\r\n    const handleCloseForm = () => setShowForm(false);\r\n    const handleShowForm = () => {\r\n        setShowForm(true);\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n    const changePage = () => {\r\n        navigate('/reward/manageReward');\r\n    };\r\n\r\n\r\n    //get method\r\n    const items = localStorage.getItem('accessToken');\r\n    const roleCode = localStorage.getItem('roleCode');\r\n    const userId = localStorage.getItem('userId');\r\n    const headers = {\r\n        \"x-access-token\": items,\r\n        \"roleCode\": roleCode,\r\n        \"userId\": userId\r\n    }\r\n\r\n    const getRewardData = async () => {\r\n        await axios.get(BASE_URL + `/api/getReward`,\r\n            { headers: headers })\r\n            .then((response) => {\r\n                setAPIData(response.data.data);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRewardData()\r\n    }, [APIData]);\r\n    const roleName = window.localStorage.getItem('roleName');\r\n    return (\r\n        <Container>\r\n            <Box>\r\n                <Box className=\"breadcrumb\">\r\n                    <Breadcrumb\r\n                        routeSegments={[\r\n                            { name: 'Manage Reward', path: '/reward/manageReward' },\r\n                        ]}\r\n                    />\r\n                </Box>\r\n                <Box>\r\n                    <Row>\r\n                        <Col>\r\n                            <InputGroup className=\"mb-3\">\r\n\r\n                                <Form.Control\r\n                                    placeholder=\"Search By Target Amount\"\r\n                                    aria-label=\"Recipient's username\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n\r\n\r\n                                />\r\n                                &nbsp;\r\n                                {roleName == \"Admin\" ? (<>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" onClick={handleShowForm}>\r\n                                        ADD\r\n                                    </button>\r\n                                </>\r\n                                ) : (<></>)}\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Box>\r\n                <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                    {/* Table Section */}\r\n\r\n                    <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '1px' }}>\r\n                        <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Reward Id</TableCell>\r\n                                <TableCell align=\"center\">Start Date</TableCell>\r\n                                <TableCell align=\"center\">End Date</TableCell>\r\n                                <TableCell align=\"center\">Target Amount</TableCell>\r\n                                <TableCell align=\"center\">Achieved Amount</TableCell>\r\n                                <TableCell align=\"center\">Status</TableCell>\r\n                                <TableCell align=\"center\">Reedem Gift</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {APIData.map((reward, index) => {\r\n                                return (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align=\"center\">{reward.id}</TableCell>\r\n                                        <TableCell align=\"center\">{new Date(reward.startDate).toLocaleDateString('en-GB')}</TableCell>\r\n                                        <TableCell align=\"center\">{new Date(reward.endDate).toLocaleDateString('en-GB')}</TableCell>\r\n                                        <TableCell align=\"center\">₹ {reward.targetAmt}</TableCell>\r\n                                        <TableCell align=\"center\">₹ 0</TableCell>\r\n                                        <TableCell align=\"center\">{(function () {\r\n                                            if (reward.status == 0) {\r\n                                                return <Chip label=\"Open Spot\" color=\"success\" />;\r\n                                            }\r\n                                            else {\r\n                                                return <Chip label=\"Expired\" color=\"error\" />\r\n                                            }\r\n                                        })()}</TableCell>\r\n\r\n                                        <TableCell align=\"center\">\r\n                                            {(function () {\r\n                                                if (reward.targetAmt >= 300000) {\r\n                                                    return <IconButton onClick={() => handleShow(reward)}>\r\n                                                        <Icon color=\"success\">visibility</Icon>\r\n                                                    </IconButton>;\r\n                                                }\r\n                                                else {\r\n                                                    return <Chip label=\"Target Not Triger\" color=\"error\" />\r\n                                                }\r\n                                            })()}\r\n\r\n                                        </TableCell>\r\n\r\n\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </StyledTable>\r\n\r\n                </Box>\r\n\r\n            </Box>\r\n            <Modal\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                show={showForm}\r\n                onHide={handleCloseForm}\r\n                animation={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <h5>Add Reward For Employee</h5>\r\n                    <IconButton type=\"button\" onClick={handleCloseForm}>\r\n                        <ClearIcon />\r\n                    </IconButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddReward handleDialog={handleCloseForm}></AddReward>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <h5>Hey You have Earned the Incentive</h5>\r\n                    <IconButton type=\"button\" onClick={handleClose}>\r\n                        <ClearIcon />\r\n                    </IconButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Button>You will get this in your Salary</Button>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ManageReward;\r\n"],"sourceRoot":""}