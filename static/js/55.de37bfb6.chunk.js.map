{"version":3,"sources":["app/views/lead/leads/systemMaster.jsx"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","a11yProps","SystemMaster","useState","masterName","setMasterName","inputText","setInputText","setId","APIData","setAPIData","edit","setEdit","useEffect","axios","get","then","response","data","deleteData","e","i","console","log","post","platformName","recodStatus","addedBy","updatedBy","updateData","event","preventDefault","setValue","className","routeSegments","name","path","title","flexGrow","container","spacing","item","xs","m","minWidth","labelId","label","onChange","target","variant","onClick","borderBottom","borderColor","newValue","width","overflow","align","map","subscriber","status","color"],"mappings":"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","file":"static/js/55.de37bfb6.chunk.js","sourcesContent":["import { Stack } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport {\r\n  TextField,\r\n  InputLabel,\r\n  MenuItem,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Grid,\r\n  TableRow,\r\n} from '@mui/material';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\nconst SystemMaster = () => {\r\n  const [masterName, setMasterName] = useState('platform');\r\n  const [inputText, setInputText] = useState('');\r\n  const [id, setId] = useState(null);\r\n  const [APIData, setAPIData] = useState([]);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://35.89.6.16:4002/api/getMasterData?masterName=platformmaster`)\r\n      .then((response) => {\r\n        setAPIData(response.data.data);\r\n      });\r\n  }, [APIData]);\r\n\r\n  //add data in the table\r\n  const postData = () => {\r\n    console.log({\r\n      masterName: masterName,\r\n      inputText: inputText,\r\n    });\r\n    axios\r\n      .post(`http://35.89.6.16:4002/api/mastersUpsert`, {\r\n        id: 0,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n      })\r\n      .then(() => useEffect);\r\n  };\r\n\r\n  const deleteData = (e, i) => {\r\n    console.log(i);\r\n    axios.post('http://35.89.6.16:4002/api/mastersUpsert', {\r\n      id: i.id,\r\n      masterName: 'platform',\r\n      inputText: i.platformName,\r\n      recodStatus: 0,\r\n      addedBy: 1,\r\n      updatedBy: 1,\r\n    });\r\n  };\r\n  const Edit = (e) => {\r\n    console.log({\r\n      masterName: masterName,\r\n      inputText: inputText,\r\n    });\r\n    e.preventDefault();\r\n    axios\r\n      .post(`http://35.89.6.16:4002/api/mastersUpsert`, {\r\n        id: id,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n      })\r\n      .then(() => useEffect);\r\n    setInputText('');\r\n  };\r\n  const updateData = (event, i) => {\r\n    event.preventDefault();\r\n    setEdit(!edit);\r\n    setId(i.id);\r\n    setMasterName(masterName);\r\n    setInputText(i.platformName);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postData();\r\n    setInputText('');\r\n  };\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleCChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handelClose = (e) => {\r\n    setEdit(!edit);\r\n    e.preventDefault();\r\n    setInputText('');\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: 'System Master', path: '/leads/systemMaster' },\r\n            { name: 'Add System Master' },\r\n          ]}\r\n        />\r\n      </Box>\r\n      {/* Form Section */}\r\n      <Stack>\r\n        <SimpleCard title=\"System Master Page\">\r\n          {/* <h5 className=\"ml-5\">System Master Page</h5> */}\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Grid container spacing={4}>\r\n              <Grid item xs={4}>\r\n                <FormControl sx={{ m: 1, minWidth: 320 }}>\r\n                  <InputLabel id=\"demo-simple-select-helper-label\">System Master</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    value={masterName}\r\n                    label=\"System Master\"\r\n                    onChange={(e) => setMasterName(e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"platform\">Platform</MenuItem>\r\n                    <MenuItem value=\"assign\">Assign</MenuItem>\r\n                    <MenuItem value=\"label\">Label</MenuItem>\r\n                    <MenuItem value=\"status\">Status</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl sx={{ m: 1, minWidth: 620 }}>\r\n                  <TextField\r\n                    name=\"inputText\"\r\n                    label=\"Enter the Name\"\r\n                    onChange={(e) => setInputText(e.target.value)}\r\n                    value={inputText}\r\n                  />\r\n                  <br />\r\n                  <div className=\"ml-2\">\r\n                    {edit ? (\r\n                      <Button variant=\"contained\" onClick={Edit}>\r\n                        Update Lead\r\n                      </Button>\r\n                    ) : (\r\n                      <Button variant=\"contained\" onClick={handleSubmit}>\r\n                        Add Lead\r\n                      </Button>\r\n                    )}\r\n                    &nbsp;\r\n                    <Button variant=\"contained\" onClick={handelClose}>\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </SimpleCard>\r\n        <br />\r\n      </Stack>\r\n      <SimpleCard title=\"List Of System Master \">\r\n        {/* Tab Section */}\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs value={value} onChange={handleCChange} aria-label=\"basic tabs example\">\r\n            <Tab label=\"Active Leads\" {...a11yProps(0)} />\r\n            <Tab label=\"Inactive Leads\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </Box>\r\n        <TabPanel value={value} index={0}>\r\n          {/* First Tab */}\r\n          <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n            {/* Table Section */}\r\n            <StyledTable>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"justify\">Lead Id</TableCell>\r\n                  <TableCell align=\"justify\">Lead Name</TableCell>\r\n                  <TableCell align=\"center\">Action</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {APIData.map((subscriber, index) => {\r\n                  if (subscriber.status == 1) {\r\n                    return (\r\n                      <TableRow key={index}>\r\n                        <TableCell align=\"justify\">{subscriber.id}</TableCell>\r\n                        <TableCell align=\"justify\">{subscriber.platformName}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <IconButton onClick={(event) => updateData(event, subscriber)}>\r\n                            <Icon color=\"success\">edit</Icon>\r\n                          </IconButton>\r\n                          <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                            <Icon color=\"warning\">delete</Icon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                })}\r\n              </TableBody>\r\n            </StyledTable>\r\n          </Box>\r\n        </TabPanel>\r\n        {/* Second Tab */}\r\n        <TabPanel value={value} index={1}>\r\n          <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n            {/* Inactive Table Section */}\r\n            <StyledTable>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"justify\">Lead Id</TableCell>\r\n                  <TableCell align=\"justify\">Lead Name</TableCell>\r\n                  <TableCell align=\"center\">Action</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {APIData.map((subscriber, index) => {\r\n                  if (subscriber.status == 0) {\r\n                    return (\r\n                      <TableRow key={index}>\r\n                        <TableCell align=\"justify\">{subscriber.id}</TableCell>\r\n                        <TableCell align=\"justify\">{subscriber.platformName}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <IconButton onClick={(event) => updateData(event, subscriber)}>\r\n                            <Icon color=\"success\">edit</Icon>\r\n                          </IconButton>\r\n                          <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                            <Icon color=\"warning\">delete</Icon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                })}\r\n              </TableBody>\r\n            </StyledTable>\r\n          </Box>\r\n        </TabPanel>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SystemMaster;\r\n"],"sourceRoot":""}