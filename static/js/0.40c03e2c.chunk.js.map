{"version":3,"sources":["../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/ElementChildren.js"],"names":["propTypes","type","PropTypes","string","tooltip","bool","as","elementType","Feedback","React","ref","Component","className","props","_jsx","classNames","displayName","FormCheckLabel","bsPrefix","htmlFor","controlId","useContext","FormContext","useBootstrapPrefix","FormCheck","id","bsSwitchPrefix","inline","reverse","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","hasChildOfType","input","FormCheckInput","Provider","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","classes","size","htmlSize","plaintext","readOnly","createWithBsPrefix","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","Col","defaultProps","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","any","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select","hasOwn","hasOwnProperty","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","prototype","includes","key","call","join","module","exports","default","DEFAULT_BREAKPOINTS","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","prefix","defaultPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","useIsRTL","dir","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","slice","BsComponent","Tag","resolvedPrefix","spans","forEach","brkPoint","span","offset","order","propValue","infix","useCol","colProps","warning","Row","decoratedBsPrefix","sizePrefix","cols","map","func","index","child","toArray","some"],"mappings":"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","file":"static/js/0.40c03e2c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };"],"sourceRoot":""}