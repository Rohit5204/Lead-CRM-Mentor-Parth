{"version":3,"sources":["app/views/systemMaster/systemMaster/editPlatform.jsx","app/views/systemMaster/systemMaster/platformMaster.jsx","app/views/systemMaster/systemMaster/editAssign.jsx","app/views/systemMaster/systemMaster/assignMaster.jsx","app/views/systemMaster/systemMaster/editLabel.jsx","app/views/systemMaster/systemMaster/labelMaster.jsx","app/views/systemMaster/systemMaster/editStatus.jsx","app/views/systemMaster/systemMaster/statusMaster.jsx","app/views/systemMaster/manageSystemMaster.jsx"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","EditPlatform","theEditPlatform","console","log","useState","id","masterName","setMasterName","platformName","inputText","setInputText","platformIcon","setplatformIcon","platformColor","setplatformColor","UpdatePlatform","recodStatus","addedBy","updatedBy","Form","onSubmit","e","preventDefault","Row","Col","md","Label","Control","disabled","value","onChange","target","placeholder","className","FormControl","sx","m","minWidth","size","Select","label","MenuItem","type","style","marginTop","onClick","items","localStorage","getItem","axios","post","headers","then","useEffect","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","TabPanel","props","children","index","other","role","hidden","Box","p","Typography","a11yProps","Div","ContentBox","Card","display","flexWrap","alignItems","justifyContent","padding","marginLeft","FabIcon","Fab","width","height","boxShadow","H3","color","textcolor","fontWeight","PlatformMaster","APIData","setAPIData","obj1","setObj1","show","setShow","setValue","PlatformPayload","get","response","data","handleClose","handleShow","subscriber","lg","title","required","backgroundColor","Grid","item","xs","Icon","fontSize","Button","variant","borderBottom","borderColor","event","newValue","overflow","TableHead","TableRow","TableCell","align","TableBody","map","status","IconButton","i","Modal","onHide","backdrop","keyboard","centered","Header","Title","Body","Footer","EditAssign","theEditAssign","name","AssignMaster","EditLabel","theEditLabel","LabelMaster","EditStatus","theEditStatus","StatusMaster","ManageMaster","routeSegments","path","Tabs","defaultActiveKey","fill","Tab","eventKey"],"mappings":"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","file":"static/js/81.4abbb9b9.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n  margin: '410px',\r\n}));\r\nconst EditPlatform = ({ theEditPlatform }) => {\r\n  console.log(theEditPlatform)\r\n  const [id, setId] = useState(theEditPlatform.id);\r\n  const [masterName, setMasterName] = useState('Platform');\r\n  const [inputText, setInputText] = useState(theEditPlatform.platformName);\r\n  const [platformIcon, setplatformIcon] = useState(theEditPlatform.platformIcon);\r\n  const [platformColor, setplatformColor] = useState(theEditPlatform.platformColor);\r\n\r\n  const UpdatePlatform = {\r\n    id: id,\r\n    masterName: 'platform',\r\n    inputText: inputText,\r\n    platformIcon: platformIcon,\r\n    platformColor: platformColor,\r\n    recodStatus: 1,\r\n    addedBy: 1,\r\n    updatedBy: 1,\r\n  };\r\n  const updatePlatform = (e) => {\r\n    const items = localStorage.getItem('accessToken');\r\n    console.log({ UpdatePlatform });\r\n    e.preventDefault();\r\n    axios.post(`http://213.136.72.177/cms/api/mastersUpsert`, UpdatePlatform, { headers: { \"x-access-token\": items } })\r\n      .then(() => useEffect);\r\n    setInputText('');\r\n    setplatformIcon('');\r\n    setplatformColor('')\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <Container>\r\n      {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Form.Label>Platform Name</Form.Label>\r\n            <Form.Control\r\n              disabled\r\n              value={masterName}\r\n              onChange={(e) => setMasterName(e.target.value)}\r\n              placeholder=\"Enter the Platform Name\"\r\n            />\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Form.Label>Input Text</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setInputText(e.target.value)}\r\n              value={inputText}\r\n              placeholder=\"Enter the Input Text\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className='mt-2'>\r\n          <Col>\r\n            <Form.Label>Platform Icon</Form.Label>\r\n            <FormControl sx={{ m: 0, minWidth: 330 }} size=\"small\" className=\"mt-1\">\r\n              {/* <InputLabel id=\"demo-simple-select-label\">Platform Icon</InputLabel> */}\r\n              <Select\r\n                // labelId=\"demo-simple-select-label\"\r\n                // id=\"demo-simple-select\"\r\n                onChange={(e) => setplatformIcon(e.target.value)}\r\n                value={platformIcon}\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value='s'>Select from the List</MenuItem>\r\n                <MenuItem value='facebook'>Facebook</MenuItem>\r\n                <MenuItem value='Twitter'>Twitter</MenuItem>\r\n                <MenuItem value='star'>Indiamart</MenuItem>\r\n                <MenuItem value='telegram'>Telegram</MenuItem>\r\n                <MenuItem value='WhatsApp'>Whatsapp</MenuItem>\r\n                <MenuItem value='Instagram'>Instagram</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Form.Label>Platform Color</Form.Label>\r\n            <FormControl sx={{ m: 0, minWidth: 330 }} size=\"small\" className=\"mt-1\">\r\n              {/* <InputLabel id=\"demo-simple-select-label\">Platform Icon</InputLabel> */}\r\n              <Select\r\n                // labelId=\"demo-simple-select-label\"\r\n                // id=\"demo-simple-select\"\r\n                onChange={(e) => setplatformColor(e.target.value)}\r\n                value={platformColor}\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value='v'>Select from the List</MenuItem>\r\n                <MenuItem value='#EB9694'>Light Pink</MenuItem>\r\n                <MenuItem value='#F4BE65'>Light Orange</MenuItem>\r\n                <MenuItem value='#19CABA'>Cyan</MenuItem>\r\n                <MenuItem value='#282f4e'>Green</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n              style={{ marginTop: 5 + 'px' }}\r\n              onClick={updatePlatform}\r\n            >\r\n              Update\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      {/* </SimpleCard> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditPlatform;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\nimport EditPlatform from './editPlatform';\r\nimport InstagramIcon from '@mui/icons-material/Instagram';\r\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    Tabs,\r\n    Tab,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    Card,\r\n    Fab,\r\n    Grid,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\n\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\nfunction TabPanel(props) {\r\n\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst PlatformMaster = () => {\r\n    const [masterName, setMasterName] = useState('Platform');\r\n    const [inputText, setInputText] = useState('Demo');\r\n    const [platformIcon, setplatformIcon] = useState('s');\r\n    const [platformColor, setplatformColor] = useState('#833ab4');\r\n    const [APIData, setAPIData] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [value, setValue] = useState(0);\r\n    const items = localStorage.getItem('accessToken');\r\n\r\n    const PlatformPayload = {\r\n        id: 0,\r\n        masterName: masterName,\r\n        platformIcon: platformIcon,\r\n        platformColor: platformColor,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    }\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://213.136.72.177/cms/api/getMasterData?masterName=platformmaster`,\r\n                { headers: { \"x-access-token\": items } })\r\n            .then((response) => {\r\n                setAPIData(response.data.data);\r\n            });\r\n    }, [APIData]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(`http://213.136.72.177/cms/api/mastersUpsert`, PlatformPayload,\r\n                { headers: { \"x-access-token\": items } })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    const deleteData = (e, i) => {\r\n        console.log(i);\r\n        axios.post('http://213.136.72.177/cms/api/mastersUpsert', {\r\n            id: i.id,\r\n            masterName: 'platform',\r\n            inputText: i.platformName,\r\n            recodStatus: 0,\r\n            addedBy: 1,\r\n            updatedBy: 1,\r\n        }, { headers: { \"x-access-token\": items } });\r\n    };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n        setplatformIcon('');\r\n        setplatformColor('')\r\n    };\r\n    const handleCChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    // const options = [\r\n    //     { name: 'Instalgram', value: \"instagram\", icon: <InstagramIcon /> }\r\n    // ];\r\n    // {options.map((item, index) => {\r\n    //     <MenuItem key={index} value={item.value}> {item.name}</MenuItem>\r\n    // })}\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg=\"8\">\r\n                    <SimpleCard title=\"Add Platform Master(*)\">\r\n                        <Row >\r\n                            <Col>\r\n                                <Form.Label>Platform Name</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    onChange={(e) => setInputText(e.target.value)}\r\n                                    value={inputText}\r\n                                    placeholder=\"Enter the Platform Name\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='mt-2'>\r\n                            <Col>\r\n                                {/* <InstagramIcon></InstagramIcon> */}\r\n                                <Form.Label>Platform Icon</Form.Label>\r\n                                <FormControl sx={{ m: 0, minWidth: 620 }} size=\"small\" className=\"mt-1\">\r\n                                    {/* <InputLabel id=\"demo-simple-select-label\">Platform Icon</InputLabel> */}\r\n                                    <Select\r\n                                        // labelId=\"demo-simple-select-label\"\r\n                                        // id=\"demo-simple-select\"\r\n                                        onChange={(e) => setplatformIcon(e.target.value)}\r\n                                        value={platformIcon}\r\n                                        label=\"Age\"\r\n                                    >\r\n                                        <MenuItem value='s'>Select from the List</MenuItem>\r\n                                        <MenuItem value='facebook'>Facebook</MenuItem>\r\n                                        <MenuItem value='Twitter'>Twitter</MenuItem>\r\n                                        <MenuItem value='star'>Indiamart</MenuItem>\r\n                                        <MenuItem value='telegram'>Telegram</MenuItem>\r\n                                        <MenuItem value='Whatsapp'>Whatsapp</MenuItem>\r\n                                        <MenuItem value='Instagram'>Instagram</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* linear-gradient(to right, rgba(102, 126, 234, 0.5), rgba(118, 75, 162, 0.5)) */}\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Label>Platform Color</Form.Label>\r\n                                <FormControl sx={{ m: 0, minWidth: 620 }} size=\"small\" className=\"mt-1\">\r\n                                    {/* <InputLabel id=\"demo-simple-select-label\">Platform Icon</InputLabel> */}\r\n                                    <Select\r\n                                        // labelId=\"demo-simple-select-label\"\r\n                                        // id=\"demo-simple-select\"\r\n                                        onChange={(e) => setplatformColor(e.target.value)}\r\n                                        value={platformColor}\r\n                                        label=\"Age\"\r\n                                    >\r\n                                        <MenuItem value='v'>Select from the List</MenuItem>\r\n                                        <MenuItem value='#EB9694'>Light Pink</MenuItem>\r\n                                        <MenuItem value='#F4BE65'>Light Orange</MenuItem>\r\n                                        <MenuItem value='#19CABA'>Cyan</MenuItem>\r\n                                        <MenuItem value='#282f4e'>Green</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </SimpleCard>\r\n\r\n                </Col>\r\n                <Col lg=\"4\">\r\n                    <Card className=\"mb-4\" style={{ height: '20vw', backgroundColor: platformColor }} >\r\n                        <Grid item xs={2} md={6} >\r\n                            {/* <StyledCard elevation={1} > */}\r\n                            <h6 className='ml-2 mt-2 text-center' >Card Will Look Like ....</h6>\r\n                            <ContentBox>\r\n                                <FabIcon>\r\n                                    <Icon style={{ fontSize: \"60px\" }} className=\"icon\">{platformIcon}</Icon>\r\n                                </FabIcon>\r\n                            </ContentBox>\r\n                            <Box style={{ marginTop: '4px' }} className=\"text-center\">\r\n                                <H3 textcolor={'#FFFFFF'}>{inputText}</H3>\r\n                                {/* <H1 >Count {inputText}</H1> */}\r\n                            </Box>\r\n                            {/* </StyledCard> */}\r\n                        </Grid>\r\n                    </Card>\r\n                </Col>\r\n                <Div className=\"mt-4\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Button variant=\"secondary\" >\r\n                                Cancel\r\n                            </Button>\r\n                            &nbsp;\r\n                            <Button variant=\"success\"\r\n                                onClick={handleSubmit}>\r\n                                Save\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Div>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <SimpleCard title=\"List Of Platform Master \">\r\n                        {/* Tab Section */}\r\n                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                            <Tabs value={value} onChange={handleCChange} aria-label=\"basic tabs example\">\r\n                                <Tab label=\"Active Leads\" {...a11yProps(0)} />\r\n                                <Tab label=\"Inactive Leads\" {...a11yProps(1)} />\r\n                            </Tabs>\r\n                        </Box>\r\n                        <TabPanel value={value} index={0}>\r\n                            {/* First Tab */}\r\n                            <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                                {/* Table Section */}\r\n                                <StyledTable>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"justify\">Lead Id</TableCell>\r\n                                            <TableCell align=\"justify\">Lead Name</TableCell>\r\n                                            <TableCell align=\"center\">Action</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {APIData.map((subscriber, index) => {\r\n                                            if (subscriber.status == 1) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell align=\"justify\">{subscriber.id}</TableCell>\r\n                                                        <TableCell align=\"justify\">{subscriber.platformName}</TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                                <Icon color=\"success\">edit</Icon>\r\n                                                            </IconButton>\r\n                                                            <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                                <Icon color=\"warning\">delete</Icon>\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                );\r\n                                            }\r\n                                        })}\r\n                                    </TableBody>\r\n                                </StyledTable>\r\n                            </Box>\r\n                        </TabPanel>\r\n                        {/* Second Tab */}\r\n                        <TabPanel value={value} index={1}>\r\n                            <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                                {/* Inactive Table Section */}\r\n                                <StyledTable>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"justify\">Lead Id</TableCell>\r\n                                            <TableCell align=\"justify\">Lead Name</TableCell>\r\n                                            <TableCell align=\"center\">Action</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {APIData.map((subscriber, index) => {\r\n                                            if (subscriber.status == 0) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell align=\"justify\">{subscriber.id}</TableCell>\r\n                                                        <TableCell align=\"justify\">{subscriber.platformName}</TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                                <Icon color=\"success\">edit</Icon>\r\n                                                            </IconButton>\r\n\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                );\r\n                                            }\r\n                                        })}\r\n                                    </TableBody>\r\n                                </StyledTable>\r\n                            </Box>\r\n                        </TabPanel>\r\n                        <Modal\r\n                            show={show}\r\n                            onHide={handleClose}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header>\r\n                                <Modal.Title>Update Platform Master</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <EditPlatform theEditPlatform={obj1} />\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-error\"\r\n                                    style={{ marginTop: 5 + 'px' }}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </SimpleCard>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '24px !important',\r\n    // background: '#19CABA',\r\n    [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\nconst ContentBox = styled('div')(() => ({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    marginLeft: '90px'\r\n}));\r\n\r\nconst FabIcon = styled(Fab)(() => ({\r\n    width: '120px !important',\r\n    height: '120px !important',\r\n    boxShadow: 'none !important',\r\n}));\r\n\r\nconst H3 = styled('h3')(({ textcolor }) => ({\r\n    margin: 0,\r\n    color: textcolor,\r\n    fontWeight: '500',\r\n    marginLeft: '0px',\r\n}));\r\n\r\nconst H1 = styled('h5')(({ textcolor }) => ({\r\n    margin: 0,\r\n    // flexGrow: 1,\r\n    color: textcolor,\r\n}));\r\n\r\nexport default PlatformMaster;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '410px',\r\n}));\r\nconst EditAssign = ({ theEditAssign }) => {\r\n    console.log(theEditAssign)\r\n    const [id, setId] = useState(theEditAssign.id);\r\n    const [masterName, setMasterName] = useState('Assign');\r\n    const [inputText, setInputText] = useState(theEditAssign.name);\r\n\r\n    const UpdatePlatform = {\r\n        id: id,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    };\r\n    const updatePlatform = (e) => {\r\n        const items = localStorage.getItem('accessToken');\r\n        console.log({ UpdatePlatform });\r\n        e.preventDefault();\r\n        axios.post(`http://213.136.72.177/cms/api/mastersUpsert`, UpdatePlatform, { headers: { \"x-access-token\": items } })\r\n            .then(() => useEffect);\r\n        setInputText('');\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <Container>\r\n            {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Platform Name</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            value={masterName}\r\n                            onChange={(e) => setMasterName(e.target.value)}\r\n                            placeholder=\"Enter the Platform Name\"\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Input Text</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setInputText(e.target.value)}\r\n                            value={inputText}\r\n                            placeholder=\"Enter the Input Text\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={updatePlatform}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            {/* </SimpleCard> */}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditAssign;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\r\nimport EditAssign from './editAssign';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\n\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst AssignMaster = () => {\r\n    const [masterName, setMasterName] = useState('Assign');\r\n    const [inputText, setInputText] = useState('');\r\n    const [APIData, setAPIData] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [value, setValue] = useState(0);\r\n    const items = localStorage.getItem('accessToken');\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://213.136.72.177/cms/api/getMasterData?masterName=assignmaster`,\r\n                { headers: { \"x-access-token\": items } })\r\n            .then((response) => {\r\n                setAPIData(response.data.data);\r\n            });\r\n    }, [APIData]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(`http://213.136.72.177/cms/api/mastersUpsert`, {\r\n                id: 0,\r\n                masterName: masterName,\r\n                inputText: inputText,\r\n                recodStatus: 1,\r\n                addedBy: 1,\r\n                updatedBy: 1,\r\n            }, { headers: { \"x-access-token\": items } })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    // const deleteData = (e, i) => {\r\n    //     console.log(i);\r\n    //     axios.post('http://213.136.72.177/cms/api/mastersUpsert', {\r\n    //         id: i.id,\r\n    //         masterName: 'platform',\r\n    //         inputText: i.platformName,\r\n    //         recodStatus: 0,\r\n    //         addedBy: 1,\r\n    //         updatedBy: 1,\r\n    //     }, { headers: { \"x-access-token\": items } });\r\n    // };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <SimpleCard title=\"Add Assign  \">\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Platform Name</Form.Label>\r\n                                <Form.Control\r\n                                    disabled\r\n                                    value={masterName}\r\n                                    onChange={(e) => setMasterName(e.target.value)}\r\n                                    placeholder=\"Enter the Platform Name\"\r\n                                />\r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    onChange={(e) => setInputText(e.target.value)}\r\n                                    value={inputText}\r\n                                    placeholder=\"Enter the Name\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Div className=\"mt-4\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button variant=\"secondary\" >\r\n                                        Cancel\r\n                                    </Button>\r\n                                    &nbsp;\r\n                                    <Button variant=\"success\"\r\n                                        onClick={handleSubmit}>\r\n                                        Save\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Div>\r\n                    </SimpleCard>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col>\r\n                    <SimpleCard title=\"List Of Assign Master \">\r\n                        {/* Tab Section */}\r\n\r\n                        <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                            {/* Table Section */}\r\n                            <StyledTable>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"justify\">Assign Id</TableCell>\r\n                                        <TableCell align=\"justify\">Assign Name</TableCell>\r\n                                        <TableCell align=\"center\">Action</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {APIData.map((subscriber, index) => {\r\n                                        if (subscriber.status == 1) {\r\n                                            return (\r\n                                                <TableRow key={index}>\r\n                                                    <TableCell align=\"justify\">{subscriber.id}</TableCell>\r\n                                                    <TableCell align=\"justify\">{subscriber.name}</TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                            <Icon color=\"success\">edit</Icon>\r\n                                                        </IconButton>\r\n                                                        {/* <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                            <Icon color=\"warning\">delete</Icon>\r\n                                                        </IconButton> */}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n                                        }\r\n                                    })}\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n\r\n                        <Modal\r\n                            show={show}\r\n                            onHide={handleClose}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header>\r\n                                <Modal.Title>Update Assign Master</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <EditAssign theEditAssign={obj1} />\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-error\"\r\n                                    style={{ marginTop: 5 + 'px' }}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </SimpleCard>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignMaster;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '410px',\r\n}));\r\nconst EditLabel = ({ theEditLabel }) => {\r\n    console.log(theEditLabel)\r\n    const [id, setId] = useState(theEditLabel.id);\r\n    const [masterName, setMasterName] = useState('Label');\r\n    const [inputText, setInputText] = useState(theEditLabel.name);\r\n\r\n    const UpdatePlatform = {\r\n        id: id,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    };\r\n    const updatePlatform = (e) => {\r\n        const items = localStorage.getItem('accessToken');\r\n        console.log({ UpdatePlatform });\r\n        e.preventDefault();\r\n        axios.post(`http://213.136.72.177/cms/api/mastersUpsert`, UpdatePlatform, { headers: { \"x-access-token\": items } })\r\n            .then(() => useEffect);\r\n        setInputText('');\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <Container>\r\n            {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Platform Name</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            value={masterName}\r\n                            onChange={(e) => setMasterName(e.target.value)}\r\n                            placeholder=\"Enter the Platform Name\"\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Label Name</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setInputText(e.target.value)}\r\n                            value={inputText}\r\n                            placeholder=\"Enter the Label Name\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={updatePlatform}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            {/* </SimpleCard> */}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditLabel;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\r\nimport EditLabel from './editLabel';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\n\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst LabelMaster = () => {\r\n    const [masterName, setMasterName] = useState('Label');\r\n    const [inputText, setInputText] = useState('');\r\n    const [APIData, setAPIData] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const items = localStorage.getItem('accessToken');\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://213.136.72.177/cms/api/getMasterData?masterName=labelmaster`,\r\n                { headers: { \"x-access-token\": items } })\r\n            .then((response) => {\r\n                setAPIData(response.data.data);\r\n            });\r\n    }, [APIData]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(`http://213.136.72.177/cms/api/mastersUpsert`, {\r\n                id: 0,\r\n                masterName: masterName,\r\n                inputText: inputText,\r\n                recodStatus: 1,\r\n                addedBy: 1,\r\n                updatedBy: 1,\r\n            }, { headers: { \"x-access-token\": items } })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    // const deleteData = (e, i) => {\r\n    //     console.log(i);\r\n    //     axios.post('http://213.136.72.177/cms/api/mastersUpsert', {\r\n    //         id: i.id,\r\n    //         masterName: 'platform',\r\n    //         inputText: i.platformName,\r\n    //         recodStatus: 0,\r\n    //         addedBy: 1,\r\n    //         updatedBy: 1,\r\n    //     }, { headers: { \"x-access-token\": items } });\r\n    // };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <SimpleCard title=\"Add Assign  \">\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Platform Name</Form.Label>\r\n                                <Form.Control\r\n                                    disabled\r\n                                    value={masterName}\r\n                                    onChange={(e) => setMasterName(e.target.value)}\r\n                                    placeholder=\"Enter the Platform Name\"\r\n                                />\r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    onChange={(e) => setInputText(e.target.value)}\r\n                                    value={inputText}\r\n                                    placeholder=\"Enter the Name\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Div className=\"mt-4\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button variant=\"secondary\" >\r\n                                        Cancel\r\n                                    </Button>\r\n                                    &nbsp;\r\n                                    <Button variant=\"success\"\r\n                                        onClick={handleSubmit}>\r\n                                        Save\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Div>\r\n                    </SimpleCard>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col>\r\n                    <SimpleCard title=\"List Of Label Master \">\r\n                        {/* Tab Section */}\r\n\r\n                        <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                            {/* Table Section */}\r\n                            <StyledTable>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"justify\">Label Id</TableCell>\r\n                                        <TableCell align=\"justify\">Label Name</TableCell>\r\n                                        <TableCell align=\"center\">Action</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {APIData.map((subscriber, index) => {\r\n                                        if (subscriber.status == 1) {\r\n                                            return (\r\n                                                <TableRow key={index}>\r\n                                                    <TableCell align=\"justify\">{subscriber.id}</TableCell>\r\n                                                    <TableCell align=\"justify\">{subscriber.name}</TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                            <Icon color=\"success\">edit</Icon>\r\n                                                        </IconButton>\r\n                                                        {/* <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                            <Icon color=\"warning\">delete</Icon>\r\n                                                        </IconButton> */}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n                                        }\r\n                                    })}\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n\r\n                        <Modal\r\n                            show={show}\r\n                            onHide={handleClose}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header>\r\n                                <Modal.Title>Update Label Master</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <EditLabel theEditLabel={obj1} />\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-error\"\r\n                                    style={{ marginTop: 5 + 'px' }}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </SimpleCard>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelMaster;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormControl, Select } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '410px',\r\n}));\r\nconst EditStatus = ({ theEditStatus }) => {\r\n    console.log(theEditStatus)\r\n    const [id, setId] = useState(theEditStatus.id);\r\n    const [masterName, setMasterName] = useState('Status');\r\n    const [inputText, setInputText] = useState(theEditStatus.name);\r\n\r\n    const UpdatePlatform = {\r\n        id: id,\r\n        masterName: masterName,\r\n        inputText: inputText,\r\n        recodStatus: 1,\r\n        addedBy: 1,\r\n        updatedBy: 1,\r\n    };\r\n    const updatePlatform = (e) => {\r\n        const items = localStorage.getItem('accessToken');\r\n        console.log({ UpdatePlatform });\r\n        e.preventDefault();\r\n        axios.post(`http://213.136.72.177/cms/api/mastersUpsert`, UpdatePlatform, { headers: { \"x-access-token\": items } })\r\n            .then(() => useEffect);\r\n        setInputText('');\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <Container>\r\n            {/* <SimpleCard title=\"Update Catalogue Detail's\"> */}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Platform Name</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            value={masterName}\r\n                            onChange={(e) => setMasterName(e.target.value)}\r\n                            placeholder=\"Enter the Platform Name\"\r\n                        />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Label>Satus Name</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setInputText(e.target.value)}\r\n                            value={inputText}\r\n                            placeholder=\"Enter the Label Name\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success\"\r\n                            style={{ marginTop: 5 + 'px' }}\r\n                            onClick={updatePlatform}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            {/* </SimpleCard> */}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EditStatus;\r\n","import { SimpleCard } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\r\nimport EditStatus from './editStatus';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 0 } },\r\n    },\r\n}));\r\n\r\n\r\nconst Div = styled('div')(({ theme }) => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\n\r\nconst StatusMaster = () => {\r\n    const [masterName, setMasterName] = useState('Status');\r\n    const [inputText, setInputText] = useState('');\r\n    const [APIData, setAPIData] = useState([]);\r\n    const [obj1, setObj1] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const items = localStorage.getItem('accessToken');\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://213.136.72.177/cms/api/getMasterData?masterName=statusmaster`,\r\n                { headers: { \"x-access-token\": items } })\r\n            .then((response) => {\r\n                setAPIData(response.data.data);\r\n            });\r\n    }, [APIData]);\r\n\r\n    const postData = () => {\r\n        console.log({\r\n            masterName: masterName,\r\n            inputText: inputText,\r\n        });\r\n        axios\r\n            .post(`http://213.136.72.177/cms/api/mastersUpsert`, {\r\n                id: 0,\r\n                masterName: masterName,\r\n                inputText: inputText,\r\n                recodStatus: 1,\r\n                addedBy: 1,\r\n                updatedBy: 1,\r\n            }, { headers: { \"x-access-token\": items } })\r\n            .then(() => useEffect);\r\n    };\r\n\r\n    // const deleteData = (e, i) => {\r\n    //     console.log(i);\r\n    //     axios.post('http://213.136.72.177/cms/api/mastersUpsert', {\r\n    //         id: i.id,\r\n    //         masterName: 'platform',\r\n    //         inputText: i.platformName,\r\n    //         recodStatus: 0,\r\n    //         addedBy: 1,\r\n    //         updatedBy: 1,\r\n    //     }, { headers: { \"x-access-token\": items } });\r\n    // };\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (subscriber) => {\r\n        setObj1(subscriber)\r\n        setShow(true);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        setInputText('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <SimpleCard title=\"Add Assign  \">\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Platform Name</Form.Label>\r\n                                <Form.Control\r\n                                    disabled\r\n                                    value={masterName}\r\n                                    onChange={(e) => setMasterName(e.target.value)}\r\n                                    placeholder=\"Enter the Platform Name\"\r\n                                />\r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    onChange={(e) => setInputText(e.target.value)}\r\n                                    value={inputText}\r\n                                    placeholder=\"Enter the Name\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Div className=\"mt-4\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button variant=\"secondary\" >\r\n                                        Cancel\r\n                                    </Button>\r\n                                    &nbsp;\r\n                                    <Button variant=\"success\"\r\n                                        onClick={handleSubmit}>\r\n                                        Save\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Div>\r\n                    </SimpleCard>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col>\r\n                    <SimpleCard title=\"List Of Label Master \">\r\n                        {/* Tab Section */}\r\n\r\n                        <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n                            {/* Table Section */}\r\n                            <StyledTable>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"justify\">Status Id</TableCell>\r\n                                        <TableCell align=\"justify\">Status Name</TableCell>\r\n                                        {/* <TableCell align=\"center\">Action</TableCell> */}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {APIData.map((subscriber, index) => {\r\n                                        if (subscriber.status == 1) {\r\n                                            return (\r\n                                                <TableRow key={index}>\r\n                                                    <TableCell align=\"justify\">{subscriber.id}</TableCell>\r\n                                                    <TableCell align=\"justify\">{subscriber.name}</TableCell>\r\n                                                    {/* <TableCell align=\"center\">\r\n                                                        <IconButton onClick={() => handleShow(subscriber)}>\r\n                                                            <Icon color=\"success\">edit</Icon>\r\n                                                        </IconButton>\r\n                                                        <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                                                            <Icon color=\"warning\">delete</Icon>\r\n                                                        </IconButton>\r\n                                                    </TableCell> */}\r\n                                                </TableRow>\r\n                                            );\r\n                                        }\r\n                                    })}\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n\r\n                        <Modal\r\n                            show={show}\r\n                            onHide={handleClose}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header>\r\n                                <Modal.Title>Update Label Master</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <EditStatus theEditStatus={obj1} />\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-error\"\r\n                                    style={{ marginTop: 5 + 'px' }}\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </SimpleCard>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatusMaster;\r\n","import { Tab, Tabs } from 'react-bootstrap';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb } from 'app/components';\r\nimport { Box } from '@mui/material';\r\nimport PlatformMaster from './systemMaster/platformMaster';\r\nimport AssignMaster from './systemMaster/assignMaster';\r\nimport LabelMaster from './systemMaster/labelMaster';\r\nimport StatusMaster from './systemMaster/statusMaster';\r\n\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\n\r\nfunction ManageMaster() {\r\n    return (\r\n        <Container>\r\n            <Box>\r\n                <Box className=\"breadcrumb\">\r\n                    <Breadcrumb\r\n                        routeSegments={[\r\n                            { name: 'Dashboard', path: '/employees/manageEmployee' },\r\n                            { name: 'Manage System Master' },\r\n                        ]}\r\n                    />\r\n                </Box>\r\n                <Box> <Tabs\r\n                    defaultActiveKey=\"home\"\r\n                    id=\"fill-tab-example\"\r\n                    className=\"mb-3\"\r\n                    fill\r\n                >\r\n                    <Tab eventKey=\"home\" title=\"Platform Master\">\r\n                        <PlatformMaster />\r\n                    </Tab>\r\n                    <Tab eventKey=\"profile\" title=\"Assign Master\">\r\n                        <AssignMaster />\r\n                    </Tab>\r\n                    <Tab eventKey=\"longer-tab\" title=\"Label Master\">\r\n                        <LabelMaster />\r\n                    </Tab>\r\n                    <Tab eventKey=\"contact\" title=\"Status Master\">\r\n                        <StatusMaster />\r\n                    </Tab>\r\n                </Tabs></Box>\r\n            </Box></Container>\r\n    );\r\n}\r\n\r\nexport default ManageMaster;"],"sourceRoot":""}