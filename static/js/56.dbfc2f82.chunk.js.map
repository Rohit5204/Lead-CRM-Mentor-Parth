{"version":3,"sources":["app/views/lead/leads/userMaster.jsx"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","UserMaster","useState","userId","setUserId","firstName","setFirstName","lastName","setLastName","email","setEmail","userData","setUserData","show","setShow","useEffect","axios","get","then","response","data","className","routeSegments","name","path","sx","flexGrow","container","spacing","item","xs","m","minWidth","label","onChange","e","target","value","variant","onClick","console","log","id","post","createdBy","updatedBy","lastActive","preventDefault","width","overflow","align","map","subscriber","index","event","i","JSON","stringify","updateData","color"],"mappings":"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","file":"static/js/56.dbfc2f82.chunk.js","sourcesContent":["import { Breadcrumb } from 'app/components';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  TextField,\r\n  Stack,\r\n  styled,\r\n  Button,\r\n  FormControl,\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Grid,\r\n  TableRow,\r\n} from '@mui/material';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\n\r\nconst UserMaster = () => {\r\n  const [userId, setUserId] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [userData, setUserData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    axios.get(`http://35.89.6.16:4002/api/getMasterData?masterName=usermaster`).then((response) => {\r\n      setUserData(response.data.data);\r\n    });\r\n  }, [userData]);\r\n\r\n  //Add data in the table\r\n  const postData = () => {\r\n    console.log({\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n    });\r\n    axios\r\n      .post(`http://35.89.6.16:4002/api/userMasterUpsert`, {\r\n        id: 0,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        createdBy: 1,\r\n        lastActive: '',\r\n      })\r\n      .then(() => useEffect);\r\n  };\r\n  //Delete Object From the Array\r\n  const deleteData = (e, i) => {\r\n    console.log(i);\r\n    axios\r\n      .post('http://35.89.6.16:4002/api/userMasterUpsert', {\r\n        id: i.userId,\r\n        firstName: i.firstName,\r\n        lastName: i.lastName,\r\n        email: i.email,\r\n        updatedBy: 1,\r\n        createdBy: 1,\r\n        lastActive: '',\r\n      })\r\n      .then(() => useEffect);\r\n  };\r\n  //Update Object in the API Array\r\n  const Edit = (e) => {\r\n    console.log({\r\n      id: userId,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n    });\r\n    axios\r\n      .post(`http://35.89.6.16:4002/api/userMasterUpsert`, {\r\n        id: userId,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        createdBy: 1,\r\n        updatedBy: 1,\r\n        lastActive: '',\r\n      })\r\n      .then(() => useEffect);\r\n    setFirstName('');\r\n    setLastName('');\r\n    setEmail('');\r\n    setShow(show);\r\n  };\r\n  //Call Data in the Form when Edit Button is trigger\r\n  const updateData = (event, i) => {\r\n    event.preventDefault();\r\n    console.log('Edit Button Call=' + JSON.stringify(i));\r\n    console.log('HELLO');\r\n    setUserId(i.userId);\r\n    setFirstName(i.firstName);\r\n    setLastName(i.lastName);\r\n    setEmail(i.email);\r\n    setShow(!show);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postData();\r\n    setFirstName('');\r\n    setLastName('');\r\n    setEmail('');\r\n  };\r\n  const handelClose = (e) => {\r\n    setShow(!show);\r\n    e.preventDefault();\r\n    setFirstName('');\r\n    setLastName('');\r\n    setEmail('');\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Lead', path: '/leads/addLeads' }, { name: 'User Master Page' }]}\r\n        />\r\n      </Box>\r\n\r\n      <Stack>\r\n        <h5 className=\"ml-2\">User Master Page</h5>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={4}>\r\n              <FormControl sx={{ m: 1, minWidth: 320 }}>\r\n                <TextField\r\n                  name=\"firstName\"\r\n                  label=\"Enter the First Name\"\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                  value={firstName}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl sx={{ m: 1, minWidth: 540 }}>\r\n                <TextField\r\n                  name=\"lastName\"\r\n                  label=\"Enter the Last Name\"\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                  value={lastName}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <FormControl sx={{ m: 1, minWidth: 900 }}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Enter the Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                />\r\n                <br />\r\n                <div className=\"ml-2\">\r\n                  {show ? (\r\n                    <Button variant=\"contained\" onClick={Edit}>\r\n                      Update User\r\n                    </Button>\r\n                  ) : (\r\n                    <Button variant=\"contained\" onClick={handleSubmit}>\r\n                      Add User\r\n                    </Button>\r\n                  )}\r\n                  &nbsp;\r\n                  <Button variant=\"contained\" onClick={handelClose}>\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <br />\r\n      </Stack>\r\n      <h5>User's Details</h5>\r\n      <Box className=\"text-center\" width=\"100%\" overflow=\"auto\">\r\n        <StyledTable>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"justify\">User Id</TableCell>\r\n              <TableCell align=\"justify\">Name</TableCell>\r\n              <TableCell align=\"justify\">Email</TableCell>\r\n              <TableCell align=\"center\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {userData.map((subscriber, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"justify\">{subscriber.userId}</TableCell>\r\n                <TableCell align=\"justify\">\r\n                  {subscriber.firstName} {subscriber.lastName}\r\n                </TableCell>\r\n                <TableCell align=\"justify\">{subscriber.email}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton onClick={(event) => updateData(event, subscriber)}>\r\n                    <Icon color=\"success\">edit</Icon>\r\n                  </IconButton>\r\n                  <IconButton onClick={(event) => deleteData(event, subscriber)}>\r\n                    <Icon color=\"warning\">delete</Icon>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </StyledTable>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserMaster;\r\n"],"sourceRoot":""}