{"version":3,"sources":["app/views/invoice/invoices/invoiceForm.jsx","app/views/invoice/invoices/EMIFields.jsx","app/views/invoice/invoices/invoiceEMI.jsx","app/views/invoice/invoices/ReviewInvoice.jsx","app/views/invoice/helpers/incrementString.js","app/views/invoice/invoices/InvoiceModal.jsx","app/views/invoice/invoices/InvoiceField.jsx","app/views/invoice/invoices/InvoiceItem.jsx"],"names":["today","Date","date","setDate","getDate","defaultValue","toISOString","split","Container","styled","theme","margin","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","InvoiceForm","useState","isOpen","setIsOpen","discount","setDiscount","tax","setTax","invoiceDate","setInvoiceDate","invoiceNumber","setInvoiceNumber","cashierName","setCashierName","companyEmail","setCompanyEmail","companyContact","setCompanyContact","companyAddress","setCompanyAddress","companyGstNo","setCompanyGstNo","companyStateName","setCompanyStateName","customerName","setCustomerName","panNo","setPanNo","clientEmail","setClientEmail","clientContact","setClientContact","clientAddress","setClientAddress","clientGstNo","setClientGstNo","initalPayment","setInitalPayment","installments","setInstallments","id","uid","name","qty","price","items","setItems","show","setShow","handleClose","deleteItemHandler1","prevItem","filter","item","deleteItemHandler","edtiItemHandler","event","editedItem","target","value","newItems","map","key","edtiItemHandler1","editedItem1","newInstallments","subtotal","reduce","prev","curr","trim","length","Number","Math","floor","taxRate","discountRate","total","pending","emiAmount","Object","keys","style","width","background","md","title","className","Label","Control","onChange","placeholder","type","required","color","Group","controlId","as","rows","overflow","onClick","align","onDeleteItem","onEdtiItem","toFixed","Body","variant","preventDefault","min","step","Text","onHide","backdrop","keyboard","size","centered","Header","Title","readOnly","amount","no","Footer","marginTop","invoiceInfo","onAddNextInvoice","prevNumber","incrementString","InvoiceFieldEMI","onEditItem","cellData","max","InvoiceEMI","instalmentNumber","instalmentDate","instalmentAmount","IconButton","Icon","ReviewInvoice","closeModal","console","log","animation","dom","document","getElementById","toPng","then","dataUrl","img","Image","crossOrigin","src","onload","pdf","jsPDF","orientation","unit","format","imgProps","getImageProperties","imageType","fileType","pdfWidth","internal","pageSize","getWidth","pxFullHeight","height","pxPageHeight","nPages","ceil","pageHeight","getHeight","pageCanvas","createElement","pageCtx","getContext","page","w","h","fillStyle","fillRect","drawImage","addPage","imgData","toDataURL","addImage","save","catch","error","borderWidth","borderColor","borderStyle","sizes","string","str","toString","number","match","numberLength","parseInt","replace","concat","InvoiceField","InvoiceItem"],"mappings":"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","file":"static/js/52.fcd1b424.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { uid } from 'uid';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport InvoiceItem from './InvoiceItem';\r\nimport InvoiceModal from './InvoiceModal';\r\nimport InvoiceEMI from './invoiceEMI';\r\nimport ReviewInvoice from './ReviewInvoice';\r\nimport incrementString from '../helpers/incrementString';\r\nimport { Form, Row, Col, Button, InputGroup, Card, Modal } from 'react-bootstrap';\r\nimport {\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\n\r\n// const date = new Date();\r\n// const today = date.toLocaleDateString('en-GB', {\r\n//   month: 'numeric',\r\n//   day: 'numeric',\r\n//   year: 'numeric',\r\n// });\r\nconst today = new Date();\r\nconst numberOfDaysToAdd = 0;\r\nconst date = today.setDate(today.getDate() + numberOfDaysToAdd);\r\nconst defaultValue = new Date(date).toISOString().split('T')[0]; // yyyy-mm-dd\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 20, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 30 } },\r\n  },\r\n}));\r\n\r\nconst InvoiceForm = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [tax, setTax] = useState(18);\r\n  const [invoiceDate, setInvoiceDate] = useState(defaultValue);\r\n  const [invoiceNumber, setInvoiceNumber] = useState(1201);\r\n  const [cashierName, setCashierName] = useState('');\r\n  const [companyEmail, setCompanyEmail] = useState('info@mentorparth.com');\r\n  const [companyContact, setCompanyContact] = useState('+91-7715815877');\r\n  const [companyAddress, setCompanyAddress] = useState(\r\n    'Haware Fantasia Business Park, Vashi, Navi-Mumbai'\r\n  );\r\n  const [companyGstNo, setCompanyGstNo] = useState('ABCDEF01234');\r\n  const [companyStateName, setCompanyStateName] = useState('Maharashtra');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [panNo, setPanNo] = useState('');\r\n  const [clientEmail, setClientEmail] = useState('');\r\n  const [clientContact, setClientContact] = useState('');\r\n  const [clientAddress, setClientAddress] = useState('');\r\n  const [clientGstNo, setClientGstNo] = useState('');\r\n  const [initalPayment, setInitalPayment] = useState(0);\r\n  const [installments, setInstallments] = useState([]);\r\n  const [items, setItems] = useState([\r\n    {\r\n      id: uid(6),\r\n      name: '',\r\n      qty: 1,\r\n      price: '1.00',\r\n    },\r\n  ]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  //Dialog Form\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  const reviewInvoiceHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const addNextInvoiceHandler = () => {\r\n    setInvoiceNumber((prevNumber) => incrementString(prevNumber));\r\n    setItems([\r\n      {\r\n        id: uid(6),\r\n        name: '',\r\n        qty: 1,\r\n        price: '1.00',\r\n      },\r\n    ]);\r\n  };\r\n  const addItemHandler1 = () => {\r\n    const id = uid(6);\r\n    setInstallments((prevItem) => [\r\n      ...prevItem,\r\n      {\r\n        id: id,\r\n        date: '',\r\n        amount: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const addItemHandler = () => {\r\n    const id = uid(6);\r\n    setItems((prevItem) => [\r\n      ...prevItem,\r\n      {\r\n        id: id,\r\n        name: '',\r\n        qty: 1,\r\n        price: '1.00',\r\n      },\r\n    ]);\r\n  };\r\n  const deleteItemHandler1 = (id) => {\r\n    setInstallments((prevItem) => prevItem.filter((item) => item.id !== id));\r\n  };\r\n  const deleteItemHandler = (id) => {\r\n    setItems((prevItem) => prevItem.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const edtiItemHandler = (event) => {\r\n    const editedItem = {\r\n      id: event.target.id,\r\n      name: event.target.name,\r\n      value: event.target.value,\r\n    };\r\n\r\n    const newItems = items.map((items) => {\r\n      for (const key in items) {\r\n        if (key === editedItem.name && items.id === editedItem.id) {\r\n          items[key] = editedItem.value;\r\n        }\r\n      }\r\n      return items;\r\n    });\r\n\r\n    setItems(newItems);\r\n  };\r\n  const edtiItemHandler1 = (event) => {\r\n    const editedItem1 = {\r\n      id: event.target.id,\r\n      name: event.target.name,\r\n      value: event.target.value,\r\n    };\r\n\r\n    const newInstallments = installments.map((installments) => {\r\n      for (const key in installments) {\r\n        if (key === editedItem1.name && installments.id === editedItem1.id) {\r\n          installments[key] = editedItem1.value;\r\n        }\r\n      }\r\n      return installments;\r\n    });\r\n\r\n    setInstallments(newInstallments);\r\n  };\r\n\r\n  const subtotal = items.reduce((prev, curr) => {\r\n    if (curr.name.trim().length > 0) return prev + Number(curr.price * Math.floor(curr.qty));\r\n    else return prev;\r\n  }, 0);\r\n  const taxRate = (tax * subtotal) / 100;\r\n  const discountRate = (discount * subtotal) / 100;\r\n  const total = subtotal - discountRate + taxRate;\r\n  const pending = total - initalPayment;\r\n  const emiAmount = pending / Object.keys(installments).length;\r\n  return (\r\n    <Container>\r\n      <Card style={{ width: '65rem', background: '#C3CFC9' }}>\r\n        <Row>\r\n          <Col md=\"9\">\r\n            <SimpleCard title=\"Create New Invoice\">\r\n              <Form>\r\n                <Row className=\"mt-2\">\r\n                  <Col></Col>\r\n                  <Col className=\"col-sm-12\">\r\n                    <h4 className=\"text-center  font-bold\">INVOICE</h4>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Label>Invoice Number:</Form.Label>\r\n                    <Form.Control\r\n                      value={invoiceNumber}\r\n                      onChange={(event) => setInvoiceNumber(event.target.value)}\r\n                      placeholder=\"Enter the Invoice Number\"\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label>Date:</Form.Label>\r\n                    {/* <Form.Control\r\n                      type=\"date\"\r\n                      // onChange={(e) => setQuotationDate(e.target.value)}\r\n                      value={today}\r\n                    /> */}\r\n                    <Form.Control\r\n                      id=\"dateRequired\"\r\n                      type=\"date\"\r\n                      name=\"dateRequired\"\r\n                      value={invoiceDate}\r\n                      onChange={(event) => setInvoiceDate(event.target.value)}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col>\r\n                    <Form.Label> Generated By:</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      className=\"flex-1\"\r\n                      placeholder=\"Cashier name\"\r\n                      type=\"text\"\r\n                      name=\"cashierName\"\r\n                      id=\"cashierName\"\r\n                      value={cashierName}\r\n                      onChange={(event) => setCashierName(event.target.value)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"mt-2\">\r\n                  <b>\r\n                    <h6 style={{ color: 'green' }}>Company Detail's</h6>\r\n                  </b>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Label>Company Email:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        // className=\"flex-1\"\r\n                        placeholder=\"Company Email\"\r\n                        // type=\"text\"\r\n                        // name=\"companyEmail\"\r\n                        // id=\"companyEmail\"\r\n                        value={companyEmail}\r\n                        onChange={(event) => setCompanyEmail(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>Company Contact:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Company Contact\"\r\n                        type=\"text\"\r\n                        name=\"companyContact\"\r\n                        id=\"companyContact\"\r\n                        value={companyContact}\r\n                        onChange={(event) => setCompanyContact(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={3}\r\n                          onChange={(event) => setCompanyAddress(event.target.value)}\r\n                          value={companyAddress}\r\n                          placeholder=\"Company Address\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Label>Company GST NO:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Enter GST Number\"\r\n                        type=\"text\"\r\n                        name=\"companyGstNo\"\r\n                        id=\"companyGstNo\"\r\n                        value={companyGstNo}\r\n                        onChange={(event) => setCompanyGstNo(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>State Name:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Sate Name\"\r\n                        type=\"text\"\r\n                        name=\"companyStateName\"\r\n                        id=\"companyStateName\"\r\n                        value={companyStateName}\r\n                        onChange={(event) => setCompanyStateName(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <b>\r\n                    <h6 className=\"mt-2\" style={{ color: 'green' }}>\r\n                      Client Detail's\r\n                    </h6>\r\n                  </b>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Label>Biller/Customer Name:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Customer name\"\r\n                        type=\"text\"\r\n                        name=\"customerName\"\r\n                        id=\"customerName\"\r\n                        value={customerName}\r\n                        onChange={(event) => setCustomerName(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>Pan Number:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Customer Pan No\"\r\n                        type=\"text\"\r\n                        name=\"panNo\"\r\n                        id=\"panNo\"\r\n                        value={panNo}\r\n                        onChange={(event) => setPanNo(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Label>Customer Email:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Customer Email\"\r\n                        type=\"text\"\r\n                        name=\"clientEmail\"\r\n                        id=\"clientEmail\"\r\n                        value={clientEmail}\r\n                        onChange={(event) => setClientEmail(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>Customer Contact No:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Customer Contact\"\r\n                        type=\"text\"\r\n                        name=\"clientContact\"\r\n                        id=\"clientContact\"\r\n                        value={clientContact}\r\n                        onChange={(event) => setClientContact(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={3}\r\n                          onChange={(event) => setClientAddress(event.target.value)}\r\n                          value={clientAddress}\r\n                          placeholder=\"Customer Address\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col md=\"6\">\r\n                      <Form.Label>Customer GST NO:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Enter GST Number\"\r\n                        type=\"text\"\r\n                        name=\"clientGstNo\"\r\n                        id=\"clientGstNo\"\r\n                        value={clientGstNo}\r\n                        onChange={(event) => setClientGstNo(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Box className=\"text-center mt-2\" width=\"100%\" overflow=\"auto\">\r\n                    {/* Table Section */}\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col className=\"col-sm-9\">\r\n                        <h4 style={{ color: 'green' }}>Product Invoice List</h4>\r\n                      </Col>\r\n                      <Col>\r\n                        <Col className=\"col-sm-1\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={addItemHandler}\r\n                            className=\"btn btn-success\"\r\n                          >\r\n                            Add Items\r\n                          </button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                    <StyledTable>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Product Name</TableCell>\r\n                          <TableCell align=\"center\">Quantity</TableCell>\r\n                          <TableCell align=\"center\">Unit Price</TableCell>\r\n                          <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {items.map((item) => (\r\n                          <InvoiceItem\r\n                            align=\"justify\"\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            name={item.name}\r\n                            qty={item.qty}\r\n                            price={item.price}\r\n                            onDeleteItem={deleteItemHandler}\r\n                            onEdtiItem={edtiItemHandler}\r\n                          />\r\n                        ))}\r\n                      </TableBody>\r\n                    </StyledTable>\r\n                  </Box>\r\n\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                    <Col>\r\n                      <b>\r\n                        <Form.Label>Subtotal:</Form.Label>\r\n                      </b>\r\n                      &nbsp;&nbsp;\r\n                      <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                        ₹ {subtotal.toFixed(2)}\r\n                      </Form.Label>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                    <Col>\r\n                      <b>\r\n                        <Form.Label>Tax Rate({tax || '0'}%):</Form.Label>\r\n                      </b>\r\n\r\n                      <Form.Label style={{ color: 'green' }} className=\"ml-4\">\r\n                        ₹{taxRate.toFixed(2)}\r\n                      </Form.Label>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                    <Col>\r\n                      <b>\r\n                        <Form.Label>Discount({discount || '0'}%) :</Form.Label>\r\n                      </b>\r\n\r\n                      <Form.Label style={{ color: 'green' }} className=\"ml-4\">\r\n                        ₹{discountRate.toFixed(2)}\r\n                      </Form.Label>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n\r\n                    <Col>\r\n                      <hr />\r\n                      <b>\r\n                        <Form.Label>Grand Total:</Form.Label>\r\n                      </b>\r\n\r\n                      <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                        ₹{total % 1 === 0 ? total : total.toFixed(2)}\r\n                      </Form.Label>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Form>\r\n            </SimpleCard>\r\n          </Col>\r\n          <Col>\r\n            <Card.Body>\r\n              <Button variant=\"primary\" onClick={reviewInvoiceHandler}>\r\n                Review Invoice\r\n              </Button>\r\n              <hr />\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Tax rate:</Form.Label>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <Form.Control\r\n                      required\r\n                      type=\"number\"\r\n                      name=\"tax\"\r\n                      id=\"tax\"\r\n                      min=\"5\"\r\n                      step=\"1\"\r\n                      placeholder=\"Tax Rate\"\r\n                      value={tax}\r\n                      onChange={(event) => setTax(event.target.value)}\r\n                    />\r\n                    <InputGroup.Text>%</InputGroup.Text>\r\n                  </InputGroup>\r\n\r\n                  <span className=\"rounded-r-md bg-gray-200 py-2 px-4 text-gray-500 shadow-sm\"></span>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Discount rate:</Form.Label>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <Form.Control\r\n                      required\r\n                      type=\"number\"\r\n                      name=\"tax\"\r\n                      id=\"tax\"\r\n                      // min=\"5\"\r\n                      // step=\"1\"\r\n                      placeholder=\"Discount Rate\"\r\n                      value={discount}\r\n                      onChange={(event) => setDiscount(event.target.value)}\r\n                    />\r\n                    <InputGroup.Text>%</InputGroup.Text>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"ml-1\">\r\n                <button type=\"button\" onClick={() => handleShow()} className=\"btn btn-success\">\r\n                  Add Installments\r\n                </button>\r\n              </Row>\r\n              <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                size=\"lg\"\r\n                centered\r\n              >\r\n                <Modal.Header>\r\n                  <Modal.Title>Create EMI Installemnt</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Label style={{ color: 'red' }}>\r\n                        Note :- Pending Amount Will Be Covernted in the EMI\r\n                      </Form.Label>\r\n                      <br />\r\n                      <Form.Label>Number of Installment:</Form.Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <Form.Control\r\n                          readOnly\r\n                          value={Object.keys(installments).length}\r\n                        //onChange={(event) => setDiscount(event.target.value)}\r\n                        />\r\n                        {/* <InputGroup.Text>%</InputGroup.Text> */}\r\n                      </InputGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Inital Payment</Form.Label>\r\n                        <Form.Control\r\n                          onChange={(event) => setInitalPayment(event.target.value)}\r\n                          value={initalPayment}\r\n                          placeholder=\"Inital Payment\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Pending Amount</Form.Label>\r\n                        <Form.Control readOnly value={pending} />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col md=\"3\" className=\"mt-4\">\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={addItemHandler1}\r\n                        className=\"btn btn-success mt-1\"\r\n                      >\r\n                        Add New Installments\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <StyledTable>\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Installment No</TableCell>\r\n                            <TableCell align=\"center\">Date</TableCell>\r\n                            <TableCell align=\"center\">Amount</TableCell>\r\n\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {installments.map((item) => (\r\n                            <InvoiceEMI\r\n                              // align=\"center\"\r\n                              key={item.id}\r\n                              id={item.id}\r\n                              no={item.no}\r\n                              date={item.date}\r\n                              amount={item.amount}\r\n                              onDeleteItem={deleteItemHandler1}\r\n                              onEdtiItem={edtiItemHandler1}\r\n                            />\r\n                            // <InvoiceItem\r\n                            //   align=\"justify\"\r\n                            //   key={item.id}\r\n                            //   id={item.id}\r\n                            //   name={item.name}\r\n                            //   price={item.price}\r\n                            //   onDeleteItem={deleteItemHandler1}\r\n                            //   onEdtiItem={edtiItemHandler}\r\n                            // />\r\n                          ))}\r\n                        </TableBody>\r\n                      </StyledTable>\r\n                    </Col>\r\n                  </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-error\"\r\n                    style={{ marginTop: 5 + 'px' }}\r\n                    onClick={handleClose}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-success\"\r\n                    style={{ marginTop: 5 + 'px' }}\r\n                    onClick={handleClose}\r\n                  >\r\n                    ADD\r\n                  </button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n\r\n      <ReviewInvoice\r\n        show={isOpen}\r\n        setIsOpen={setIsOpen}\r\n        invoiceInfo={{\r\n          invoiceDate,\r\n          invoiceNumber,\r\n          companyEmail,\r\n          companyAddress,\r\n          companyContact,\r\n          installments,\r\n          initalPayment,\r\n          pending,\r\n          emiAmount,\r\n          companyGstNo,\r\n          companyStateName,\r\n          clientEmail,\r\n          clientContact,\r\n          clientAddress,\r\n          clientGstNo,\r\n          panNo,\r\n          cashierName,\r\n          customerName,\r\n          subtotal,\r\n          taxRate,\r\n          discountRate,\r\n          total,\r\n        }}\r\n        items={items}\r\n        onAddNextInvoice={addNextInvoiceHandler}\r\n      />\r\n      {/* <InvoiceModal\r\n          isOpen={isOpen}\r\n          setIsOpen={setIsOpen}\r\n          invoiceInfo={{\r\n            invoiceNumber,\r\n            cashierName,\r\n            customerName,\r\n            subtotal,\r\n            taxRate,\r\n            discountRate,\r\n            total,\r\n          }}\r\n          items={items}\r\n          onAddNextInvoice={addNextInvoiceHandler}\r\n        /> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InvoiceForm;\r\n","import React from 'react';\r\n\r\nconst InvoiceFieldEMI = ({ onEditItem, cellData }) => {\r\n  return (\r\n    <input\r\n      className={cellData.className}\r\n      type={cellData.type}\r\n      placeholder={cellData.placeholder}\r\n      min={cellData.min}\r\n      max={cellData.max}\r\n      step={cellData.step}\r\n      name={cellData.name}\r\n      id={cellData.id}\r\n      value={cellData.value}\r\n      onChange={onEditItem}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nexport default InvoiceFieldEMI;\r\n","import React from 'react';\r\nimport InvoiceFieldEMI from './EMIFields';\r\nimport { Icon, IconButton } from '@mui/material';\r\nconst InvoiceEMI = ({ id, instalmentNumber, instalmentDate, instalmentAmount, onDeleteItem, onEdtiItem }) => {\r\n  const deleteItemHandler = () => {\r\n    onDeleteItem(instalmentNumber);\r\n  };\r\n  return (\r\n    <tr>\r\n      <td className=\"w-full\">\r\n        {/* <input type=\"text\" value={no} name={no} id={id} onChange={(event) => onEdtiItem(event)} /> */}\r\n        <InvoiceFieldEMI\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            placeholder: 'Installment No.',\r\n            type: 'text',\r\n            name: 'instalmentNumber',\r\n            id: instalmentNumber,\r\n            value: instalmentNumber,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"w-full\">\r\n        {/* <input type=\"date\" value={date} name={date} onChange={(event) => onEdtiItem(event)} /> */}\r\n        <InvoiceFieldEMI\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            type: 'date',\r\n            name: 'instalmentDate',\r\n            id: instalmentNumber,\r\n            value: instalmentDate,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"w-full\">\r\n        {/* <input type=\"number\" value={amount} name={amount} onChange={(event) => onEdtiItem(event)} /> */}\r\n        <InvoiceFieldEMI\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            placeholder: 'Installment Amount',\r\n            type: 'text',\r\n            name: 'instalmentAmount',\r\n            id: instalmentNumber,\r\n            value: instalmentAmount,\r\n          }}\r\n        />\r\n      </td>\r\n\r\n      <td className=\"flex items-center justify-center\">\r\n        <IconButton onClick={deleteItemHandler}>\r\n          <Icon color=\"warning\">delete</Icon>\r\n        </IconButton>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default InvoiceEMI;\r\n","import { styled } from '@mui/system';\r\nimport { Button, Row, Col, Modal, Form } from 'react-bootstrap';\r\nimport { toPng } from 'html-to-image';\r\nimport { jsPDF } from 'jspdf';\r\nimport {\r\n  autocompleteClasses,\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n// const ReviewInvoice = () => {\r\nconst ReviewInvoice = ({ show, setIsOpen, invoiceInfo, items, onAddNextInvoice }) => {\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n    console.log(invoiceInfo);\r\n  }\r\n\r\n  const addNextInvoiceHandler = () => {\r\n    setIsOpen(false);\r\n    onAddNextInvoice();\r\n  };\r\n\r\n  const SaveAsPDFHandler = () => {\r\n    const dom = document.getElementById('print');\r\n    toPng(dom)\r\n      .then((dataUrl) => {\r\n        const img = new Image();\r\n        img.crossOrigin = 'annoymous';\r\n        img.src = dataUrl;\r\n        img.onload = () => {\r\n          // Initialize the PDF.\r\n          const pdf = new jsPDF({\r\n            orientation: 'portrait',\r\n            unit: 'in',\r\n            format: [5.5, 8.5],\r\n          });\r\n\r\n          // Define reused data\r\n          const imgProps = pdf.getImageProperties(img);\r\n          const imageType = imgProps.fileType;\r\n          const pdfWidth = pdf.internal.pageSize.getWidth();\r\n\r\n          // Calculate the number of pages.\r\n          const pxFullHeight = imgProps.height;\r\n          const pxPageHeight = Math.floor((imgProps.width * 8.5) / 5.5);\r\n          const nPages = Math.ceil(pxFullHeight / pxPageHeight);\r\n\r\n          // Define pageHeight separately so it can be trimmed on the final page.\r\n          let pageHeight = pdf.internal.pageSize.getHeight();\r\n\r\n          // Create a one-page canvas to split up the full image.\r\n          const pageCanvas = document.createElement('canvas');\r\n          const pageCtx = pageCanvas.getContext('2d');\r\n          pageCanvas.width = imgProps.width;\r\n          pageCanvas.height = pxPageHeight;\r\n\r\n          for (let page = 0; page < nPages; page++) {\r\n            // Trim the final page to reduce file size.\r\n            if (page === nPages - 1 && pxFullHeight % pxPageHeight !== 0) {\r\n              pageCanvas.height = pxFullHeight % pxPageHeight;\r\n              pageHeight = (pageCanvas.height * pdfWidth) / pageCanvas.width;\r\n            }\r\n            // Display the page.\r\n            const w = pageCanvas.width;\r\n            const h = pageCanvas.height;\r\n            pageCtx.fillStyle = 'white';\r\n            pageCtx.fillRect(0, 0, w, h);\r\n            pageCtx.drawImage(img, 0, page * pxPageHeight, w, h, 0, 0, w, h);\r\n\r\n            // Add the page to the PDF.\r\n            if (page) pdf.addPage();\r\n\r\n            const imgData = pageCanvas.toDataURL(`image/${imageType}`, 1);\r\n            pdf.addImage(imgData, imageType, 0, 0, pdfWidth, pageHeight);\r\n          }\r\n          // Output / Save\r\n          pdf.save(`invoice-${invoiceInfo.invoiceNumber}.pdf`);\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('oops, something went wrong!', error);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        onHide={closeModal}\r\n        show={show}\r\n        animation={false}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title> Invoice Preview</Modal.Title>\r\n          <Row>\r\n            <Col>\r\n              <button type=\"button\" className=\"btn btn-success\" onClick={SaveAsPDFHandler}>\r\n                Download\r\n              </button>\r\n              &nbsp;\r\n              {/* <button type=\"button\" className=\"btn btn-primary\" onClick={addNextInvoiceHandler}> */}\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={closeModal}>\r\n                Edit\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div id=\"print\">\r\n            <StyledTable\r\n              style={{\r\n                paddingLeft: '2px',\r\n                borderWidth: '2px',\r\n                borderColor: '#aaaaaa',\r\n                borderStyle: 'solid',\r\n              }}\r\n            >\r\n              <div className=\" paddingTop: '180px' my-8 inline-block w-full max-w-md transform overflow-hidden rounded-lg bg-white text-left align-middle shadow-xl transition-all\">\r\n                <div className=\"p-4\">\r\n                  <Row>\r\n                    <Col>\r\n                      <img\r\n                        sizes=\"12px\"\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTjhVskpYXfF31NyGSjgoPfjnS6qH8TY8wWftKfux4&s\"\r\n                      ></img>\r\n                    </Col>\r\n                    <Col></Col>\r\n                    <Col md=\"2\">\r\n                      <h5 className=\"text-center text-lg font-bold text-gray-900\">\r\n                        MENTOR PARTH LEAD CRM\r\n                      </h5>\r\n                      <span>Haware Fantasia Business Park</span>\r\n                      <br />\r\n                      <span>Vashi, Navi Mumbai-402107</span>\r\n                      <br />\r\n                      <span>Company Reg. No :-896522147</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">GST No: {invoiceInfo.companyGstNo}</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">State: {invoiceInfo.companyStateName}</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">Email: {invoiceInfo.companyEmail}</span>\r\n                    </Col>\r\n                    <Col></Col>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col md=\"12\">\r\n                      <h5 className=\"text-center text-lg font-bold text-gray-900\">INVOICE</h5>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr />\r\n                  <div className=\"mt-6\">\r\n                    <Row>\r\n                      {/* <Col>\r\n                      <b>\r\n                        <span className=\"font-bold\">From:</span>\r\n                      </b>\r\n\r\n                      <span>&nbsp;{invoiceInfo.cashierName}</span>\r\n                      <br />\r\n                      <span>Address: {invoiceInfo.companyAddress}</span>\r\n\r\n                      <br />\r\n                      <span className=\"font-bold\">GST NO: {invoiceInfo.companyGstNo}</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">State: {invoiceInfo.companyStateName}</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">Email: {invoiceInfo.companyEmail}</span>\r\n                    </Col> */}\r\n                      <Col>\r\n                        <b>\r\n                          <span className=\"font-bold\">Customer Info</span>\r\n                        </b>\r\n                        <br />\r\n                        <span>Name:{invoiceInfo.customerName}</span>\r\n                        <br />\r\n\r\n                        <span>Address:{invoiceInfo.clientAddress}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">GST NO: {invoiceInfo.clientGstNo}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">PAN No: {invoiceInfo.panNo}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">Contact: {invoiceInfo.clientContact}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">Email: {invoiceInfo.clientEmail}</span>\r\n                      </Col>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <b>\r\n                          <span className=\"font-bold\">Invoice Details:</span>\r\n                        </b>\r\n                        <br />\r\n                        <span>Invoice No:- {invoiceInfo.invoiceNumber}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">Date: {invoiceInfo.invoiceDate}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">Generated By: {invoiceInfo.cashierName}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">Refrence No. & Date:</span>\r\n                        <br />\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Row className=\"mt-2\">\r\n                      <Col></Col>\r\n                      <Col md=\"auto\">\r\n                        <h4 style={{ color: 'green' }}>Product Invoice List</h4>\r\n                      </Col>\r\n                      <Col></Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <StyledTable\r\n                        style={{ borderWidth: '1px', borderColor: '#aaaaaa', borderStyle: 'solid' }}\r\n                      >\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Product Name</TableCell>\r\n                            <TableCell align=\"center\">Quatity</TableCell>\r\n                            <TableCell align=\"center\">Unit Price</TableCell>\r\n                            <TableCell align=\"center\">Total Price</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {items.map((item) => (\r\n                            <tr key={item.id}>\r\n                              <td className=\"min-w-[50px] text-center\">{item.name}</td>\r\n                              <td className=\"min-w-[50px] text-center\">{item.qty}</td>\r\n                              <td className=\"min-w-[80px] text-center\">\r\n                                ₹{Number(item.price).toFixed(2)}\r\n                              </td>\r\n                              <td className=\"min-w-[90px] text-center\">\r\n                                ₹{Number(item.price * item.qty).toFixed(2)}\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </TableBody>\r\n                      </StyledTable>\r\n                    </Row>\r\n                    <br></br>\r\n                    <br />\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <b>\r\n                          <Form.Label>Subtotal:</Form.Label>\r\n                        </b>\r\n\r\n                        <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                          ₹ {invoiceInfo.subtotal.toFixed(2)}\r\n                        </Form.Label>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <b>\r\n                          <Form.Label>Discount:</Form.Label>\r\n                        </b>\r\n\r\n                        <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                          ₹ {invoiceInfo.discountRate.toFixed(2)}\r\n                        </Form.Label>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <b>\r\n                          <Form.Label>Tax Rate:</Form.Label>\r\n                        </b>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Form.Label style={{ color: 'green' }} className=\"ml-4\">\r\n                          ₹ {invoiceInfo.taxRate.toFixed(2)}\r\n                        </Form.Label>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        {Object.keys(invoiceInfo.installments).length > 0 ? (\r\n                          <StyledTable\r\n                            style={{\r\n                              borderWidth: '1px',\r\n                              borderColor: '#aaaaaa',\r\n                              borderStyle: 'solid',\r\n                            }}\r\n                          >\r\n                            <b className=\"ml-2\">\r\n                              <Form.Label>\r\n                                Paid\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;\r\n                              </Form.Label>\r\n                            </b>\r\n\r\n                            <Form.Label style={{ color: 'green' }}>\r\n                              ₹ {invoiceInfo.initalPayment}\r\n                            </Form.Label>\r\n                            <br />\r\n                            <b className=\"ml-2\">\r\n                              <Form.Label>No of EMI &nbsp;&nbsp;&nbsp;&nbsp;: </Form.Label>\r\n                            </b>\r\n\r\n                            <Form.Label style={{ color: 'green' }}>\r\n                              {Object.keys(invoiceInfo.installments).length} * ₹\r\n                              {invoiceInfo.emiAmount}\r\n                            </Form.Label>\r\n                            <br />\r\n                            <b className=\"ml-2\">\r\n                              <Form.Label>EMI Amount : </Form.Label>\r\n                            </b>\r\n                            <Form.Label style={{ color: 'green' }}>\r\n                              ₹ {invoiceInfo.emiAmount}\r\n                            </Form.Label>\r\n                            <br />\r\n                            <b className=\"ml-2\">\r\n                              <Form.Label>Total Amount : </Form.Label>\r\n                            </b>\r\n                            <Form.Label style={{ color: 'green' }}>\r\n                              ₹\r\n                              {invoiceInfo.total % 1 === 0\r\n                                ? invoiceInfo.total\r\n                                : invoiceInfo.total.toFixed(2)}\r\n                            </Form.Label>\r\n                          </StyledTable>\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Col>\r\n\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <hr />\r\n                        <b>\r\n                          <Form.Label>Grand Total:</Form.Label>\r\n                        </b>\r\n                        <Form.Label style={{ color: 'green' }} className=\"ml-3\">\r\n                          ₹\r\n                          {invoiceInfo.total % 1 === 0\r\n                            ? invoiceInfo.total\r\n                            : invoiceInfo.total.toFixed(2)}\r\n                        </Form.Label>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </StyledTable>\r\n            <h6 className=\"text-center mt-3\">This is a Computer Generated Invoice</h6>\r\n          </div>\r\n        </Modal.Body>\r\n        {/* <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={closeModal}>\r\n            Save\r\n          </Button>\r\n        </Modal.Footer> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default ReviewInvoice;\r\n","const incrementString = (string) => {\r\n  // Convert pass args to string\r\n  const str = string.toString();\r\n  // Extract string's number\r\n  let number = str.match(/\\d+/) === null ? 0 : str.match(/\\d+/)[0];\r\n\r\n  // Store number's length\r\n  const numberLength = number.length;\r\n\r\n  // Increment number by 1\r\n  number = (parseInt(number) + 1).toString();\r\n\r\n  // If there were leading 0s, add them again\r\n  while (number.length < numberLength) {\r\n    number = '0' + number;\r\n  }\r\n\r\n  return str.replace(/[0-9]/g, '').concat(number);\r\n};\r\n\r\nexport default incrementString;\r\n","import React, { Fragment } from 'react';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { toPng } from 'html-to-image';\r\nimport { jsPDF } from 'jspdf';\r\nimport { styled } from '@mui/system';\r\nimport { Button, Row, Col, Modal, Form } from 'react-bootstrap';\r\nimport {\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst InvoiceModal = ({ isOpen, setIsOpen, invoiceInfo, items, onAddNextInvoice }) => {\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const addNextInvoiceHandler = () => {\r\n    setIsOpen(false);\r\n    onAddNextInvoice();\r\n  };\r\n\r\n  const SaveAsPDFHandler = () => {\r\n    const dom = document.getElementById('print');\r\n    toPng(dom)\r\n      .then((dataUrl) => {\r\n        const img = new Image();\r\n        img.crossOrigin = 'annoymous';\r\n        img.src = dataUrl;\r\n        img.onload = () => {\r\n          // Initialize the PDF.\r\n          const pdf = new jsPDF({\r\n            orientation: 'portrait',\r\n            unit: 'in',\r\n            format: [5.5, 8.5],\r\n          });\r\n\r\n          // Define reused data\r\n          const imgProps = pdf.getImageProperties(img);\r\n          const imageType = imgProps.fileType;\r\n          const pdfWidth = pdf.internal.pageSize.getWidth();\r\n\r\n          // Calculate the number of pages.\r\n          const pxFullHeight = imgProps.height;\r\n          const pxPageHeight = Math.floor((imgProps.width * 8.5) / 5.5);\r\n          const nPages = Math.ceil(pxFullHeight / pxPageHeight);\r\n\r\n          // Define pageHeight separately so it can be trimmed on the final page.\r\n          let pageHeight = pdf.internal.pageSize.getHeight();\r\n\r\n          // Create a one-page canvas to split up the full image.\r\n          const pageCanvas = document.createElement('canvas');\r\n          const pageCtx = pageCanvas.getContext('2d');\r\n          pageCanvas.width = imgProps.width;\r\n          pageCanvas.height = pxPageHeight;\r\n\r\n          for (let page = 0; page < nPages; page++) {\r\n            // Trim the final page to reduce file size.\r\n            if (page === nPages - 1 && pxFullHeight % pxPageHeight !== 0) {\r\n              pageCanvas.height = pxFullHeight % pxPageHeight;\r\n              pageHeight = (pageCanvas.height * pdfWidth) / pageCanvas.width;\r\n            }\r\n            // Display the page.\r\n            const w = pageCanvas.width;\r\n            const h = pageCanvas.height;\r\n            pageCtx.fillStyle = 'white';\r\n            pageCtx.fillRect(0, 0, w, h);\r\n            pageCtx.drawImage(img, 0, page * pxPageHeight, w, h, 0, 0, w, h);\r\n\r\n            // Add the page to the PDF.\r\n            if (page) pdf.addPage();\r\n\r\n            const imgData = pageCanvas.toDataURL(`image/${imageType}`, 1);\r\n            pdf.addImage(imgData, imageType, 0, 0, pdfWidth, pageHeight);\r\n          }\r\n          // Output / Save\r\n          pdf.save(`invoice-${invoiceInfo.invoiceNumber}.pdf`);\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('oops, something went wrong!', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Transition appear show={isOpen} as={Fragment}>\r\n          <Dialog as=\"div\" className=\"fixed inset-0 z-10 overflow-y-auto\" onClose={closeModal}>\r\n            <div className=\"min-h-screen px-4 text-center\">\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter=\"ease-out duration-300\"\r\n                enterFrom=\"opacity-0\"\r\n                enterTo=\"opacity-100\"\r\n                leave=\"ease-in duration-200\"\r\n                leaveFrom=\"opacity-100\"\r\n                leaveTo=\"opacity-0\"\r\n              >\r\n                <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span className=\"inline-block h-screen align-middle\" aria-hidden=\"true\">\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                className=\"text-center\"\r\n                as={Fragment}\r\n                enter=\"ease-out duration-300\"\r\n                enterFrom=\"opacity-0 scale-95\"\r\n                enterTo=\"opacity-100 scale-100\"\r\n                leave=\"ease-in duration-200\"\r\n                leaveFrom=\"opacity-100 scale-100\"\r\n                leaveTo=\"opacity-0 scale-95\"\r\n              >\r\n                <div className=\" my-8 inline-block w-full max-w-md transform overflow-hidden rounded-lg bg-white text-left align-middle shadow-xl transition-all\">\r\n                  <div className=\"p-4\" id=\"print\">\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <h5 className=\"text-center text-lg font-bold text-gray-900\">TAX INVOICE</h5>\r\n                      </Col>\r\n\r\n                      <Col className=\"ml-5\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success\"\r\n                          onClick={SaveAsPDFHandler}\r\n                        >\r\n                          Download\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary\"\r\n                          onClick={addNextInvoiceHandler}\r\n                        >\r\n                          Next\r\n                        </button>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <div className=\"mt-6\">\r\n                      <Row>\r\n                        <Col>\r\n                          <b>\r\n                            <span className=\"font-bold\">From:</span>\r\n                          </b>\r\n                          {/* <span className=\"font-bold\">Cashier:</span> */}\r\n                          <span>&nbsp;{invoiceInfo.cashierName}</span>\r\n                          <br />\r\n                          <span>Haware Fantatsia Buisness Park</span>\r\n                          <br />\r\n                          <span>Vashi,New Mumbai-400012</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">GST NO: ABC0154266C</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">State: Maharashtra</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">Email: demo@gmail.com</span>\r\n                        </Col>\r\n                        <Col>\r\n                          <b>\r\n                            <span className=\"font-bold\">To:</span>\r\n                          </b>\r\n                          <span>&nbsp;{invoiceInfo.customerName}</span>\r\n                          <br />\r\n                          <span>Haware Fantatsia Buisness Park</span>\r\n                          <br />\r\n                          <span>New Mumbai-400086</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">GST NO: ABC0154266C</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">State: Maharashtra</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">Email: admin@gmail.com</span>\r\n                        </Col>\r\n                        <Col>\r\n                          <b>\r\n                            <span className=\"font-bold\">Invoice Number:</span>\r\n                          </b>\r\n                          <span>&nbsp;{invoiceInfo.invoiceNumber}</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">Date: 30-10-2022</span>\r\n                          <br />\r\n\r\n                          <span className=\"font-bold\">Refrence No. & Date:</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className=\"mt-2\">\r\n                        <Col></Col>\r\n                        <Col className=\"col-sm-9\">\r\n                          <h4 style={{ color: 'green' }}>Product Invoice List</h4>\r\n                        </Col>\r\n                        <Col></Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <StyledTable>\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\">Product Name</TableCell>\r\n                              <TableCell align=\"center\">Quatity</TableCell>\r\n                              <TableCell align=\"center\">Unit Price</TableCell>\r\n                              <TableCell align=\"center\">Total Price</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {items.map((item) => (\r\n                              <tr key={item.id}>\r\n                                <td className=\"w-full\">{item.name}</td>\r\n                                <td className=\"min-w-[50px] text-center\">{item.qty}</td>\r\n                                <td className=\"min-w-[80px] text-center\">\r\n                                  ₹{Number(item.price).toFixed(2)}\r\n                                </td>\r\n                                <td className=\"min-w-[90px] text-center\">\r\n                                  ₹{Number(item.price * item.qty).toFixed(2)}\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </TableBody>\r\n                        </StyledTable>\r\n                      </Row>\r\n                      <br></br>\r\n                      <Row>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                          <b>\r\n                            <Form.Label>Subtotal:</Form.Label>\r\n                          </b>\r\n\r\n                          <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                            ₹ {invoiceInfo.subtotal.toFixed(2)}\r\n                          </Form.Label>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                          <b>\r\n                            <Form.Label>Tax Rate:</Form.Label>\r\n                          </b>\r\n                          &nbsp;&nbsp;&nbsp;&nbsp;\r\n                          <Form.Label style={{ color: 'green' }} className=\"ml-4\">\r\n                            ₹ {invoiceInfo.taxRate.toFixed(2)}\r\n                          </Form.Label>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n\r\n                        <Col>\r\n                          <hr />\r\n                          <b>\r\n                            <Form.Label>Grand Total:</Form.Label>\r\n                          </b>\r\n\r\n                          <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                            ₹\r\n                            {invoiceInfo.total % 1 === 0\r\n                              ? invoiceInfo.total\r\n                              : invoiceInfo.total.toFixed(2)}\r\n                          </Form.Label>\r\n                        </Col>\r\n                      </Row>\r\n                      {/* <div className=\"mt-4 flex flex-col items-end space-y-2\">\r\n                      <div className=\"flex w-full justify-between border-t border-black/10 pt-2\">\r\n                        <span className=\"font-bold\">Subtotal:</span>\r\n                        <span>₹{invoiceInfo.subtotal.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex w-full justify-between\">\r\n                        <span className=\"font-bold\">Discount:</span>\r\n                        <span>₹{invoiceInfo.discountRate.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex w-full justify-between\">\r\n                        <span className=\"font-bold\">Tax:</span>\r\n                        <span>₹{invoiceInfo.taxRate.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex w-full justify-between border-t border-black/10 py-2\">\r\n                        <span className=\"font-bold\">Total:</span>\r\n                        <span className=\"font-bold\">\r\n                          ₹\r\n                          {invoiceInfo.total % 1 === 0\r\n                            ? invoiceInfo.total\r\n                            : invoiceInfo.total.toFixed(2)}\r\n                        </span>\r\n                      </div>\r\n                    </div> */}\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className=\"mt-4 flex space-x-2 px-4 pb-6\">\r\n                  <button\r\n                    className=\"flex w-full items-center justify-center space-x-1 rounded-md border border-blue-500 py-2 text-sm text-blue-500 shadow-sm hover:bg-blue-500 hover:text-white\"\r\n                    onClick={SaveAsPDFHandler}\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-4 w-4\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\r\n                      />\r\n                    </svg>\r\n                    <span>Download</span>\r\n                  </button>\r\n                  <button\r\n                    onClick={addNextInvoiceHandler}\r\n                    className=\"flex w-full items-center justify-center space-x-1 rounded-md bg-blue-500 py-2 text-sm text-white shadow-sm hover:bg-blue-600\"\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-4 w-4\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"\r\n                      />\r\n                    </svg>\r\n                    <span>Next</span>\r\n                  </button>\r\n                </div> */}\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </Dialog>\r\n        </Transition>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InvoiceModal;\r\n","import React from 'react';\r\n\r\nconst InvoiceField = ({ onEditItem, cellData }) => {\r\n  return (\r\n    <input\r\n      className={cellData.className}\r\n      type={cellData.type}\r\n      placeholder={cellData.placeholder}\r\n      min={cellData.min}\r\n      max={cellData.max}\r\n      step={cellData.step}\r\n      name={cellData.name}\r\n      id={cellData.id}\r\n      value={cellData.value}\r\n      onChange={onEditItem}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nexport default InvoiceField;\r\n","import React from 'react';\r\nimport InvoiceField from './InvoiceField';\r\nimport { Icon, IconButton } from '@mui/material';\r\nconst InvoiceItem = ({ id, name, qty, price, onDeleteItem, onEdtiItem }) => {\r\n  const deleteItemHandler = () => {\r\n    onDeleteItem(id);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"w-full\">\r\n        <InvoiceField\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            placeholder: 'Item name',\r\n            type: 'text',\r\n            name: 'name',\r\n            id: id,\r\n            value: name,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"min-w-[65px] md:min-w-[80px]\">\r\n        <InvoiceField\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            type: 'number',\r\n            min: '1',\r\n            name: 'qty',\r\n            id: id,\r\n            value: qty,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"relative min-w-[100px] md:min-w-[150px]\">\r\n        {/* <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"absolute left-2 top-1/2 h-6 w-6 -translate-y-1/2 text-gray-400 sm:left-4\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          />\r\n        </svg> */}\r\n        <InvoiceField\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            // className: 'text-right',\r\n            type: 'number',\r\n            min: '1',\r\n            // step: '1',\r\n            name: 'price',\r\n            id: id,\r\n            value: price,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"flex items-center justify-center\">\r\n        {/* <button\r\n          className=\"rounded-md bg-red-500 p-2  shadow-sm transition-colors duration-200 hover:bg-red-600\"\r\n          onClick={deleteItemHandler}\r\n        >\r\n          Delete */}\r\n        {/* <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-5 w-5\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n            />\r\n          </svg> */}\r\n        {/* </button> */}\r\n        <IconButton onClick={deleteItemHandler}>\r\n          <Icon color=\"warning\">delete</Icon>\r\n        </IconButton>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default InvoiceItem;\r\n"],"sourceRoot":""}