{"version":3,"sources":["app/views/invoice/invoices/InvoiceField.jsx","app/views/invoice/invoices/InvoiceItem.jsx","app/views/invoice/invoices/EMIFields.jsx","app/views/invoice/invoices/InvoiceModal.jsx","app/views/invoice/invoices/invoiceEMI.jsx","app/views/invoice/invoices/ReviewInvoice.jsx","app/views/invoice/helpers/incrementString.js","app/views/invoice/invoices/invoiceForm.jsx"],"names":["InvoiceField","onEditItem","cellData","className","type","placeholder","min","max","step","name","id","value","onChange","required","InvoiceItem","qty","price","onDeleteItem","onEdtiItem","event","IconButton","onClick","Icon","color","InvoiceFieldEMI","styled","Table","whiteSpace","paddingLeft","paddingRight","theme","margin","breakpoints","down","marginBottom","InvoiceEMI","no","date","amount","StyledTable","ReviewInvoice","show","setIsOpen","invoiceInfo","items","onAddNextInvoice","closeModal","console","log","Modal","backdrop","keyboard","onHide","animation","size","centered","Header","Title","Row","Col","dom","document","getElementById","toPng","then","dataUrl","img","Image","crossOrigin","src","onload","pdf","jsPDF","orientation","unit","format","imgProps","getImageProperties","imageType","fileType","pdfWidth","internal","pageSize","getWidth","pxFullHeight","height","pxPageHeight","Math","floor","width","nPages","ceil","pageHeight","getHeight","pageCanvas","createElement","pageCtx","getContext","page","w","h","fillStyle","fillRect","drawImage","addPage","imgData","toDataURL","addImage","save","invoiceNumber","catch","error","Body","style","borderWidth","borderColor","borderStyle","sizes","md","companyGstNo","companyStateName","companyEmail","customerName","clientAddress","clientGstNo","panNo","clientContact","clientEmail","invoiceDate","TableHead","TableRow","TableCell","align","TableBody","map","item","Number","toFixed","Form","Label","subtotal","discountRate","taxRate","total","Footer","Button","variant","incrementString","string","str","toString","number","match","numberLength","length","parseInt","replace","concat","today","Date","setDate","getDate","defaultValue","toISOString","split","Container","InvoiceForm","useState","isOpen","discount","setDiscount","tax","setTax","setInvoiceDate","setInvoiceNumber","cashierName","setCashierName","setCompanyEmail","companyContact","setCompanyContact","companyAddress","setCompanyAddress","setCompanyGstNo","setCompanyStateName","setCustomerName","setPanNo","setClientEmail","setClientContact","setClientAddress","setClientGstNo","uid","installments","setInstallments","setItems","setShow","handleClose","deleteItemHandler1","prevItem","filter","deleteItemHandler","edtiItemHandler","editedItem","target","newItems","key","edtiItemHandler1","editedItem1","newInstallments","reduce","prev","curr","trim","Card","background","title","Control","Group","controlId","as","rows","Box","overflow","preventDefault","InputGroup","Text","Object","keys","marginTop","prevNumber"],"mappings":"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","file":"static/js/54.d8cdda08.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst InvoiceField = ({ onEditItem, cellData }) => {\r\n  return (\r\n    <input\r\n      className={cellData.className}\r\n      type={cellData.type}\r\n      placeholder={cellData.placeholder}\r\n      min={cellData.min}\r\n      max={cellData.max}\r\n      step={cellData.step}\r\n      name={cellData.name}\r\n      id={cellData.id}\r\n      value={cellData.value}\r\n      onChange={onEditItem}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nexport default InvoiceField;\r\n","import React from 'react';\r\nimport InvoiceField from './InvoiceField';\r\nimport { Icon, IconButton } from '@mui/material';\r\nconst InvoiceItem = ({ id, name, qty, price, onDeleteItem, onEdtiItem }) => {\r\n  const deleteItemHandler = () => {\r\n    onDeleteItem(id);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"w-full\">\r\n        <InvoiceField\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            placeholder: 'Item name',\r\n            type: 'text',\r\n            name: 'name',\r\n            id: id,\r\n            value: name,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"min-w-[65px] md:min-w-[80px]\">\r\n        <InvoiceField\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            type: 'number',\r\n            min: '1',\r\n            name: 'qty',\r\n            id: id,\r\n            value: qty,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"relative min-w-[100px] md:min-w-[150px]\">\r\n        {/* <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"absolute left-2 top-1/2 h-6 w-6 -translate-y-1/2 text-gray-400 sm:left-4\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          />\r\n        </svg> */}\r\n        <InvoiceField\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            // className: 'text-right',\r\n            type: 'number',\r\n            min: '1',\r\n            // step: '1',\r\n            name: 'price',\r\n            id: id,\r\n            value: price,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"flex items-center justify-center\">\r\n        {/* <button\r\n          className=\"rounded-md bg-red-500 p-2  shadow-sm transition-colors duration-200 hover:bg-red-600\"\r\n          onClick={deleteItemHandler}\r\n        >\r\n          Delete */}\r\n        {/* <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-5 w-5\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n            />\r\n          </svg> */}\r\n        {/* </button> */}\r\n        <IconButton onClick={deleteItemHandler}>\r\n          <Icon color=\"warning\">delete</Icon>\r\n        </IconButton>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default InvoiceItem;\r\n","import React from 'react';\r\n\r\nconst InvoiceFieldEMI = ({ onEditItem, cellData }) => {\r\n  return (\r\n    <input\r\n      className={cellData.className}\r\n      type={cellData.type}\r\n      placeholder={cellData.placeholder}\r\n      min={cellData.min}\r\n      max={cellData.max}\r\n      step={cellData.step}\r\n      name={cellData.name}\r\n      id={cellData.id}\r\n      value={cellData.value}\r\n      onChange={onEditItem}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nexport default InvoiceFieldEMI;\r\n","import React, { Fragment } from 'react';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { toPng } from 'html-to-image';\r\nimport { jsPDF } from 'jspdf';\r\nimport { styled } from '@mui/system';\r\nimport { Button, Row, Col, Modal, Form } from 'react-bootstrap';\r\nimport {\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst InvoiceModal = ({ isOpen, setIsOpen, invoiceInfo, items, onAddNextInvoice }) => {\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const addNextInvoiceHandler = () => {\r\n    setIsOpen(false);\r\n    onAddNextInvoice();\r\n  };\r\n\r\n  const SaveAsPDFHandler = () => {\r\n    const dom = document.getElementById('print');\r\n    toPng(dom)\r\n      .then((dataUrl) => {\r\n        const img = new Image();\r\n        img.crossOrigin = 'annoymous';\r\n        img.src = dataUrl;\r\n        img.onload = () => {\r\n          // Initialize the PDF.\r\n          const pdf = new jsPDF({\r\n            orientation: 'portrait',\r\n            unit: 'in',\r\n            format: [5.5, 8.5],\r\n          });\r\n\r\n          // Define reused data\r\n          const imgProps = pdf.getImageProperties(img);\r\n          const imageType = imgProps.fileType;\r\n          const pdfWidth = pdf.internal.pageSize.getWidth();\r\n\r\n          // Calculate the number of pages.\r\n          const pxFullHeight = imgProps.height;\r\n          const pxPageHeight = Math.floor((imgProps.width * 8.5) / 5.5);\r\n          const nPages = Math.ceil(pxFullHeight / pxPageHeight);\r\n\r\n          // Define pageHeight separately so it can be trimmed on the final page.\r\n          let pageHeight = pdf.internal.pageSize.getHeight();\r\n\r\n          // Create a one-page canvas to split up the full image.\r\n          const pageCanvas = document.createElement('canvas');\r\n          const pageCtx = pageCanvas.getContext('2d');\r\n          pageCanvas.width = imgProps.width;\r\n          pageCanvas.height = pxPageHeight;\r\n\r\n          for (let page = 0; page < nPages; page++) {\r\n            // Trim the final page to reduce file size.\r\n            if (page === nPages - 1 && pxFullHeight % pxPageHeight !== 0) {\r\n              pageCanvas.height = pxFullHeight % pxPageHeight;\r\n              pageHeight = (pageCanvas.height * pdfWidth) / pageCanvas.width;\r\n            }\r\n            // Display the page.\r\n            const w = pageCanvas.width;\r\n            const h = pageCanvas.height;\r\n            pageCtx.fillStyle = 'white';\r\n            pageCtx.fillRect(0, 0, w, h);\r\n            pageCtx.drawImage(img, 0, page * pxPageHeight, w, h, 0, 0, w, h);\r\n\r\n            // Add the page to the PDF.\r\n            if (page) pdf.addPage();\r\n\r\n            const imgData = pageCanvas.toDataURL(`image/${imageType}`, 1);\r\n            pdf.addImage(imgData, imageType, 0, 0, pdfWidth, pageHeight);\r\n          }\r\n          // Output / Save\r\n          pdf.save(`invoice-${invoiceInfo.invoiceNumber}.pdf`);\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('oops, something went wrong!', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Transition appear show={isOpen} as={Fragment}>\r\n          <Dialog as=\"div\" className=\"fixed inset-0 z-10 overflow-y-auto\" onClose={closeModal}>\r\n            <div className=\"min-h-screen px-4 text-center\">\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter=\"ease-out duration-300\"\r\n                enterFrom=\"opacity-0\"\r\n                enterTo=\"opacity-100\"\r\n                leave=\"ease-in duration-200\"\r\n                leaveFrom=\"opacity-100\"\r\n                leaveTo=\"opacity-0\"\r\n              >\r\n                <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span className=\"inline-block h-screen align-middle\" aria-hidden=\"true\">\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                className=\"text-center\"\r\n                as={Fragment}\r\n                enter=\"ease-out duration-300\"\r\n                enterFrom=\"opacity-0 scale-95\"\r\n                enterTo=\"opacity-100 scale-100\"\r\n                leave=\"ease-in duration-200\"\r\n                leaveFrom=\"opacity-100 scale-100\"\r\n                leaveTo=\"opacity-0 scale-95\"\r\n              >\r\n                <div className=\" my-8 inline-block w-full max-w-md transform overflow-hidden rounded-lg bg-white text-left align-middle shadow-xl transition-all\">\r\n                  <div className=\"p-4\" id=\"print\">\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <h5 className=\"text-center text-lg font-bold text-gray-900\">TAX INVOICE</h5>\r\n                      </Col>\r\n\r\n                      <Col className=\"ml-5\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success\"\r\n                          onClick={SaveAsPDFHandler}\r\n                        >\r\n                          Download\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary\"\r\n                          onClick={addNextInvoiceHandler}\r\n                        >\r\n                          Next\r\n                        </button>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <div className=\"mt-6\">\r\n                      <Row>\r\n                        <Col>\r\n                          <b>\r\n                            <span className=\"font-bold\">From:</span>\r\n                          </b>\r\n                          {/* <span className=\"font-bold\">Cashier:</span> */}\r\n                          <span>&nbsp;{invoiceInfo.cashierName}</span>\r\n                          <br />\r\n                          <span>Haware Fantatsia Buisness Park</span>\r\n                          <br />\r\n                          <span>Vashi,New Mumbai-400012</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">GST NO: ABC0154266C</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">State: Maharashtra</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">Email: demo@gmail.com</span>\r\n                        </Col>\r\n                        <Col>\r\n                          <b>\r\n                            <span className=\"font-bold\">To:</span>\r\n                          </b>\r\n                          <span>&nbsp;{invoiceInfo.customerName}</span>\r\n                          <br />\r\n                          <span>Haware Fantatsia Buisness Park</span>\r\n                          <br />\r\n                          <span>New Mumbai-400086</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">GST NO: ABC0154266C</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">State: Maharashtra</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">Email: admin@gmail.com</span>\r\n                        </Col>\r\n                        <Col>\r\n                          <b>\r\n                            <span className=\"font-bold\">Invoice Number:</span>\r\n                          </b>\r\n                          <span>&nbsp;{invoiceInfo.invoiceNumber}</span>\r\n                          <br />\r\n                          <span className=\"font-bold\">Date: 30-10-2022</span>\r\n                          <br />\r\n\r\n                          <span className=\"font-bold\">Refrence No. & Date:</span>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className=\"mt-2\">\r\n                        <Col></Col>\r\n                        <Col className=\"col-sm-9\">\r\n                          <h4 style={{ color: 'green' }}>Product Invoice List</h4>\r\n                        </Col>\r\n                        <Col></Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <StyledTable>\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\">Product Name</TableCell>\r\n                              <TableCell align=\"center\">Quatity</TableCell>\r\n                              <TableCell align=\"center\">Unit Price</TableCell>\r\n                              <TableCell align=\"center\">Total Price</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {items.map((item) => (\r\n                              <tr key={item.id}>\r\n                                <td className=\"w-full\">{item.name}</td>\r\n                                <td className=\"min-w-[50px] text-center\">{item.qty}</td>\r\n                                <td className=\"min-w-[80px] text-center\">\r\n                                  ₹{Number(item.price).toFixed(2)}\r\n                                </td>\r\n                                <td className=\"min-w-[90px] text-center\">\r\n                                  ₹{Number(item.price * item.qty).toFixed(2)}\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </TableBody>\r\n                        </StyledTable>\r\n                      </Row>\r\n                      <br></br>\r\n                      <Row>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                          <b>\r\n                            <Form.Label>Subtotal:</Form.Label>\r\n                          </b>\r\n\r\n                          <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                            ₹ {invoiceInfo.subtotal.toFixed(2)}\r\n                          </Form.Label>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                          <b>\r\n                            <Form.Label>Tax Rate:</Form.Label>\r\n                          </b>\r\n                          &nbsp;&nbsp;&nbsp;&nbsp;\r\n                          <Form.Label style={{ color: 'green' }} className=\"ml-4\">\r\n                            ₹ {invoiceInfo.taxRate.toFixed(2)}\r\n                          </Form.Label>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n\r\n                        <Col>\r\n                          <hr />\r\n                          <b>\r\n                            <Form.Label>Grand Total:</Form.Label>\r\n                          </b>\r\n\r\n                          <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                            ₹\r\n                            {invoiceInfo.total % 1 === 0\r\n                              ? invoiceInfo.total\r\n                              : invoiceInfo.total.toFixed(2)}\r\n                          </Form.Label>\r\n                        </Col>\r\n                      </Row>\r\n                      {/* <div className=\"mt-4 flex flex-col items-end space-y-2\">\r\n                      <div className=\"flex w-full justify-between border-t border-black/10 pt-2\">\r\n                        <span className=\"font-bold\">Subtotal:</span>\r\n                        <span>₹{invoiceInfo.subtotal.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex w-full justify-between\">\r\n                        <span className=\"font-bold\">Discount:</span>\r\n                        <span>₹{invoiceInfo.discountRate.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex w-full justify-between\">\r\n                        <span className=\"font-bold\">Tax:</span>\r\n                        <span>₹{invoiceInfo.taxRate.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex w-full justify-between border-t border-black/10 py-2\">\r\n                        <span className=\"font-bold\">Total:</span>\r\n                        <span className=\"font-bold\">\r\n                          ₹\r\n                          {invoiceInfo.total % 1 === 0\r\n                            ? invoiceInfo.total\r\n                            : invoiceInfo.total.toFixed(2)}\r\n                        </span>\r\n                      </div>\r\n                    </div> */}\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className=\"mt-4 flex space-x-2 px-4 pb-6\">\r\n                  <button\r\n                    className=\"flex w-full items-center justify-center space-x-1 rounded-md border border-blue-500 py-2 text-sm text-blue-500 shadow-sm hover:bg-blue-500 hover:text-white\"\r\n                    onClick={SaveAsPDFHandler}\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-4 w-4\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\r\n                      />\r\n                    </svg>\r\n                    <span>Download</span>\r\n                  </button>\r\n                  <button\r\n                    onClick={addNextInvoiceHandler}\r\n                    className=\"flex w-full items-center justify-center space-x-1 rounded-md bg-blue-500 py-2 text-sm text-white shadow-sm hover:bg-blue-600\"\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-4 w-4\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"\r\n                      />\r\n                    </svg>\r\n                    <span>Next</span>\r\n                  </button>\r\n                </div> */}\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </Dialog>\r\n        </Transition>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InvoiceModal;\r\n","import React from 'react';\r\nimport InvoiceFieldEMI from './EMIFields';\r\nimport { Icon, IconButton } from '@mui/material';\r\nconst InvoiceEMI = ({ no, id, date, amount, onDeleteItem, onEdtiItem }) => {\r\n  const deleteItemHandler = () => {\r\n    onDeleteItem(id);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"w-full\">\r\n        {/* <input type=\"text\" value={no} name={no} id={id} onChange={(event) => onEdtiItem(event)} /> */}\r\n        <InvoiceFieldEMI\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            placeholder: 'Installment No.',\r\n            type: 'text',\r\n            name: 'no',\r\n            id: id,\r\n            value: no,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"w-full\">\r\n        {/* <input type=\"date\" value={date} name={date} onChange={(event) => onEdtiItem(event)} /> */}\r\n        <InvoiceFieldEMI\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            placeholder: 'Item name',\r\n            type: 'date',\r\n            name: 'date',\r\n            id: id,\r\n            value: date,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"w-full\">\r\n        {/* <input type=\"number\" value={amount} name={amount} onChange={(event) => onEdtiItem(event)} /> */}\r\n        <InvoiceFieldEMI\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            placeholder: 'Installment Amount',\r\n            type: 'text',\r\n            name: 'amount',\r\n            id: id,\r\n            value: amount,\r\n          }}\r\n        />\r\n      </td>\r\n\r\n      <td className=\"flex items-center justify-center\">\r\n        <IconButton onClick={deleteItemHandler}>\r\n          <Icon color=\"warning\">delete</Icon>\r\n        </IconButton>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default InvoiceEMI;\r\n","import { styled } from '@mui/system';\r\nimport { Button, Row, Col, Modal, Form } from 'react-bootstrap';\r\nimport { toPng } from 'html-to-image';\r\nimport { jsPDF } from 'jspdf';\r\nimport {\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0 } },\r\n  },\r\n}));\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n// const ReviewInvoice = () => {\r\nconst ReviewInvoice = ({ show, setIsOpen, invoiceInfo, items, onAddNextInvoice }) => {\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n    console.log(invoiceInfo);\r\n  }\r\n\r\n  const addNextInvoiceHandler = () => {\r\n    setIsOpen(false);\r\n    onAddNextInvoice();\r\n  };\r\n\r\n  const SaveAsPDFHandler = () => {\r\n    const dom = document.getElementById('print');\r\n    toPng(dom)\r\n      .then((dataUrl) => {\r\n        const img = new Image();\r\n        img.crossOrigin = 'annoymous';\r\n        img.src = dataUrl;\r\n        img.onload = () => {\r\n          // Initialize the PDF.\r\n          const pdf = new jsPDF({\r\n            orientation: 'portrait',\r\n            unit: 'in',\r\n            format: [5.5, 8.5],\r\n          });\r\n\r\n          // Define reused data\r\n          const imgProps = pdf.getImageProperties(img);\r\n          const imageType = imgProps.fileType;\r\n          const pdfWidth = pdf.internal.pageSize.getWidth();\r\n\r\n          // Calculate the number of pages.\r\n          const pxFullHeight = imgProps.height;\r\n          const pxPageHeight = Math.floor((imgProps.width * 8.5) / 5.5);\r\n          const nPages = Math.ceil(pxFullHeight / pxPageHeight);\r\n\r\n          // Define pageHeight separately so it can be trimmed on the final page.\r\n          let pageHeight = pdf.internal.pageSize.getHeight();\r\n\r\n          // Create a one-page canvas to split up the full image.\r\n          const pageCanvas = document.createElement('canvas');\r\n          const pageCtx = pageCanvas.getContext('2d');\r\n          pageCanvas.width = imgProps.width;\r\n          pageCanvas.height = pxPageHeight;\r\n\r\n          for (let page = 0; page < nPages; page++) {\r\n            // Trim the final page to reduce file size.\r\n            if (page === nPages - 1 && pxFullHeight % pxPageHeight !== 0) {\r\n              pageCanvas.height = pxFullHeight % pxPageHeight;\r\n              pageHeight = (pageCanvas.height * pdfWidth) / pageCanvas.width;\r\n            }\r\n            // Display the page.\r\n            const w = pageCanvas.width;\r\n            const h = pageCanvas.height;\r\n            pageCtx.fillStyle = 'white';\r\n            pageCtx.fillRect(0, 0, w, h);\r\n            pageCtx.drawImage(img, 0, page * pxPageHeight, w, h, 0, 0, w, h);\r\n\r\n            // Add the page to the PDF.\r\n            if (page) pdf.addPage();\r\n\r\n            const imgData = pageCanvas.toDataURL(`image/${imageType}`, 1);\r\n            pdf.addImage(imgData, imageType, 0, 0, pdfWidth, pageHeight);\r\n          }\r\n          // Output / Save\r\n          pdf.save(`invoice-${invoiceInfo.invoiceNumber}.pdf`);\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('oops, something went wrong!', error);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        onHide={closeModal}\r\n        show={show}\r\n        animation={false}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title> Invoice Preview</Modal.Title>\r\n          <Row>\r\n            <Col>\r\n              <button type=\"button\" className=\"btn btn-success\" onClick={SaveAsPDFHandler}>\r\n                Download\r\n              </button>\r\n              &nbsp;\r\n              {/* <button type=\"button\" className=\"btn btn-primary\" onClick={addNextInvoiceHandler}> */}\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={closeModal}>\r\n                Edit\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div id=\"print\">\r\n            <StyledTable\r\n              style={{\r\n                paddingLeft: '2px',\r\n                borderWidth: '2px',\r\n                borderColor: '#aaaaaa',\r\n                borderStyle: 'solid',\r\n              }}\r\n            >\r\n              <div className=\" paddingTop: '180px' my-8 inline-block w-full max-w-md transform overflow-hidden rounded-lg bg-white text-left align-middle shadow-xl transition-all\">\r\n                <div className=\"p-4\">\r\n                  <Row>\r\n                    <Col>\r\n                      <img\r\n                        sizes=\"12px\"\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTjhVskpYXfF31NyGSjgoPfjnS6qH8TY8wWftKfux4&s\"\r\n                      ></img>\r\n                    </Col>\r\n                    <Col></Col>\r\n                    <Col md=\"2\">\r\n                      <h5 className=\"text-center text-lg font-bold text-gray-900\">\r\n                        MENTOR PARTH LEAD CRM\r\n                      </h5>\r\n                      <span>Haware Fantasia Business Park</span>\r\n                      <br />\r\n                      <span>Vashi, Navi Mumbai-402107</span>\r\n                      <br />\r\n                      <span>Company Reg. No :-896522147</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">GST No: {invoiceInfo.companyGstNo}</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">State: {invoiceInfo.companyStateName}</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">Email: {invoiceInfo.companyEmail}</span>\r\n                    </Col>\r\n                    <Col></Col>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col md=\"12\">\r\n                      <h5 className=\"text-center text-lg font-bold text-gray-900\">INVOICE</h5>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr />\r\n                  <div className=\"mt-6\">\r\n                    <Row>\r\n                      {/* <Col>\r\n                      <b>\r\n                        <span className=\"font-bold\">From:</span>\r\n                      </b>\r\n\r\n                      <span>&nbsp;{invoiceInfo.cashierName}</span>\r\n                      <br />\r\n                      <span>Address: {invoiceInfo.companyAddress}</span>\r\n\r\n                      <br />\r\n                      <span className=\"font-bold\">GST NO: {invoiceInfo.companyGstNo}</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">State: {invoiceInfo.companyStateName}</span>\r\n                      <br />\r\n                      <span className=\"font-bold\">Email: {invoiceInfo.companyEmail}</span>\r\n                    </Col> */}\r\n                      <Col>\r\n                        <b>\r\n                          <span className=\"font-bold\">Customer Info</span>\r\n                        </b>\r\n                        <br />\r\n                        <span>Name:{invoiceInfo.customerName}</span>\r\n                        <br />\r\n\r\n                        <span>Address:{invoiceInfo.clientAddress}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">GST NO: {invoiceInfo.clientGstNo}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">PAN No: {invoiceInfo.panNo}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">Contact: {invoiceInfo.clientContact}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">Email: {invoiceInfo.clientEmail}</span>\r\n                      </Col>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <b>\r\n                          <span className=\"font-bold\">Invoice Details:</span>\r\n                        </b>\r\n                        <br />\r\n                        <span>Invoice No:- {invoiceInfo.invoiceNumber}</span>\r\n                        <br />\r\n                        <span className=\"font-bold\">Date: {invoiceInfo.invoiceDate}</span>\r\n                        <br />\r\n\r\n                        <span className=\"font-bold\">Refrence No. & Date:</span>\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Row className=\"mt-2\">\r\n                      <Col></Col>\r\n                      <Col md=\"auto\">\r\n                        <h4 style={{ color: 'green' }}>Product Invoice List</h4>\r\n                      </Col>\r\n                      <Col></Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <StyledTable\r\n                        style={{ borderWidth: '1px', borderColor: '#aaaaaa', borderStyle: 'solid' }}\r\n                      >\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Product Name</TableCell>\r\n                            <TableCell align=\"center\">Quatity</TableCell>\r\n                            <TableCell align=\"center\">Unit Price</TableCell>\r\n                            <TableCell align=\"center\">Total Price</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {items.map((item) => (\r\n                            <tr key={item.id}>\r\n                              <td className=\"min-w-[50px] text-center\">{item.name}</td>\r\n                              <td className=\"min-w-[50px] text-center\">{item.qty}</td>\r\n                              <td className=\"min-w-[80px] text-center\">\r\n                                ₹{Number(item.price).toFixed(2)}\r\n                              </td>\r\n                              <td className=\"min-w-[90px] text-center\">\r\n                                ₹{Number(item.price * item.qty).toFixed(2)}\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </TableBody>\r\n                      </StyledTable>\r\n                    </Row>\r\n                    <br></br>\r\n                    <br />\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <b>\r\n                          <Form.Label>Subtotal:</Form.Label>\r\n                        </b>\r\n\r\n                        <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                          ₹ {invoiceInfo.subtotal.toFixed(2)}\r\n                        </Form.Label>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <b>\r\n                          <Form.Label>Discount:</Form.Label>\r\n                        </b>\r\n\r\n                        <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                          ₹{invoiceInfo.discountRate.toFixed(2)}\r\n                        </Form.Label>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <b>\r\n                          <Form.Label>Tax Rate:</Form.Label>\r\n                        </b>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Form.Label style={{ color: 'green' }} className=\"ml-4\">\r\n                          ₹ {invoiceInfo.taxRate.toFixed(2)}\r\n                        </Form.Label>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <StyledTable\r\n                          style={{\r\n                            borderWidth: '1px',\r\n                            borderColor: '#aaaaaa',\r\n                            borderStyle: 'solid',\r\n                          }}\r\n                        >\r\n                          <b className=\"ml-2\">\r\n                            <Form.Label>No of Installment: 3*5000</Form.Label>\r\n                          </b>\r\n                          <br />\r\n                          <b className=\"ml-2\">\r\n                            <Form.Label>Installment Amount: 5000</Form.Label>\r\n                          </b>\r\n                          <br />\r\n                          <b className=\"ml-2\">\r\n                            <Form.Label>\r\n                              Total Amount: ₹\r\n                              {invoiceInfo.total % 1 === 0\r\n                                ? invoiceInfo.total\r\n                                : invoiceInfo.total.toFixed(2)}\r\n                            </Form.Label>\r\n                          </b>\r\n                        </StyledTable>\r\n                      </Col>\r\n\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <hr />\r\n                        <b>\r\n                          <Form.Label>Grand Total:</Form.Label>\r\n                        </b>\r\n                        <Form.Label style={{ color: 'green' }} className=\"ml-3\">\r\n                          ₹\r\n                          {invoiceInfo.total % 1 === 0\r\n                            ? invoiceInfo.total\r\n                            : invoiceInfo.total.toFixed(2)}\r\n                        </Form.Label>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </StyledTable>\r\n            <h6 className=\"text-center mt-3\">This is a Computer Generated Invoice</h6>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={closeModal}>\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default ReviewInvoice;\r\n","const incrementString = (string) => {\r\n  // Convert pass args to string\r\n  const str = string.toString();\r\n  // Extract string's number\r\n  let number = str.match(/\\d+/) === null ? 0 : str.match(/\\d+/)[0];\r\n\r\n  // Store number's length\r\n  const numberLength = number.length;\r\n\r\n  // Increment number by 1\r\n  number = (parseInt(number) + 1).toString();\r\n\r\n  // If there were leading 0s, add them again\r\n  while (number.length < numberLength) {\r\n    number = '0' + number;\r\n  }\r\n\r\n  return str.replace(/[0-9]/g, '').concat(number);\r\n};\r\n\r\nexport default incrementString;\r\n","import React, { useState } from 'react';\r\nimport { uid } from 'uid';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport InvoiceItem from './InvoiceItem';\r\nimport InvoiceModal from './InvoiceModal';\r\nimport InvoiceEMI from './invoiceEMI';\r\nimport ReviewInvoice from './ReviewInvoice';\r\nimport incrementString from '../helpers/incrementString';\r\nimport { Form, Row, Col, Button, InputGroup, Card, Modal } from 'react-bootstrap';\r\nimport {\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\n\r\n// const date = new Date();\r\n// const today = date.toLocaleDateString('en-GB', {\r\n//   month: 'numeric',\r\n//   day: 'numeric',\r\n//   year: 'numeric',\r\n// });\r\nconst today = new Date();\r\nconst numberOfDaysToAdd = 0;\r\nconst date = today.setDate(today.getDate() + numberOfDaysToAdd);\r\nconst defaultValue = new Date(date).toISOString().split('T')[0]; // yyyy-mm-dd\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 20, paddingRight: 0 } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 30 } },\r\n  },\r\n}));\r\n\r\nconst InvoiceForm = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [tax, setTax] = useState(18);\r\n  const [invoiceDate, setInvoiceDate] = useState(defaultValue);\r\n  const [invoiceNumber, setInvoiceNumber] = useState(1201);\r\n  const [cashierName, setCashierName] = useState('');\r\n  const [companyEmail, setCompanyEmail] = useState('info@mentorparth.com');\r\n  const [companyContact, setCompanyContact] = useState('+91-7715815877');\r\n  const [companyAddress, setCompanyAddress] = useState(\r\n    'Haware Fantasia Business Park, Vashi, Navi-Mumbai'\r\n  );\r\n  const [companyGstNo, setCompanyGstNo] = useState('ABCDEF01234');\r\n  const [companyStateName, setCompanyStateName] = useState('Maharashtra');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [panNo, setPanNo] = useState('');\r\n  const [clientEmail, setClientEmail] = useState('');\r\n  const [clientContact, setClientContact] = useState('');\r\n  const [clientAddress, setClientAddress] = useState('');\r\n  const [clientGstNo, setClientGstNo] = useState('');\r\n  const [installments, setInstallments] = useState([\r\n    {\r\n      id: uid(6),\r\n      date: '',\r\n      amount: '',\r\n    },\r\n  ]);\r\n  const [items, setItems] = useState([\r\n    {\r\n      id: uid(6),\r\n      name: '',\r\n      qty: 1,\r\n      price: '1.00',\r\n    },\r\n  ]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  //Dialog Form\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  const reviewInvoiceHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const addNextInvoiceHandler = () => {\r\n    setInvoiceNumber((prevNumber) => incrementString(prevNumber));\r\n    setItems([\r\n      {\r\n        id: uid(6),\r\n        name: '',\r\n        qty: 1,\r\n        price: '1.00',\r\n      },\r\n    ]);\r\n  };\r\n  const addItemHandler1 = () => {\r\n    const id = uid(6);\r\n    setInstallments((prevItem) => [\r\n      ...prevItem,\r\n      {\r\n        id: id,\r\n        date: '',\r\n        amount: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const addItemHandler = () => {\r\n    const id = uid(6);\r\n    setItems((prevItem) => [\r\n      ...prevItem,\r\n      {\r\n        id: id,\r\n        name: '',\r\n        qty: 1,\r\n        price: '1.00',\r\n      },\r\n    ]);\r\n  };\r\n  const deleteItemHandler1 = (id) => {\r\n    setInstallments((prevItem) => prevItem.filter((item) => item.id !== id));\r\n  };\r\n  const deleteItemHandler = (id) => {\r\n    setItems((prevItem) => prevItem.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const edtiItemHandler = (event) => {\r\n    const editedItem = {\r\n      id: event.target.id,\r\n      name: event.target.name,\r\n      value: event.target.value,\r\n    };\r\n\r\n    const newItems = items.map((items) => {\r\n      for (const key in items) {\r\n        if (key === editedItem.name && items.id === editedItem.id) {\r\n          items[key] = editedItem.value;\r\n        }\r\n      }\r\n      return items;\r\n    });\r\n\r\n    setItems(newItems);\r\n  };\r\n  const edtiItemHandler1 = (event) => {\r\n    const editedItem1 = {\r\n      id: event.target.id,\r\n      name: event.target.name,\r\n      value: event.target.value,\r\n    };\r\n\r\n    const newInstallments = installments.map((installments) => {\r\n      for (const key in installments) {\r\n        if (key === editedItem1.name && installments.id === editedItem1.id) {\r\n          installments[key] = editedItem1.value;\r\n        }\r\n      }\r\n      return installments;\r\n    });\r\n\r\n    setInstallments(newInstallments);\r\n  };\r\n\r\n  const subtotal = items.reduce((prev, curr) => {\r\n    if (curr.name.trim().length > 0) return prev + Number(curr.price * Math.floor(curr.qty));\r\n    else return prev;\r\n  }, 0);\r\n  const taxRate = (tax * subtotal) / 100;\r\n  const discountRate = (discount * subtotal) / 100;\r\n  const total = subtotal - discountRate + taxRate;\r\n\r\n  return (\r\n    <Container>\r\n      <Card style={{ width: '65rem', background: '#C3CFC9' }}>\r\n        <Row>\r\n          <Col md=\"9\">\r\n            <SimpleCard title=\"Create New Invoice\">\r\n              <Form>\r\n                <Row className=\"mt-2\">\r\n                  <Col></Col>\r\n                  <Col className=\"col-sm-12\">\r\n                    <h4 className=\"text-center  font-bold\">INVOICE</h4>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Label>Invoice Number:</Form.Label>\r\n                    <Form.Control\r\n                      value={invoiceNumber}\r\n                      onChange={(event) => setInvoiceNumber(event.target.value)}\r\n                      placeholder=\"Enter the Invoice Number\"\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label>Date:</Form.Label>\r\n                    {/* <Form.Control\r\n                      type=\"date\"\r\n                      // onChange={(e) => setQuotationDate(e.target.value)}\r\n                      value={today}\r\n                    /> */}\r\n                    <Form.Control\r\n                      id=\"dateRequired\"\r\n                      type=\"date\"\r\n                      name=\"dateRequired\"\r\n                      value={invoiceDate}\r\n                      onChange={(event) => setInvoiceDate(event.target.value)}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col>\r\n                    <Form.Label> Generated By:</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      className=\"flex-1\"\r\n                      placeholder=\"Cashier name\"\r\n                      type=\"text\"\r\n                      name=\"cashierName\"\r\n                      id=\"cashierName\"\r\n                      value={cashierName}\r\n                      onChange={(event) => setCashierName(event.target.value)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"mt-2\">\r\n                  <b>\r\n                    <h6 style={{ color: 'green' }}>Company Detail's</h6>\r\n                  </b>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Label>Company Email:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        // className=\"flex-1\"\r\n                        placeholder=\"Company Email\"\r\n                        // type=\"text\"\r\n                        // name=\"companyEmail\"\r\n                        // id=\"companyEmail\"\r\n                        value={companyEmail}\r\n                        onChange={(event) => setCompanyEmail(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>Company Contact:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Company Contact\"\r\n                        type=\"text\"\r\n                        name=\"companyContact\"\r\n                        id=\"companyContact\"\r\n                        value={companyContact}\r\n                        onChange={(event) => setCompanyContact(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={3}\r\n                          onChange={(event) => setCompanyAddress(event.target.value)}\r\n                          value={companyAddress}\r\n                          placeholder=\"Company Address\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Label>Company GST NO:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Enter GST Number\"\r\n                        type=\"text\"\r\n                        name=\"companyGstNo\"\r\n                        id=\"companyGstNo\"\r\n                        value={companyGstNo}\r\n                        onChange={(event) => setCompanyGstNo(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>State Name:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Sate Name\"\r\n                        type=\"text\"\r\n                        name=\"companyStateName\"\r\n                        id=\"companyStateName\"\r\n                        value={companyStateName}\r\n                        onChange={(event) => setCompanyStateName(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <b>\r\n                    <h6 className=\"mt-2\" style={{ color: 'green' }}>\r\n                      Client Detail's\r\n                    </h6>\r\n                  </b>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Label>Biller/Customer Name:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Customer name\"\r\n                        type=\"text\"\r\n                        name=\"customerName\"\r\n                        id=\"customerName\"\r\n                        value={customerName}\r\n                        onChange={(event) => setCustomerName(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>Pan Number:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Customer Pan No\"\r\n                        type=\"text\"\r\n                        name=\"panNo\"\r\n                        id=\"panNo\"\r\n                        value={panNo}\r\n                        onChange={(event) => setPanNo(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Label>Customer Email:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Customer Email\"\r\n                        type=\"text\"\r\n                        name=\"clientEmail\"\r\n                        id=\"clientEmail\"\r\n                        value={clientEmail}\r\n                        onChange={(event) => setClientEmail(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>Customer Contact No:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Customer Contact\"\r\n                        type=\"text\"\r\n                        name=\"clientContact\"\r\n                        id=\"clientContact\"\r\n                        value={clientContact}\r\n                        onChange={(event) => setClientContact(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={3}\r\n                          onChange={(event) => setClientAddress(event.target.value)}\r\n                          value={clientAddress}\r\n                          placeholder=\"Customer Address\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-1\">\r\n                    <Col md=\"6\">\r\n                      <Form.Label>Customer GST NO:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Enter GST Number\"\r\n                        type=\"text\"\r\n                        name=\"clientGstNo\"\r\n                        id=\"clientGstNo\"\r\n                        value={clientGstNo}\r\n                        onChange={(event) => setClientGstNo(event.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Box className=\"text-center mt-2\" width=\"100%\" overflow=\"auto\">\r\n                    {/* Table Section */}\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col className=\"col-sm-9\">\r\n                        <h4 style={{ color: 'green' }}>Product Invoice List</h4>\r\n                      </Col>\r\n                      <Col>\r\n                        <Col className=\"col-sm-1\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={addItemHandler}\r\n                            className=\"btn btn-success\"\r\n                          >\r\n                            Add Items\r\n                          </button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                    <StyledTable>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Product Name</TableCell>\r\n                          <TableCell align=\"center\">Quantity</TableCell>\r\n                          <TableCell align=\"center\">Unit Price</TableCell>\r\n                          <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {items.map((item) => (\r\n                          <InvoiceItem\r\n                            align=\"justify\"\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            name={item.name}\r\n                            qty={item.qty}\r\n                            price={item.price}\r\n                            onDeleteItem={deleteItemHandler}\r\n                            onEdtiItem={edtiItemHandler}\r\n                          />\r\n                        ))}\r\n                      </TableBody>\r\n                    </StyledTable>\r\n                  </Box>\r\n\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                    <Col>\r\n                      <b>\r\n                        <Form.Label>Subtotal:</Form.Label>\r\n                      </b>\r\n                      &nbsp;&nbsp;\r\n                      <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                        ₹ {subtotal.toFixed(2)}\r\n                      </Form.Label>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                    <Col>\r\n                      <b>\r\n                        <Form.Label>Tax Rate({tax || '0'}%):</Form.Label>\r\n                      </b>\r\n\r\n                      <Form.Label style={{ color: 'green' }} className=\"ml-4\">\r\n                        ₹{taxRate.toFixed(2)}\r\n                      </Form.Label>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                    <Col>\r\n                      <b>\r\n                        <Form.Label>Discount({discount || '0'}%) :</Form.Label>\r\n                      </b>\r\n\r\n                      <Form.Label style={{ color: 'green' }} className=\"ml-4\">\r\n                        ₹{discountRate.toFixed(2)}\r\n                      </Form.Label>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n\r\n                    <Col>\r\n                      <hr />\r\n                      <b>\r\n                        <Form.Label>Grand Total:</Form.Label>\r\n                      </b>\r\n\r\n                      <Form.Label style={{ color: 'green' }} className=\"ml-5\">\r\n                        ₹{total % 1 === 0 ? total : total.toFixed(2)}\r\n                      </Form.Label>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Form>\r\n            </SimpleCard>\r\n          </Col>\r\n          <Col>\r\n            <Card.Body>\r\n              <Button variant=\"primary\" onClick={reviewInvoiceHandler}>\r\n                Review Invoice\r\n              </Button>\r\n              <hr />\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Tax rate:</Form.Label>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <Form.Control\r\n                      required\r\n                      type=\"number\"\r\n                      name=\"tax\"\r\n                      id=\"tax\"\r\n                      min=\"5\"\r\n                      step=\"1\"\r\n                      placeholder=\"Tax Rate\"\r\n                      value={tax}\r\n                      onChange={(event) => setTax(event.target.value)}\r\n                    />\r\n                    <InputGroup.Text>%</InputGroup.Text>\r\n                  </InputGroup>\r\n\r\n                  <span className=\"rounded-r-md bg-gray-200 py-2 px-4 text-gray-500 shadow-sm\"></span>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Discount rate:</Form.Label>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <Form.Control\r\n                      required\r\n                      type=\"number\"\r\n                      name=\"tax\"\r\n                      id=\"tax\"\r\n                      // min=\"5\"\r\n                      // step=\"1\"\r\n                      placeholder=\"Discount Rate\"\r\n                      value={discount}\r\n                      onChange={(event) => setDiscount(event.target.value)}\r\n                    />\r\n                    <InputGroup.Text>%</InputGroup.Text>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Number of Installment:</Form.Label>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <Form.Control\r\n                      value={Object.keys(installments).length}\r\n                      //onChange={(event) => setDiscount(event.target.value)}\r\n                    />\r\n                    {/* <InputGroup.Text>%</InputGroup.Text> */}\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"ml-1\">\r\n                <button type=\"button\" onClick={() => handleShow()} className=\"btn btn-success\">\r\n                  Add Installments\r\n                </button>\r\n              </Row>\r\n              <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                size=\"lg\"\r\n                centered\r\n              >\r\n                <Modal.Header>\r\n                  <Modal.Title>Create EMI Installemnt</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <button type=\"button\" onClick={addItemHandler1} className=\"btn btn-success\">\r\n                        Add New Installments\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <StyledTable>\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Installment No</TableCell>\r\n                            <TableCell align=\"center\">Date</TableCell>\r\n                            <TableCell align=\"center\">Amount</TableCell>\r\n\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {installments.map((item) => (\r\n                            <InvoiceEMI\r\n                              // align=\"center\"\r\n                              key={item.id}\r\n                              id={item.id}\r\n                              no={item.no}\r\n                              date={item.date}\r\n                              amount={item.amount}\r\n                              onDeleteItem={deleteItemHandler1}\r\n                              onEdtiItem={edtiItemHandler1}\r\n                            />\r\n                            // <InvoiceItem\r\n                            //   align=\"justify\"\r\n                            //   key={item.id}\r\n                            //   id={item.id}\r\n                            //   name={item.name}\r\n                            //   price={item.price}\r\n                            //   onDeleteItem={deleteItemHandler1}\r\n                            //   onEdtiItem={edtiItemHandler}\r\n                            // />\r\n                          ))}\r\n                        </TableBody>\r\n                      </StyledTable>\r\n                    </Col>\r\n                  </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-error\"\r\n                    style={{ marginTop: 5 + 'px' }}\r\n                    onClick={handleClose}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-success\"\r\n                    style={{ marginTop: 5 + 'px' }}\r\n                    onClick={handleClose}\r\n                  >\r\n                    ADD\r\n                  </button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n\r\n      <ReviewInvoice\r\n        show={isOpen}\r\n        setIsOpen={setIsOpen}\r\n        invoiceInfo={{\r\n          invoiceDate,\r\n          invoiceNumber,\r\n          companyEmail,\r\n          companyAddress,\r\n          companyContact,\r\n          companyGstNo,\r\n          companyStateName,\r\n          clientEmail,\r\n          clientContact,\r\n          clientAddress,\r\n          clientGstNo,\r\n          panNo,\r\n          cashierName,\r\n          customerName,\r\n          subtotal,\r\n          taxRate,\r\n          discountRate,\r\n          total,\r\n        }}\r\n        items={items}\r\n        onAddNextInvoice={addNextInvoiceHandler}\r\n      />\r\n      {/* <InvoiceModal\r\n          isOpen={isOpen}\r\n          setIsOpen={setIsOpen}\r\n          invoiceInfo={{\r\n            invoiceNumber,\r\n            cashierName,\r\n            customerName,\r\n            subtotal,\r\n            taxRate,\r\n            discountRate,\r\n            total,\r\n          }}\r\n          items={items}\r\n          onAddNextInvoice={addNextInvoiceHandler}\r\n        /> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InvoiceForm;\r\n"],"sourceRoot":""}