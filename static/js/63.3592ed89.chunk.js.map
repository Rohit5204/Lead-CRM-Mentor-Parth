{"version":3,"sources":["app/views/quotation/quotations/editQuotation.jsx","app/views/quotation/quotations/itemFields.jsx","app/views/quotation/quotations/quotationItems.jsx"],"names":["StyledTable","styled","Table","whiteSpace","paddingLeft","paddingRight","Container","theme","margin","breakpoints","down","marginBottom","Div","EditQuotation","useState","selected","setSelected","checked","setChecked","setQuotationNumber","quotationDate","setQuotationDate","comapnyAddress","setComapnyAddress","companyEmail","setCompanyEmail","companyContact","setCompanyContact","billTo","setBillTo","clientAddress","setClientAddress","clientEmail","setClientEmail","clientContact","setClientContact","gstNo","setGstNo","gst","setGst","discount","setDiscount","gsQuantity","remarks","setRemarks","bankDetails","setBankDetails","leadData","setLeadData","catalogueData","setCatalogueData","id","uid","name","qty","price","items","setItems","instalmentNumber","instalmentAmount","instalmentDate","createdBy","instalments","token","localStorage","getItem","useEffect","axios","post","leadId","userId","statusId","headers","then","res","i","data","length","current","catId","gsName","navigate","useNavigate","addQuotation","quotationNumber","gsCatalogueId","amount","grandTotal","isDraft","edtiItemHandler","event","editedItem","target","value","newItems","map","key","reduce","prev","curr","trim","Number","Math","floor","deleteItemHandler","prevItem","filter","item","className","routeSegments","path","title","style","color","Label","width","freeSolo","autoComplete","autoHighlight","options","renderInput","params","onChange","e","variant","label","size","Control","type","Group","controlId","as","rows","placeholder","Text","overflow","onClick","align","onDeleteItem","onEdtiItem","disabled","Check","fullWidth","preventDefault","console","log","alert","ItemField","onEditItem","cellData","min","max","step","required","QuotationEMI","IconButton","Icon"],"mappings":"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","file":"static/js/63.3592ed89.chunk.js","sourcesContent":["import { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Form, Row, Col, Button, InputGroup } from 'react-bootstrap';\r\nimport QuotationItem from './quotationItems';\r\nimport { uid } from 'uid';\r\nimport {\r\n    Box, MenuItem, FormControl, Select, Autocomplete, TextField,\r\n    Table,\r\n    Icon,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst EditQuotation = () => {\r\n    const [selected, setSelected] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const [quotationNumber, setQuotationNumber] = useState('');\r\n    const [quotationDate, setQuotationDate] = useState('');\r\n    const [comapnyAddress, setComapnyAddress] = useState('');\r\n    const [companyEmail, setCompanyEmail] = useState('');\r\n    const [companyContact, setCompanyContact] = useState('');\r\n    const [billTo, setBillTo] = useState('');\r\n    const [clientAddress, setClientAddress] = useState('');\r\n    const [clientEmail, setClientEmail] = useState('');\r\n    const [clientContact, setClientContact] = useState('');\r\n    const [gstNo, setGstNo] = useState('');\r\n    const [gst, setGst] = useState(18);\r\n    const [discount, setDiscount] = useState(0);\r\n\r\n    const [gsQuantity, setGsQuantity] = useState('');\r\n\r\n    const [remarks, setRemarks] = useState('');\r\n    const [bankDetails, setBankDetails] = useState('');\r\n    const [leadData, setLeadData] = useState([]);\r\n    const [catalogueData, setCatalogueData] = useState([]);\r\n    const [items, setItems] = useState([\r\n        {\r\n            id: uid(6),\r\n            name: '',\r\n            qty: 0,\r\n            price: 0,\r\n        },\r\n    ]);\r\n    const [instalments, setInstalments] = useState([\r\n        {\r\n            instalmentNumber: uid(1),\r\n            instalmentAmount: 0,\r\n            instalmentDate: '',\r\n            createdBy: '',\r\n        }\r\n    ]);\r\n    const token = localStorage.getItem('accessToken');\r\n    useEffect(() => {\r\n        axios.post(`http://213.136.72.177/cms/api/getFilteredLeadData`, {\r\n            leadId: 0, userId: 0, statusId: 0,\r\n        }, { headers: { \"x-access-token\": token } }).then((res) => {\r\n            for (var i = 0; i < res.data.data.length; i++) {\r\n                setLeadData(current => [...current, res.data.data[i].name]);\r\n            }\r\n        });\r\n        axios.post(`http://213.136.72.177/cms/api/getCatalogue`, { catId: 0 },\r\n            { headers: { \"x-access-token\": token } }).then((res) => {\r\n                for (var i = 0; i < res.data.data.length; i++) {\r\n                    setCatalogueData(current => [...current, res.data.data[i].gsName]);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n    const changePage = () => {\r\n        navigate('/quotations/manageQuotation');\r\n    };\r\n\r\n    const addQuotation = {\r\n        leadId: leadData.leadId,\r\n        quotationNumber: \"Q00001\",\r\n        quotationDate: quotationDate,\r\n        comapnyAddress: comapnyAddress,\r\n        companyEmail: companyEmail,\r\n        companyContact: companyContact,\r\n        billTo: billTo,\r\n        clientAddress: clientAddress,\r\n        clientEmail: clientEmail,\r\n        clientContact: clientContact,\r\n        gstNo: gstNo,\r\n        gsCatalogueId: catalogueData.id,\r\n        amount: amount,\r\n        gsQuantity: gsQuantity,\r\n        gst: gst,\r\n        discount: discount,\r\n        grandTotal: grandTotal,\r\n        remarks: remarks,\r\n        bankDetails: bankDetails,\r\n        instalments: instalments,\r\n        isDraft: 1,\r\n        createdBy: 1,\r\n    };\r\n    const edtiItemHandler = (event) => {\r\n        const editedItem = {\r\n            id: event.target.id,\r\n            name: event.target.name,\r\n            value: event.target.value,\r\n        };\r\n\r\n        const newItems = items.map((items) => {\r\n            for (const key in items) {\r\n                if (key === editedItem.name && items.id === editedItem.id) {\r\n                    items[key] = editedItem.value;\r\n                }\r\n            }\r\n            return items;\r\n        });\r\n\r\n        setItems(newItems);\r\n    };\r\n    const amount = items.reduce((prev, curr) => {\r\n        if (curr.name.trim().length > 0) return prev + Number(curr.price * Math.floor(curr.qty));\r\n        else return prev;\r\n    }, 0);\r\n    const taxRate = (gst * amount) / 100;\r\n    const discountRate = (discount * amount) / 100;\r\n    const grandTotal = amount - discountRate + taxRate;\r\n    //empty the form Text\r\n    const blankForm = () => {\r\n        setQuotationNumber('');\r\n        setQuotationDate('');\r\n        setComapnyAddress('');\r\n    };\r\n    //Add data in the table\r\n    const postData = () => {\r\n        console.log({ addQuotation });\r\n        axios.post(`http://213.136.72.177/cms/api/saveQuotation`, addQuotation);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        postData();\r\n        blankForm();\r\n        alert('Catalogue Successfully Created');\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setSelected(event.target.value);\r\n    };\r\n    const addItemHandler = () => {\r\n        const id = uid(6);\r\n        setItems((prevItem) => [\r\n            ...prevItem,\r\n            {\r\n                id: id,\r\n                name: '',\r\n                qty: 1,\r\n                price: '1.00',\r\n            },\r\n        ]);\r\n    };\r\n    const deleteItemHandler = (id) => {\r\n        setItems((prevItem) => prevItem.filter((item) => item.id !== id));\r\n    };\r\n    return (\r\n        <Container>\r\n            <Box className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Quotation', path: '/quotations/addQuotation' },\r\n                        { name: 'Add Quotation Page' },\r\n                    ]}\r\n                />\r\n            </Box>\r\n            <SimpleCard title=\"Request Quotation\">\r\n                <h6 style={{ color: 'green' }}>Company Detail's</h6>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Lead</Form.Label>\r\n                        <FormControl>\r\n                            <Autocomplete\r\n                                style={{ width: 450 }}\r\n                                freeSolo\r\n                                autoComplete\r\n                                autoHighlight\r\n                                options={leadData}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        onChange={(e) => setLeadData(e.target.value)}\r\n                                        variant=\"outlined\"\r\n                                        label=\"Select the Lead\"\r\n                                        size=\"small\"\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormControl>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Quotation Date</Form.Label>\r\n                        <Form.Control\r\n                            type=\"date\"\r\n                            onChange={(e) => setQuotationDate(e.target.value)}\r\n                            value={quotationDate}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                onChange={(e) => setComapnyAddress(e.target.value)}\r\n                                value={comapnyAddress}\r\n                                placeholder=\"Comapny Address\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>email</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setCompanyEmail(e.target.value)}\r\n                                value={companyEmail}\r\n                                placeholder=\"Company Email\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Contact</Form.Label>\r\n                        <InputGroup className=\"mb-1\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>phone</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setCompanyContact(e.target.value)}\r\n                                value={companyContact}\r\n                                placeholder=\"Company Contact\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <h6 style={{ color: 'green' }}>Client Detail's</h6>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Bill To / Customer Name</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>person</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setBillTo(e.target.value)}\r\n                                value={billTo}\r\n                                placeholder=\"Billing Person Name\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>GST NO</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                GST\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setGstNo(e.target.value)}\r\n                                value={gstNo}\r\n                                placeholder=\"Enter the GST Number\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Client Email</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>email</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setClientEmail(e.target.value)}\r\n                                value={clientEmail}\r\n                                placeholder=\"demo@gmail.com\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Client Contact</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <Icon>phone</Icon>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                onChange={(e) => setClientContact(e.target.value)}\r\n                                value={clientContact}\r\n                                placeholder=\"demo@gmail.com\"\r\n                            /></InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-2\">\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Client Address</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                onChange={(e) => setClientAddress(e.target.value)}\r\n                                value={clientAddress}\r\n                                placeholder=\"Customer  Address\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <br />\r\n                {/* <h6>Please Fill Detail's Properly</h6> */}\r\n                <Box className=\"text-center mt-2\" width=\"100%\" overflow=\"auto\">\r\n                    {/* Table Section */}\r\n                    <Row>\r\n                        <Col></Col>\r\n                        <Col className=\"col-sm-9\">\r\n                            <h4 style={{ color: 'green' }}>Product Quotation List</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <Col className=\"col-sm-1\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={addItemHandler}\r\n                                    className=\"btn btn-success\"\r\n                                >\r\n                                    Add Items\r\n                                </button>\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    <StyledTable>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Product Name</TableCell>\r\n                                <TableCell align=\"center\">Quantity</TableCell>\r\n                                <TableCell align=\"center\">Unit Price</TableCell>\r\n                                <TableCell align=\"center\">Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {items.map((item) => (\r\n                                <QuotationItem\r\n                                    align=\"justify\"\r\n                                    key={item.id}\r\n                                    id={item.id}\r\n                                    name={item.name}\r\n                                    qty={item.qty}\r\n                                    price={item.price}\r\n                                    onDeleteItem={deleteItemHandler}\r\n                                    onEdtiItem={edtiItemHandler}\r\n                                />\r\n                            ))}\r\n                        </TableBody>\r\n                    </StyledTable>\r\n                </Box>\r\n                <Row>\r\n                    {/* <Col>\r\n            <Form.Label>Catalogue</Form.Label>\r\n            <FormControl>\r\n              <Autocomplete\r\n                style={{ width: 470 }}\r\n                freeSolo\r\n                autoComplete\r\n                autoHighlight\r\n                options={catalogueData}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    onChange={(e) => setCatalogueData(e.target.value)}\r\n                    variant=\"outlined\"\r\n                    label=\"Select the Product or Service\"\r\n                    size=\"small\"\r\n                  />\r\n                )}\r\n              />\r\n            </FormControl>\r\n          </Col> */}\r\n                    <Col>\r\n                        <Form.Label>Tax Rate </Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <Form.Control\r\n                                value={gst}\r\n                                onChange={(e) => setGst(e.target.value)}\r\n                                placeholder=\"Enter the Tax Rate\"\r\n                            /> <InputGroup.Text>%</InputGroup.Text>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Discount rate:</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <Form.Control\r\n                                placeholder=\"Discount Rate\"\r\n                                value={discount}\r\n                                onChange={(event) => setDiscount(event.target.value)}\r\n                            />\r\n                            <InputGroup.Text>%</InputGroup.Text>\r\n                        </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Amount</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\" style={{ color: 'green' }}>\r\n                                <b> ₹</b>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                disabled\r\n                                placeholder=\"Sub Total Amount\"\r\n                                // onChange={(e) => setAmount(e.target.value)}\r\n                                value={amount}\r\n                            /></InputGroup>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Form.Label>Grand Total</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\" style={{ color: 'green' }}>\r\n                                <b> ₹</b>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                                disabled\r\n                                placeholder=\"Total Amount\"\r\n                                // onChange={(e) => setGrandTotal(e.target.value)}\r\n                                value={grandTotal}\r\n                            /></InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Note or Remark</Form.Label>\r\n                        <Form.Control\r\n                            placeholder=\"Write a Remark\"\r\n                            onChange={(e) => setRemarks(e.target.value)}\r\n                            value={remarks}\r\n                        />\r\n                    </Col>\r\n                    <Col className=\"mt-2\">\r\n                        <Form.Label>Bank Details</Form.Label>\r\n                        {/* <input type=\"checkbox\" /> */}\r\n                        <Form.Check\r\n                            type=\"switch\"\r\n                            onChange={() => setChecked(!checked)}\r\n                            checked={checked}\r\n                            id=\"custom-switch\"\r\n                            label=\"If you have Payment Detail's,Please Check the Box\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {checked ? (\r\n                            <Row>\r\n                                <Col>\r\n                                    {/* <Box sx={{ minWidth: 120 }} className=\"mt-1\"> */}\r\n                                    <FormControl fullWidth>\r\n                                        <label>Choose Payment Option</label>\r\n                                        <Select value={selected} label=\"Age\" onChange={handleChange}>\r\n                                            <MenuItem value=\"\">Choose Payment Option</MenuItem>\r\n                                            <MenuItem value=\"netBanking\">Net Banking</MenuItem>\r\n                                            <MenuItem value=\"bank\">Bank Transfer</MenuItem>\r\n                                            <MenuItem value=\"gPay\">G-Pay</MenuItem>\r\n                                            <MenuItem value=\"amazonPay\">Amazon Pay</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {/* </Box> */}\r\n                                    {/* <FormControl sx={{ m: 0, minWidth: 450 }} size=\"small\" className=\"mt-1\">\r\n                    <Form.Label>Choose Payment Option</Form.Label>\r\n                    <Select\r\n                      value={selected}\r\n                      // label=\"selected\"\r\n                      onChange={(e) => setSelected(!selected)}\r\n                    >\r\n                      <MenuItem value=\"\">Choose Payment Option</MenuItem>\r\n                      <MenuItem value=\"Net Banking\">Net Banking</MenuItem>\r\n                      <MenuItem value=\"Bank Transfer\">Bank Transfer</MenuItem>\r\n                      <MenuItem value=\"G-Pay\">G-Pay</MenuItem>\r\n                      <MenuItem value=\"Amazon Pay\">Amazon Pay</MenuItem>\r\n                    </Select>\r\n                  </FormControl> */}\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Label>Transaction Refrence Number</Form.Label>\r\n                                    <Form.Control\r\n                                        fullWidth\r\n                                        placeholder=\"Enter the Refrence Number of Transaction\"\r\n                                        onChange={(e) => setBankDetails(e.target.value)}\r\n                                        value={bankDetails}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            <div></div>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {selected ? (\r\n                            <>\r\n                                <br />\r\n                                <h6>Please Fill Detail's Only For Bank Transfer</h6>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Label>Bank Name</Form.Label>\r\n                                        <Form.Control placeholder=\"Enter the Bank Name\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label>IFSC CODE</Form.Label>\r\n                                        <Form.Control placeholder=\"Enter the IFSC CODE\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : (\r\n                            <div></div>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n            </SimpleCard>\r\n            <Div className=\"mt-2\">\r\n                <Row>\r\n                    <Col>\r\n                        <Button variant=\"contained\" onClick={changePage}>\r\n                            Cancel\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button variant=\"success\" onClick={handleSubmit}>\r\n                            Add\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Div>\r\n        </Container>\r\n    );\r\n};\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 20, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 30 } },\r\n    },\r\n}));\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst Div = styled('div')(() => ({\r\n    margin: '0px 0px 0px 430px',\r\n}));\r\n\r\nexport default EditQuotation;\r\n","import React from 'react';\r\n\r\nconst ItemField = ({ onEditItem, cellData }) => {\r\n    return (\r\n        <input\r\n            className={cellData.className}\r\n            type={cellData.type}\r\n            placeholder={cellData.placeholder}\r\n            min={cellData.min}\r\n            max={cellData.max}\r\n            step={cellData.step}\r\n            name={cellData.name}\r\n            id={cellData.id}\r\n            value={cellData.value}\r\n            onChange={onEditItem}\r\n            required\r\n        />\r\n    );\r\n};\r\n\r\nexport default ItemField;\r\n","import React from 'react';\r\nimport ItemField from './itemFields';\r\nimport { Icon, IconButton } from '@mui/material';\r\nconst QuotationEMI = ({ id, instalmentNumber, instalmentDate, instalmentAmount, onDeleteItem, onEdtiItem }) => {\r\n    const deleteItemHandler = () => {\r\n        onDeleteItem(instalmentNumber);\r\n    };\r\n    return (\r\n        <tr>\r\n            <td className=\"w-full\">\r\n                {/* <input type=\"text\" value={no} name={no} id={id} onChange={(event) => onEdtiItem(event)} /> */}\r\n                <ItemField\r\n                    onEditItem={(event) => onEdtiItem(event)}\r\n                    cellData={{\r\n                        placeholder: 'Installment No.',\r\n                        type: 'text',\r\n                        name: 'instalmentNumber',\r\n                        id: instalmentNumber,\r\n                        value: instalmentNumber,\r\n                    }}\r\n                />\r\n            </td>\r\n            <td className=\"w-full\">\r\n                {/* <input type=\"date\" value={date} name={date} onChange={(event) => onEdtiItem(event)} /> */}\r\n                <ItemField\r\n                    onEditItem={(event) => onEdtiItem(event)}\r\n                    cellData={{\r\n                        type: 'date',\r\n                        name: 'instalmentDate',\r\n                        id: instalmentNumber,\r\n                        value: instalmentDate,\r\n                    }}\r\n                />\r\n            </td>\r\n            <td className=\"w-full\">\r\n                {/* <input type=\"number\" value={amount} name={amount} onChange={(event) => onEdtiItem(event)} /> */}\r\n                <ItemField\r\n                    onEditItem={(event) => onEdtiItem(event)}\r\n                    cellData={{\r\n                        placeholder: 'Installment Amount',\r\n                        type: 'text',\r\n                        name: 'instalmentAmount',\r\n                        id: instalmentNumber,\r\n                        value: instalmentAmount,\r\n                    }}\r\n                />\r\n            </td>\r\n\r\n            <td className=\"flex items-center justify-center\">\r\n                <IconButton onClick={deleteItemHandler}>\r\n                    <Icon color=\"warning\">delete</Icon>\r\n                </IconButton>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default QuotationEMI;\r\n"],"sourceRoot":""}