{"version":3,"sources":["app/views/invoice/invoices/EMIFields.jsx","app/views/invoice/invoices/invoiceEMI.jsx","app/views/invoice/invoices/editEMI.jsx","app/views/invoice/invoices/updateInstallments.jsx"],"names":["InvoiceFieldEMI","onEditItem","cellData","className","type","placeholder","min","max","step","name","id","value","onChange","required","InvoiceEMI","instalmentNumber","instalmentDate","instalmentAmount","onDeleteItem","onEdtiItem","event","IconButton","onClick","Icon","color","Div","styled","margin","EditEMI","theEditEMI","handleDialog","useState","setInstalmentNumber","setinstalmentAmount","setinstalmentDate","fineAmount","setfineAmount","UpdateData","instalmentId","hasPaid","updatedBy","Form","onSubmit","e","preventDefault","Row","Col","Label","Control","disabled","target","FormGroup","FormControlLabel","control","Switch","label","style","marginTop","items","localStorage","getItem","axios","post","headers","then","useEffect","Container","theme","breakpoints","down","marginBottom","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","UpdateInstallments","location","useLocation","token","APIInstallment","setAPIInstallment","state","invoiceId","obj2","setObj2","show","setShow","handleClose","invoiceid","empId","response","i","data","length","instalments","Box","routeSegments","path","to","invoiceNumber","Date","createdDate","toLocaleDateString","InputGroup","billTo","readOnly","Object","keys","Group","controlId","grandTotal","TableHead","borderLeft","borderRight","TableRow","TableCell","align","TableBody","map","emi","index","handleShow1","Modal","onHide","backdrop","keyboard","size","centered","Header","Title","Body","Footer"],"mappings":"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","file":"static/js/53.fb883c46.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst InvoiceFieldEMI = ({ onEditItem, cellData }) => {\r\n  return (\r\n    <input\r\n      className={cellData.className}\r\n      type={cellData.type}\r\n      placeholder={cellData.placeholder}\r\n      min={cellData.min}\r\n      max={cellData.max}\r\n      step={cellData.step}\r\n      name={cellData.name}\r\n      id={cellData.id}\r\n      value={cellData.value}\r\n      onChange={onEditItem}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nexport default InvoiceFieldEMI;\r\n","import React from 'react';\r\nimport InvoiceFieldEMI from './EMIFields';\r\nimport { Icon, IconButton } from '@mui/material';\r\nconst InvoiceEMI = ({ id, instalmentNumber, instalmentDate, instalmentAmount, onDeleteItem, onEdtiItem }) => {\r\n  const deleteItemHandler = () => {\r\n    onDeleteItem(instalmentNumber);\r\n  };\r\n  return (\r\n    <tr>\r\n      <td className=\"w-full\">\r\n        {/* <input type=\"text\" value={no} name={no} id={id} onChange={(event) => onEdtiItem(event)} /> */}\r\n        <InvoiceFieldEMI\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            placeholder: 'Installment No.',\r\n            type: 'text',\r\n            name: 'instalmentNumber',\r\n            id: instalmentNumber,\r\n            value: instalmentNumber,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"w-full\">\r\n        {/* <input type=\"date\" value={date} name={date} onChange={(event) => onEdtiItem(event)} /> */}\r\n        <InvoiceFieldEMI\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            type: 'date',\r\n            name: 'instalmentDate',\r\n            id: instalmentNumber,\r\n            value: instalmentDate,\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"w-full\">\r\n        {/* <input type=\"number\" value={amount} name={amount} onChange={(event) => onEdtiItem(event)} /> */}\r\n        <InvoiceFieldEMI\r\n          onEditItem={(event) => onEdtiItem(event)}\r\n          cellData={{\r\n            placeholder: 'Installment Amount',\r\n            type: 'text',\r\n            name: 'instalmentAmount',\r\n            id: instalmentNumber,\r\n            value: instalmentAmount,\r\n          }}\r\n        />\r\n      </td>\r\n\r\n      <td className=\"flex items-center justify-center\">\r\n        <IconButton onClick={deleteItemHandler}>\r\n          <Icon color=\"warning\">delete</Icon>\r\n        </IconButton>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default InvoiceEMI;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport { Box, MenuItem, FormGroup, FormControlLabel, Switch } from '@mui/material';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Div = styled('div')(() => ({\r\n    margin: '6px 0px 0px 350px',\r\n}));\r\nconst EditEMI = ({ theEditEMI, handleDialog }) => {\r\n    // console.log(theEditEMI)\r\n    const [id, setId] = useState(theEditEMI.id);\r\n    const [instalmentNumber, setInstalmentNumber] = useState(theEditEMI.instalmentNumber);\r\n    const [instalmentAmount, setinstalmentAmount] = useState(theEditEMI.instalmentAmount);\r\n    const [instalmentDate, setinstalmentDate] = useState(theEditEMI.instalmentDate);\r\n    const [fineAmount, setfineAmount] = useState(theEditEMI.fineAmount);\r\n\r\n    const UpdateData = {\r\n        instalmentId: id,\r\n        instalmentNumber: instalmentNumber,\r\n        instalmentAmount: instalmentAmount,\r\n        instalmentDate: instalmentDate,\r\n        fineAmount: fineAmount,\r\n        hasPaid: 1,\r\n        updatedBy: 1\r\n    };\r\n    const updateInstallment = (e) => {\r\n        const items = localStorage.getItem('accessToken');\r\n        // console.log({ UpdateData });\r\n        e.preventDefault();\r\n        axios.post(`http://35.89.6.16:4002/api/updateProductInstalment`, UpdateData, { headers: { \"x-access-token\": items } }).then(() => useEffect);\r\n        handleDialog();\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit} >\r\n                <Row>\r\n                    <Col className=\"mt-1\">\r\n                        <Form.Label>Installment No</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            onChange={(e) => setInstalmentNumber(e.target.value)}\r\n                            value={instalmentNumber}\r\n                            placeholder=\"Enter the Name\"\r\n                        />\r\n                    </Col>\r\n                    <Col className=\"mt-1\">\r\n                        <Form.Label>Installment Amount</Form.Label>\r\n                        <Form.Control\r\n                            onChange={(e) => setinstalmentAmount(e.target.value)}\r\n                            value={instalmentAmount}\r\n                            placeholder=\"Enter the EMI Amount\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"mt-1\">\r\n                        <Form.Label>Installment Date</Form.Label>\r\n                        <Form.Control\r\n                            type='date'\r\n                            onChange={(e) => setinstalmentDate(e.target.value)}\r\n                            value={instalmentDate}\r\n                            placeholder=\"Enter the Price\"\r\n                        />\r\n                    </Col>\r\n                    <Col className=\"mt-1\">\r\n                        <Form.Label>Penatly Charges</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            onChange={(e) => setfineAmount(e.target.value)}\r\n                            value={fineAmount}\r\n                            placeholder=\"Enter the Fine Amount\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-1\">\r\n                    <Col className=\"mt-1\">\r\n                        <Form.Label>Payment Status</Form.Label>\r\n                        <FormGroup>\r\n                            <FormControlLabel control={<Switch />} label=\"Enable if Payment Recieved\" />\r\n                        </FormGroup></Col>\r\n                </Row>\r\n                <Div>\r\n                    <Row>\r\n                        <Col>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-success\"\r\n                                style={{ marginTop: 5 + 'px' }}\r\n                                onClick={updateInstallment}\r\n                            > Update\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                </Div>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditEMI;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Card, Modal } from 'react-bootstrap';\r\nimport { Breadcrumb } from 'app/components';\r\nimport { styled } from '@mui/system';\r\nimport InvoiceEMI from 'app/views/invoice/invoices/invoiceEMI';\r\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\r\nimport EditEMI from \"./editEMI\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport axios from 'axios';\r\nimport {\r\n    Box,\r\n    Icon,\r\n    Autocomplete,\r\n    TextField,\r\n    FormControl,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from '@mui/material';\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n    },\r\n}));\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': { '& th': { paddingLeft: 20, paddingRight: 0 } },\r\n    },\r\n    '& tbody': {\r\n        '& tr': { '& td': { paddingLeft: 30 } },\r\n    },\r\n}));\r\n\r\nconst UpdateInstallments = () => {\r\n    const location = useLocation();\r\n    // console.log(location.state.id)\r\n    const token = localStorage.getItem('accessToken');\r\n\r\n    const [APIInstallment, setAPIInstallment] = useState([]);\r\n    const [invoiceId, setInvoiceId] = useState(location.state.id);\r\n\r\n    // const [instalmentId, setInstalmentId] = useState();\r\n    // const [instalmentNumber, setInstalmentNumber] = useState(\"\");\r\n    // const [instalmentAmount, setInstalmentAmount] = useState(\"\");\r\n    // const [instalmentDate, setInstalmentDate] = useState(\"\");\r\n    // const [fineAmount, setFineAmount] = useState(\"\");\r\n\r\n    // const UpdateData = {\r\n    //     instalmentId: instalmentId,\r\n    //     instalmentNumber: instalmentNumber,\r\n    //     instalmentAmount: instalmentAmount,\r\n    //     instalmentDate: instalmentDate,\r\n    //     fineAmount: fineAmount,\r\n    //     hasPaid: 1,\r\n    //     updatedBy: 1\r\n    // };\r\n\r\n    const [obj2, setObj2] = useState(null);\r\n    // Dilaog Box \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow1 = (emi) => {\r\n        setObj2(emi);\r\n        setShow(true);\r\n    };\r\n\r\n    const getInstallmentsData = () => {\r\n        axios.post(`http://35.89.6.16:4002/api/getInvoiceData`, { invoiceid: invoiceId, empId: 0 },\r\n            { headers: { \"x-access-token\": token } })\r\n            .then((response) => {\r\n                for (var i = 0; i < response.data.data.length; i++) {\r\n                    setAPIInstallment(response.data.data[i].instalments);\r\n                }\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInstallmentsData()\r\n    }, [APIInstallment]);\r\n\r\n    return (\r\n        <Container>\r\n            <Box className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Invoices', path: '/invoices/ManageInvoiceList' },\r\n                        { name: 'Update Invoice Installments ' },\r\n                    ]}\r\n                />\r\n\r\n            </Box>\r\n            <Row>\r\n                <Col className=\"col-md-12 bg-light text-right\">\r\n                    <Link to='/invoices/ManageInvoiceList'>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Go Back</button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Form.Label>Invoice Number</Form.Label>\r\n                    <Form.Control\r\n                        disabled\r\n                        value={location.state.invoiceNumber}\r\n                    />\r\n                    <br />\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Invoice Created Date</Form.Label>\r\n                    <Form.Control\r\n                        disabled\r\n                        value={new Date(location.state.createdDate).toLocaleDateString()}\r\n                    />\r\n                    <br />\r\n                </Col>\r\n            </Row>\r\n            {/* <Form.Label style={{ color: 'red' }}>\r\n                Note :- Installment Will be In 3,6,9 Months EMI\r\n            </Form.Label> */}\r\n            <Row>\r\n                <Col>\r\n                    <Form.Label>Customer Name </Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <Form.Control\r\n                            disabled\r\n                            value={location.state.billTo}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Number of Installment</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <Form.Control\r\n                            readOnly\r\n                            value={Object.keys(location.state.instalments).length}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Grand Total</Form.Label>\r\n                        <Form.Control\r\n                            disabled\r\n                            value={location.state.grandTotal}\r\n                            placeholder=\"Grand Total\"\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Inital Payment</Form.Label>\r\n                        <Form.Control\r\n                            // value={location.state.initalPayment}\r\n                            placeholder=\"Inital Payment\"\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Pending Amount</Form.Label>\r\n                        <Form.Control readOnly\r\n                        // value={pending} \r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {Object.keys(APIInstallment).length > 0 ? (\r\n                <div>\r\n                    <h5 className=\"text-center\" style={{ color: 'green' }}>Installments Details</h5>\r\n                    <Row className=\"mt-1\">\r\n                        <Col>\r\n                            <StyledTable className=\"table table-striped table-bordered\" style={{ 'borderRadius': '2px' }}>\r\n                                <TableHead style={{ borderLeft: '1px solid red', borderRight: '1px solid red' }} className='text-center'>\r\n                                    <TableRow>\r\n                                        {/* <TableCell align=\"center\">Sr. No</TableCell> */}\r\n                                        <TableCell align=\"center\">Installment No</TableCell>\r\n                                        <TableCell align=\"center\">Date</TableCell>\r\n                                        <TableCell align=\"center\">Amount</TableCell>\r\n                                        <TableCell align=\"center\">Action</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {APIInstallment.map((emi, index) => {\r\n                                        return (\r\n                                            <TableRow key={index}>\r\n                                                {/* <TableCell align=\"center\">{emi.id}</TableCell> */}\r\n                                                <TableCell align=\"center\">{emi.instalmentNumber}</TableCell>\r\n                                                <TableCell align=\"center\">{new Date(emi.instalmentDate).toLocaleDateString()}</TableCell>\r\n                                                <TableCell align=\"center\">{emi.instalmentAmount}</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <IconButton onClick={() => handleShow1(emi)}>\r\n                                                        <Icon color=\"success\">edit</Icon>\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Update Installment</Modal.Title>\r\n                    <IconButton type=\"button\" onClick={handleClose}>\r\n                        <ClearIcon />\r\n                    </IconButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <EditEMI theEditEMI={obj2} handleDialog={handleClose}></EditEMI>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-error\"\r\n                        style={{ marginTop: 5 + 'px' }}\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container >\r\n    );\r\n};\r\n\r\nexport default UpdateInstallments;\r\n"],"sourceRoot":""}